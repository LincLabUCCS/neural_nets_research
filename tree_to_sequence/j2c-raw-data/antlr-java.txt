/tool/grammarinterpreterrulecontext.java	getOuterAltNum	{"statements":[{"expression":{"name":{"identifier":"outerAltNum"}}}]}
/tool/grammarinterpreterrulecontext.java	setOuterAltNum	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outerAltNum"},"scope":{}},"value":{"name":{"identifier":"outerAltNum"}}}}]}
/tool/grammarinterpreterrulecontext.java	getAltNumber	{"statements":[{"expression":{"name":{"identifier":"getOuterAltNum"}}}]}
/tool/grammarinterpreterrulecontext.java	setAltNumber	{"statements":[{"expression":{"name":{"identifier":"setOuterAltNum"},"arguments":[{"name":{"identifier":"altNumber"}}]}}]}
/tool/alternative.java	resolvesToToken	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenRefs"}},"arguments":[{"name":{"identifier":"x"}}]},"right":{}},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"TOKEN_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"value":"false"}}]}
/tool/alternative.java	resolvesToAttributeDict	{"statements":[{"condition":{"name":{"identifier":"resolvesToToken"},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"node"}}]},"thenStmt":{"expression":{"value":"true"}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleRefs"}},"arguments":[{"name":{"identifier":"x"}}]},"right":{}},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"value":"false"}}]}
/tool/alternative.java	resolveToAttribute	{"statements":[{"expression":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"rule"}},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"node"}}]}}]}
/tool/alternative.java	resolveToAttribute	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenRefs"}},"arguments":[{"name":{"identifier":"x"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getPredefinedScope"},"scope":{"name":{"identifier":"rule"}},"arguments":[{"name":{"identifier":"TOKEN_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"arguments":[{"name":{"identifier":"y"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleRefs"}},"arguments":[{"name":{"identifier":"x"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"resolveRetvalOrProperty"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"name":{"identifier":"x"}}]},"arguments":[{"name":{"identifier":"y"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPredefinedScope"},"scope":{"name":{"identifier":"rule"}},"arguments":[{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}}]},"name":{"identifier":"scope"},"type":{"name":{"identifier":"AttributeDict"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"scope"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"scope"}},"arguments":[{"name":{"identifier":"y"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"resolveRetvalOrProperty"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"anyLabelDef"}}}}]},"arguments":[{"name":{"identifier":"y"}}]}}]}},{"expression":{}}]}
/tool/alternative.java	resolvesToLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"expression":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"TOKEN_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}}}}}]}
/tool/alternative.java	resolvesToListLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"expression":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"TOKEN_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}}}}}]}
/tool/alternative.java	getAnyLabelDef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labelDefs"}},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"labels"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labels"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"value":"0"}]}}},{"expression":{}}]}
/tool/alternative.java	resolveToRule	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleRefs"}},"arguments":[{"name":{"identifier":"x"}}]},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"name":{"identifier":"x"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"anyLabelDef"}}}}]}}]}},{"expression":{}}]}
/tool/attribute.java	toString	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"initValue"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":":"}},"right":{"name":{"identifier":"type"}}},"right":{"value":"="}},"right":{"name":{"identifier":"initValue"}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"type"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":":"}},"right":{"name":{"identifier":"type"}}}}]}},{"expression":{"name":{"identifier":"name"}}}]}
/tool/builddependencygenerator.java	getGeneratedFileList	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"File"}}]}},"name":{"identifier":"files"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"File"}}]}}]}},{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"generator"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getRecognizerFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"true"}]}]}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getRecognizerFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"false"}]}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getVocabFileName"},"scope":{"name":{"identifier":"generator"}}}]}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"headerExtST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"generator"}}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"name":{"identifier":"isDefined"},"scope":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"generator"}}},"arguments":[{"value":"headerFile"}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"headerExtST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"generator"}}},"arguments":[{"value":"headerFileExtension"}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammarTypeToFileNameSuffix"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"suffix"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"suffix"}}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"headerExtST"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"fileName"}}]}]}}]}},{"condition":{"name":{"identifier":"isCombined"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammarTypeToFileNameSuffix"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"suffix"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"suffix"}}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}},"name":{"identifier":"lexer"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"lexer"}}]}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"suffix"}}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}},"name":{"identifier":"lexerTokens"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"lexerTokens"}}]}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"headerExtST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"suffix"}}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"headerExtST"}}}},"name":{"identifier":"header"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"header"}}]}]}}]}}]}},{"condition":{"name":{"identifier":"gen_listener"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"generator"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getListenerFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"true"}]}]}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getListenerFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"false"}]}]}]}},{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"generator"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getBaseListenerFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"true"}]}]}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getBaseListenerFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"false"}]}]}]}}]}},{"condition":{"name":{"identifier":"gen_visitor"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"generator"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getVisitorFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"true"}]}]}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getVisitorFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"false"}]}]}]}},{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"generator"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getBaseVisitorFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"true"}]}]}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"getBaseVisitorFileName"},"scope":{"name":{"identifier":"generator"}},"arguments":[{"value":"false"}]}]}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllImportedGrammars"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"imports"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imports"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"getOutputFile"},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]}]}}]},"iterable":{"name":{"identifier":"imports"}},"variable":{"variables":[{"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}}]}},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"files"}}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"name":{"identifier":"files"}}}]}
/tool/builddependencygenerator.java	getOutputFile	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutputDirectory"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"outputDir"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"outputDir"}}},"arguments":[{"value":"."}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"name":{"identifier":"getOutputDirectory"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"fileName"}}]}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"outputDir"}}},"arguments":[{"value":"."}]},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"}}]}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"outputDir"}}},"arguments":[{"value":"."}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"outputDir"}}},"name":{"identifier":"fname"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fname"}},"arguments":[{"value":"."}]},"name":{"identifier":"dot"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"outputDir"}}},"arguments":[{"value":"0"},{"name":{"identifier":"dot"}}]}]}}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"outputDir"}}},"arguments":[{"value":" "}]},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"outputDir"}}},"arguments":[{"value":" "},{"value":"\\ "}]},"name":{"identifier":"escSpaces"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"escSpaces"}}]}}}]}},{"expression":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDir"}},{"name":{"identifier":"fileName"}}]}}]}
/tool/builddependencygenerator.java	getDependenciesFileList	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNonImportDependenciesFileList"}},"name":{"identifier":"files"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"File"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllImportedGrammars"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"imports"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imports"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"libDirectory"},"scope":{"name":{"identifier":"tool"}}},"name":{"identifier":"libdir"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"groomQualifiedFileName"},"arguments":[{"name":{"identifier":"libdir"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"}}]}]}}]},"iterable":{"name":{"identifier":"imports"}},"variable":{"variables":[{"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}}]}},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"files"}}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"name":{"identifier":"files"}}}]}
/tool/builddependencygenerator.java	getNonImportDependenciesFileList	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"File"}}]}},"name":{"identifier":"files"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"File"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"value":"tokenVocab"}]},"name":{"identifier":"tokenVocab"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tokenVocab"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"tokenVocab"}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"name":{"identifier":"vocabFile"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"libDirectory"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"value":"."}]},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"vocabFile"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"libDirectory"},"scope":{"name":{"identifier":"tool"}}},{"name":{"identifier":"fileName"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"vocabFile"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"}}]}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"files"}},"arguments":[{"name":{"identifier":"vocabFile"}}]}}]}},{"expression":{"name":{"identifier":"files"}}}]}
/tool/builddependencygenerator.java	getDependencies	{"statements":[{"expression":{"name":{"identifier":"loadDependencyTemplates"}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"templates"}},"arguments":[{"value":"dependencies"}]},"name":{"identifier":"dependenciesST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dependenciesST"}},"arguments":[{"value":"in"},{"name":{"identifier":"getDependenciesFileList"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dependenciesST"}},"arguments":[{"value":"out"},{"name":{"identifier":"getGeneratedFileList"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dependenciesST"}},"arguments":[{"value":"grammarFileName"},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]}},{"expression":{"name":{"identifier":"dependenciesST"}}}]}
/tool/builddependencygenerator.java	loadDependencyTemplates	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"templates"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"value":"org/antlr/v4/tool/templates/depend.stg"},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"templates"}},"value":{"type":{"name":{"identifier":"STGroupFile"}},"arguments":[{"name":{"identifier":"fileName"}},{"value":"UTF-8"}]}}}]}
/tool/builddependencygenerator.java	getGenerator	{"statements":[{"expression":{"name":{"identifier":"generator"}}}]}
/tool/builddependencygenerator.java	groomQualifiedFileName	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"outputDir"}},"arguments":[{"value":"."}]},"elseStmt":{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"outputDir"}},"arguments":[{"value":" "}]},"right":{"value":"0"}},"elseStmt":{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"outputDir"}},"right":{"name":{"identifier":"separator"},"scope":{"name":{"identifier":"File"}}}},"right":{"name":{"identifier":"fileName"}}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"outputDir"}},"arguments":[{"value":" "},{"value":"\\ "}]},"name":{"identifier":"escSpaces"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"escSpaces"}},"right":{"name":{"identifier":"separator"},"scope":{"name":{"identifier":"File"}}}},"right":{"name":{"identifier":"fileName"}}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"fileName"}}}]}}]}
/tool/grammartransformpipeline.java	process	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"root"}},"right":{}},"thenStmt":{}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"before: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"root"}}}}]}},{"expression":{"name":{"identifier":"integrateImportedGrammars"},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"reduceBlocksToSets"},"arguments":[{"name":{"identifier":"root"}}]}},{"expression":{"name":{"identifier":"expandParameterizedLoops"},"arguments":[{"name":{"identifier":"root"}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"after: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"root"}}}}]}}]}
/tool/grammartransformpipeline.java	reduceBlocksToSets	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTreeNodeStream"}},"arguments":[{"type":{"name":{"identifier":"GrammarASTAdaptor"}}},{"name":{"identifier":"root"}}]},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"CommonTreeNodeStream"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}}},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BlockSetTransformer"}},"arguments":[{"name":{"identifier":"nodes"}},{"name":{"identifier":"g"}}]},"name":{"identifier":"transformer"},"type":{"name":{"identifier":"BlockSetTransformer"}}}]}},{"expression":{"name":{"identifier":"setTreeAdaptor"},"scope":{"name":{"identifier":"transformer"}},"arguments":[{"name":{"identifier":"adaptor"}}]}},{"expression":{"name":{"identifier":"downup"},"scope":{"name":{"identifier":"transformer"}},"arguments":[{"name":{"identifier":"root"}}]}}]}
/tool/grammartransformpipeline.java	expandParameterizedLoops	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreeVisitor"}},"arguments":[{"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]},"name":{"identifier":"v"},"type":{"name":{"identifier":"TreeVisitor"}}}]}},{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{"name":{"identifier":"root"}},{"type":{"name":{"identifier":"TreeVisitorAction"}},"anonymousClassBody":[{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}}},"right":{"value":"3"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"expandParameterizedLoop"},"arguments":[{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"expression":{"name":{"identifier":"t"}}}]},"type":{"name":{"identifier":"Object"}},"name":{"identifier":"pre"},"parameters":[{"isVarArgs":"false","name":{"identifier":"t"},"type":{"name":{"identifier":"Object"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"t"}}}]},"type":{"name":{"identifier":"Object"}},"name":{"identifier":"post"},"parameters":[{"isVarArgs":"false","name":{"identifier":"t"},"type":{"name":{"identifier":"Object"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}}]}
/tool/grammartransformpipeline.java	pre	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}}},"right":{"value":"3"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"expandParameterizedLoop"},"arguments":[{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammartransformpipeline.java	post	{"statements":[{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammartransformpipeline.java	expandParameterizedLoop	{"statements":[{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammartransformpipeline.java	setGrammarPtr	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tree"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreeVisitor"}},"arguments":[{"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]},"name":{"identifier":"v"},"type":{"name":{"identifier":"TreeVisitor"}}}]}},{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{"name":{"identifier":"tree"}},{"type":{"name":{"identifier":"TreeVisitorAction"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}}},"value":{"name":{"identifier":"g"}}}},{"expression":{"name":{"identifier":"t"}}}]},"type":{"name":{"identifier":"Object"}},"name":{"identifier":"pre"},"parameters":[{"isVarArgs":"false","name":{"identifier":"t"},"type":{"name":{"identifier":"Object"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"t"}}}]},"type":{"name":{"identifier":"Object"}},"name":{"identifier":"post"},"parameters":[{"isVarArgs":"false","name":{"identifier":"t"},"type":{"name":{"identifier":"Object"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}}]}
/tool/grammartransformpipeline.java	pre	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}}},"value":{"name":{"identifier":"g"}}}},{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammartransformpipeline.java	post	{"statements":[{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammartransformpipeline.java	augmentTokensWithOriginalPosition	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tree"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"name":{"identifier":"ELEMENT_OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"optionsSubTrees"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"optionsSubTrees"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"t"}}},"name":{"identifier":"elWithOpt"},"type":{"name":{"identifier":"CommonTree"}}}]}},{"condition":{"expression":{"name":{"identifier":"elWithOpt"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptions"},"scope":{"inner":{"expression":{"name":{"identifier":"elWithOpt"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}}},"name":{"identifier":"options"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"options"}},"arguments":[{"name":{"identifier":"TOKENINDEX_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarToken"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"elWithOpt"}}}]},"name":{"identifier":"newTok"},"type":{"name":{"identifier":"GrammarToken"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"originalTokenIndex"},"scope":{"name":{"identifier":"newTok"}}},"value":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"options"}},"arguments":[{"name":{"identifier":"TOKENINDEX_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"elWithOpt"}}},"value":{"name":{"identifier":"newTok"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodeWithTokenIndex"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"newTok"}}}]},"name":{"identifier":"originalNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"originalNode"}},"right":{}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"setTokenStartIndex"},"scope":{"name":{"identifier":"elWithOpt"}},"arguments":[{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"newTok"}}}]}},{"expression":{"name":{"identifier":"setTokenStopIndex"},"scope":{"name":{"identifier":"elWithOpt"}},"arguments":[{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"newTok"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setTokenStartIndex"},"scope":{"name":{"identifier":"elWithOpt"}},"arguments":[{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"originalNode"}}}]}},{"expression":{"name":{"identifier":"setTokenStopIndex"},"scope":{"name":{"identifier":"elWithOpt"}},"arguments":[{"name":{"identifier":"getTokenStopIndex"},"scope":{"name":{"identifier":"originalNode"}}}]}}]}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"optionsSubTrees"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/tool/grammartransformpipeline.java	integrateImportedGrammars	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllImportedGrammars"},"scope":{"name":{"identifier":"rootGrammar"}}},"name":{"identifier":"imports"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"imports"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rootGrammar"}}},"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"root"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"id"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"id"}}}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"root"}},"arguments":[{"name":{"identifier":"CHANNELS"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"channelsRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"root"}},"arguments":[{"name":{"identifier":"TOKENS_SPEC"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"tokensRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"root"}},"arguments":[{"name":{"identifier":"AT"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"actionRoots"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"root"}},"arguments":[{"name":{"identifier":"RULES"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"RULES"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"rootRuleNames"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"RULES"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"rootRules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rootRuleNames"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"r"}},"arguments":[{"value":"0"}]}}]}},"iterable":{"name":{"identifier":"rootRules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"root"}},"arguments":[{"name":{"identifier":"MODE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"rootModes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"rootModeNames"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rootModeNames"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"m"}},"arguments":[{"value":"0"}]}}]}},"iterable":{"name":{"identifier":"rootModes"}},"variable":{"variables":[{"name":{"identifier":"m"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"addedModes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"CHANNELS"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"imp_channelRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imp_channelRoot"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"imported channels: "},"right":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"imp_channelRoot"}}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"channelsRoot"}},"right":{}},"elseStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"imp_channelRoot"}},"arguments":[{"name":{"identifier":"c"}}]}},"name":{"identifier":"channel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"channelIsInRootGrammar"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"channelsRoot"}},"arguments":[{"name":{"identifier":"rc"}}]}},"name":{"identifier":"rootChannel"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"rootChannel"}},"arguments":[{"name":{"identifier":"channel"}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"channelIsInRootGrammar"}},"value":{"value":"true"}}},{}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"rc"}},"right":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"channelsRoot"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"rc"},"type":{"type":"INT"}}]}],"update":[{"operator":"PREFIX_INCREMENT","expression":{"name":{"identifier":"rc"}}}]},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"channelIsInRootGrammar"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"channelsRoot"}},"arguments":[{"name":{"identifier":"dupNode"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"imp_channelRoot"}},"arguments":[{"name":{"identifier":"c"}}]}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"imp_channelRoot"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"c"},"type":{"type":"INT"}}]}],"update":[{"operator":"PREFIX_INCREMENT","expression":{"name":{"identifier":"c"}}}]}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"channelsRoot"}},"value":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"imp_channelRoot"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"channelsRoot"}}},"value":{"name":{"identifier":"rootGrammar"}}}},{"expression":{"name":{"identifier":"insertChild"},"scope":{"name":{"identifier":"root"}},"arguments":[{"value":"1"},{"name":{"identifier":"channelsRoot"}}]}}]}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"TOKENS_SPEC"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"imp_tokensRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imp_tokensRoot"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"imported tokens: "},"right":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"imp_tokensRoot"}}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tokensRoot"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokensRoot"}},"value":{"expression":{"name":{"identifier":"create"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"TOKENS_SPEC"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"value":"TOKENS"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"tokensRoot"}}},"value":{"name":{"identifier":"rootGrammar"}}}},{"expression":{"name":{"identifier":"insertChild"},"scope":{"name":{"identifier":"root"}},"arguments":[{"value":"1"},{"name":{"identifier":"tokensRoot"}}]}}]}},{"expression":{"name":{"identifier":"addChildren"},"scope":{"name":{"identifier":"tokensRoot"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"imp_tokensRoot"}}},"arguments":[{"elementType":{"name":{"identifier":"Tree"}},"levels":[{"dimension":{"value":"0"}}]}]}]}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"all_actionRoots"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"AT"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"imp_actionRoots"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"actionRoots"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"all_actionRoots"}},"arguments":[{"name":{"identifier":"actionRoots"}}]}}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"all_actionRoots"}},"arguments":[{"name":{"identifier":"imp_actionRoots"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imp_actionRoots"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"DoubleKeyMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"String"}},{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"namedActions"},"type":{"name":{"identifier":"DoubleKeyMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"String"}},{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"imported actions: "},"right":{"name":{"identifier":"imp_actionRoots"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDefaultActionScope"},"scope":{"name":{"identifier":"rootGrammar"}}},"name":{"identifier":"scopeName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"name":{"identifier":"scope"},"type":{"name":{"identifier":"GrammarAST"}}},{"name":{"identifier":"name"},"type":{"name":{"identifier":"GrammarAST"}}},{"name":{"identifier":"action"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"at"}}},"right":{"value":"2"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"at"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"action"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"at"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scope"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"at"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scopeName"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"scope"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"at"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"action"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"at"}},"arguments":[{"value":"2"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"scopeName"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"name"}}}]},"name":{"identifier":"prevAction"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"prevAction"}},"right":{}},"elseStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"prevAction"}}},"right":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"at"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"prevAction"}}},"name":{"identifier":"s1"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s1"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"s1"}},"arguments":[{"value":"1"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s1"}}},"right":{"value":"1"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"action"}}},"name":{"identifier":"s2"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s2"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"s2"}},"arguments":[{"value":"1"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s2"}}},"right":{"value":"1"}}]}}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"{"},"right":{"name":{"identifier":"s1"}}},"right":{"value":"\n"}},"right":{"name":{"identifier":"s2"}}},"right":{"value":"}"}},"name":{"identifier":"combinedAction"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"setText"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"prevAction"}}},"arguments":[{"name":{"identifier":"combinedAction"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}}},"arguments":[{"name":{"identifier":"ACTION_REDEFINITION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"at"}}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"name"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"name"}}}]}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"scopeName"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"name"}}},{"name":{"identifier":"action"}}]}}]}}]},"iterable":{"name":{"identifier":"all_actionRoots"}},"variable":{"variables":[{"name":{"identifier":"at"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"scopeName"}},{"name":{"identifier":"name"}}]},"name":{"identifier":"action"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"action"}}}},"right":{"value":" "}},"right":{"name":{"identifier":"scopeName"}}},"right":{"value":":"}},"right":{"name":{"identifier":"name"}}},"right":{"value":"="}},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"action"}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"action"}}},"right":{"name":{"identifier":"rootGrammar"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"insertChild"},"scope":{"name":{"identifier":"root"}},"arguments":[{"value":"1"},{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"action"}}}]}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"scopeName"}}]},"variable":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"namedActions"}}},"variable":{"variables":[{"name":{"identifier":"scopeName"},"type":{"name":{"identifier":"String"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"MODE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"modes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"modes"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"imported mode: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"m"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"m"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"rootModeNames"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"rootAlreadyHasMode"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"destinationAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"name":{"identifier":"rootAlreadyHasMode"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"destinationAST"}},"value":{"name":{"identifier":"dupNode"},"scope":{"name":{"identifier":"m"}}}}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"destinationAST"}},"arguments":[{"name":{"identifier":"dupNode"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"m"}},"arguments":[{"value":"0"}]}}]}}]},"thenStmt":{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"m2"}},"arguments":[{"value":"0"}]}},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"destinationAST"}},"value":{"name":{"identifier":"m2"}}}},{}]}}]},"iterable":{"name":{"identifier":"rootModes"}},"variable":{"variables":[{"name":{"identifier":"m2"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"addedRules"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"m"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"modeRules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"imported rule: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"r"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"r"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"rootRuleNames"}},"arguments":[{"name":{"identifier":"ruleName"}}]},"name":{"identifier":"rootAlreadyHasRule"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"rootAlreadyHasRule"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"destinationAST"}},"arguments":[{"name":{"identifier":"r"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"addedRules"}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rootRuleNames"}},"arguments":[{"name":{"identifier":"ruleName"}}]}}]}}]},"iterable":{"name":{"identifier":"modeRules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"rootAlreadyHasMode"}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"addedRules"}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"name":{"identifier":"destinationAST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rootModeNames"}},"arguments":[{"name":{"identifier":"name"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rootModes"}},"arguments":[{"name":{"identifier":"destinationAST"}}]}}]}}]},"iterable":{"name":{"identifier":"modes"}},"variable":{"variables":[{"name":{"identifier":"m"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"rules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rules"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"imported rule: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"r"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"r"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"rootRuleNames"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"rootAlreadyHasRule"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"rootAlreadyHasRule"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"RULES"}},"arguments":[{"name":{"identifier":"r"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rootRuleNames"}},"arguments":[{"name":{"identifier":"name"}}]}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"optionsRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"optionsRoot"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"hasNewOption"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"option"}}}]},"name":{"identifier":"importOption"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"importOption"}},"right":{}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"option"}}}]},"name":{"identifier":"rootOption"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"importOption"}},"arguments":[{"name":{"identifier":"rootOption"}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hasNewOption"}},"value":{"value":"true"}}},{}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"getOptions"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"imp"}}}}},"variable":{"variables":[{"name":{"identifier":"option"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"name":{"identifier":"hasNewOption"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}}},"arguments":[{"name":{"identifier":"OPTIONS_IN_DELEGATE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"optionsRoot"}}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"optionsRoot"}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"imp"}}}]}}]}}]}}]},"iterable":{"name":{"identifier":"imports"}},"variable":{"variables":[{"name":{"identifier":"imp"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"rootGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"Grammar: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rootGrammar"}}}}}]}}]}
/tool/grammartransformpipeline.java	extractImplicitLexer	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"combinedGrammar"}}},"name":{"identifier":"combinedAST"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"combinedAST"}}}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"combinedAST"}}},"arguments":[{"elementType":{"name":{"identifier":"GrammarAST"}},"levels":[{"dimension":{"value":"0"}}]}]},"name":{"identifier":"elements"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"GrammarAST"}}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"combinedAST"}},"arguments":[{"value":"0"}]}},"right":{"value":"Lexer"}},"name":{"identifier":"lexerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarRootAST"}},"arguments":[{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"GRAMMAR"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"value":"LEXER_GRAMMAR"}]},{"name":{"identifier":"tokenStream"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"combinedGrammar"}}}}]},"name":{"identifier":"lexerAST"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"lexerAST"}}},"value":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}}}},{"expression":{"name":{"identifier":"setInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"lexerAST"}}},"arguments":[{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"combinedAST"}}}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"lexerAST"}},"arguments":[{"expression":{"name":{"identifier":"create"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"ID"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"name":{"identifier":"lexerName"}}]},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"combinedAST"}},"arguments":[{"name":{"identifier":"OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"optionsRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"optionsRoot"}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"optionsRoot"}}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"dupNode"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"optionsRoot"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"lexerOptionsRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"lexerAST"}},"arguments":[{"name":{"identifier":"lexerOptionsRoot"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"optionsRoot"}}},"arguments":[{"elementType":{"name":{"identifier":"GrammarAST"}},"levels":[{"dimension":{"value":"0"}}]}]},"name":{"identifier":"options"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"GrammarAST"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"o"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"optionName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"lexerOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"optionName"}}]},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"doNotCopyOptionsToLexer"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"optionName"}}]}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"o"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"optionTree"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"lexerOptionsRoot"}},"arguments":[{"name":{"identifier":"optionTree"}}]}},{"expression":{"name":{"identifier":"setOption"},"scope":{"name":{"identifier":"lexerAST"}},"arguments":[{"name":{"identifier":"optionName"}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"optionTree"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}}]},"iterable":{"name":{"identifier":"options"}},"variable":{"variables":[{"name":{"identifier":"o"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"actionsWeMoved"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"e"}}},"right":{"name":{"identifier":"AT"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"lexerAST"}},"arguments":[{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"e"}}]},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"e"}},"arguments":[{"value":"0"}]}},"arguments":[{"value":"lexer"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"actionsWeMoved"}},"arguments":[{"name":{"identifier":"e"}}]}}]}}]}}]},"iterable":{"name":{"identifier":"elements"}},"variable":{"variables":[{"name":{"identifier":"e"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"deleteChild"},"scope":{"name":{"identifier":"combinedAST"}},"arguments":[{"name":{"identifier":"r"}}]}}]},"iterable":{"name":{"identifier":"actionsWeMoved"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"combinedAST"}},"arguments":[{"name":{"identifier":"RULES"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"combinedRulesRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"combinedRulesRoot"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"lexerAST"}}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"create"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"RULES"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"value":"RULES"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"lexerRulesRoot"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"lexerAST"}},"arguments":[{"name":{"identifier":"lexerRulesRoot"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"rulesWeMoved"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"name":{"identifier":"rules"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"GrammarASTWithOptions"}}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"combinedRulesRoot"}}},"right":{"value":"0"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rules"}},"value":{"elementType":{"name":{"identifier":"GrammarASTWithOptions"}},"levels":[{"dimension":{"value":"0"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rules"}},"value":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"combinedRulesRoot"}}},"arguments":[{"elementType":{"name":{"identifier":"GrammarASTWithOptions"}},"levels":[{"dimension":{"value":"0"}}]}]}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"r"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"isTokenName"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"ruleName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"lexerRulesRoot"}},"arguments":[{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"r"}}]},"type":{"name":{"identifier":"Tree"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rulesWeMoved"}},"arguments":[{"name":{"identifier":"r"}}]}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"deleteChild"},"scope":{"name":{"identifier":"combinedRulesRoot"}},"arguments":[{"name":{"identifier":"r"}}]}}]},"iterable":{"name":{"identifier":"rulesWeMoved"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStringLiteralAliasesFromLexerRules"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"lexerAST"}}]},"name":{"identifier":"litAliases"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStringLiterals"},"scope":{"name":{"identifier":"combinedGrammar"}}},"name":{"identifier":"stringLiterals"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"insertIndex"},"type":{"type":"INT"}}]}},{"label":{"identifier":"nextLit"},"statement":{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"litAliases"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"litAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"lit"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"litAST"}}}]},"thenStmt":{"label":{"identifier":"nextLit"}}}]},"iterable":{"name":{"identifier":"litAliases"}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStringLiteralLexerRuleName"},"scope":{"name":{"identifier":"combinedGrammar"}},"arguments":[{"name":{"identifier":"lit"}}]},"name":{"identifier":"rname"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"RuleAST"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"litRule"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BlockAST"}},"arguments":[{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"blk"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AltAST"}},"arguments":[{"name":{"identifier":"ALT"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"alt"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TerminalAST"}},"arguments":[{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"STRING_LITERAL"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"name":{"identifier":"lit"}}]}]},"name":{"identifier":"slit"},"type":{"name":{"identifier":"TerminalAST"}}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"alt"}},"arguments":[{"name":{"identifier":"slit"}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"blk"}},"arguments":[{"name":{"identifier":"alt"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"TOKEN_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"name":{"identifier":"rname"}}]},"name":{"identifier":"idToken"},"type":{"name":{"identifier":"CommonToken"}}}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"litRule"}},"arguments":[{"type":{"name":{"identifier":"TerminalAST"}},"arguments":[{"name":{"identifier":"idToken"}}]}]}},{"expression":{"name":{"identifier":"addChild"},"scope":{"name":{"identifier":"litRule"}},"arguments":[{"name":{"identifier":"blk"}}]}},{"expression":{"name":{"identifier":"insertChild"},"scope":{"name":{"identifier":"lexerRulesRoot"}},"arguments":[{"name":{"identifier":"insertIndex"}},{"name":{"identifier":"litRule"}}]}},{"expression":{"name":{"identifier":"freshenParentAndChildIndexes"},"scope":{"name":{"identifier":"lexerRulesRoot"}}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"insertIndex"}}}}]},"iterable":{"name":{"identifier":"stringLiterals"}},"variable":{"variables":[{"name":{"identifier":"lit"},"type":{"name":{"identifier":"String"}}}]}}},{"expression":{"name":{"identifier":"sanityCheckParentAndChildIndexes"},"scope":{"name":{"identifier":"lexerAST"}}}},{"expression":{"name":{"identifier":"sanityCheckParentAndChildIndexes"},"scope":{"name":{"identifier":"combinedAST"}}}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"combinedGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"after extract implicit lexer ="},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"combinedAST"}}}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"combinedGrammar"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"lexer ="},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"lexerAST"}}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"lexerRulesRoot"}}},"right":{"value":"0"}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"lexerAST"}}}]}
/tool/dotgenerator.java	getDOT	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s0"},"scope":{"name":{"identifier":"dfa"}}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"dfa"}]},"name":{"identifier":"dot"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"name"},{"operator":"PLUS","left":{"value":"DFA"},"right":{"name":{"identifier":"decision"},"scope":{"name":{"identifier":"dfa"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"startState"},{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s0"},"scope":{"name":{"identifier":"dfa"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"rankdir"},{"name":{"identifier":"rankdir"}}]}},{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isAcceptState"},"scope":{"name":{"identifier":"d"}}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"stopstate"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"name"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"d"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"label"},{"name":{"identifier":"getStateLabel"},"arguments":[{"name":{"identifier":"d"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"states"},{"name":{"identifier":"st"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"dfa"}}}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"DFAState"}}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"isAcceptState"},"scope":{"name":{"identifier":"d"}}},"thenStmt":{}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"d"}}},"right":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Integer"}}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"state"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"name"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"d"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"label"},{"name":{"identifier":"getStateLabel"},"arguments":[{"name":{"identifier":"d"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"states"},{"name":{"identifier":"st"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"dfa"}}}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"DFAState"}}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"edges"},"scope":{"name":{"identifier":"d"}}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"edges"},"scope":{"name":{"identifier":"d"}}}},"name":{"identifier":"target"},"type":{"name":{"identifier":"DFAState"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"target"}},"right":{}},"thenStmt":{}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"target"}}},"right":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Integer"}}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"ttype"}}]},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"isLexer"}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammar"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"getTokenDisplayName"},"scope":{"name":{"identifier":"grammar"}},"arguments":[{"name":{"identifier":"ttype"}}]}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"'"},"right":{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"appendCodePoint"},"scope":{"type":{"name":{"identifier":"StringBuilder"}}},"arguments":[{"name":{"identifier":"i"}}]}}]}},"right":{"value":"'"}}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"label"},{"name":{"identifier":"label"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"src"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"d"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"target"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"target"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"arrowhead"},{"name":{"identifier":"arrowhead"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"edges"},{"name":{"identifier":"st"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"edges"},"scope":{"name":{"identifier":"d"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"dfa"}}}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"DFAState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"dot"}}},"name":{"identifier":"output"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"sortLinesInString"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"output"}}]}}]}
/tool/dotgenerator.java	getStateLabel	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"expression":{"value":"null"}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}},"arguments":[{"value":"250"}]},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"s"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}]}},{"condition":{"name":{"identifier":"isAcceptState"},"scope":{"name":{"identifier":"s"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"=>"}]},"arguments":[{"name":{"identifier":"prediction"},"scope":{"name":{"identifier":"s"}}}]}}]}},{"condition":{"name":{"identifier":"requiresFullContext"},"scope":{"name":{"identifier":"s"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"^"}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammar"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAltSet"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"alts"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Integer"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alts"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\\n"}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntegerList"}}},"name":{"identifier":"altList"},"type":{"name":{"identifier":"IntegerList"}}}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"altList"}},"arguments":[{"name":{"identifier":"alts"}}]}},{"expression":{"name":{"identifier":"sort"},"scope":{"name":{"identifier":"altList"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"configs"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"configurations"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"ATNConfig"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altList"}},"arguments":[{"name":{"identifier":"altIndex"}}]},"name":{"identifier":"alt"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"altIndex"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\\n"}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"alt"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"alt"}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":":"}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"ATNConfig"}}]}},"name":{"identifier":"configsInAlt"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ATNConfig"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"c"}}},"right":{"name":{"identifier":"alt"}}},"thenStmt":{}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"configsInAlt"}},"arguments":[{"name":{"identifier":"c"}}]}}]},"iterable":{"name":{"identifier":"configurations"}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"name":{"identifier":"ATNConfig"}}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"configsInAlt"}},"arguments":[{"name":{"identifier":"cIndex"}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"ATNConfig"}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"n"}}}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"c"}},"arguments":[{},{"value":"false"}]}]}},{"condition":{"operator":"LESS","left":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"cIndex"}},"right":{"value":"1"}}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"configsInAlt"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":", "}]}}]}},{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"operator":"REMAINDER","left":{"name":{"identifier":"n"}},"right":{"value":"5"}},"right":{"value":"0"}},"right":{"operator":"GREATER","left":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"configsInAlt"}}},"right":{"name":{"identifier":"cIndex"}}}},"right":{"value":"3"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\\n"}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"cIndex"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"configsInAlt"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"cIndex"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"cIndex"}}}]}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"altIndex"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"altList"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"altIndex"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"altIndex"}}}]}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}},"name":{"identifier":"stateLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"stateLabel"}}}]}
/tool/dotgenerator.java	getDOT	{"statements":[{"expression":{"name":{"identifier":"getDOT"},"arguments":[{"name":{"identifier":"startState"}},{"value":"false"}]}}]}
/tool/dotgenerator.java	getDOT	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"grammar"}}}},"name":{"identifier":"ruleNames"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"ruleNames"}}},"right":{"value":"1"}}}]},"name":{"identifier":"names"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"index":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}},"name":{"name":{"identifier":"names"}}},"value":{"name":{"identifier":"s"}}}},"iterable":{"name":{"identifier":"ruleNames"}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"getDOT"},"arguments":[{"name":{"identifier":"startState"}},{"name":{"identifier":"names"}},{"name":{"identifier":"isLexer"}}]}}]}
/tool/dotgenerator.java	getDOT	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"startState"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}},"name":{"identifier":"markedStates"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"atn"}]},"name":{"identifier":"dot"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"startState"},{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"startState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"rankdir"},{"name":{"identifier":"rankdir"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedList"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}},"name":{"identifier":"work"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"startState"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"work"}},"arguments":[{"value":"0"}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"markedStates"}},"arguments":[{"name":{"identifier":"s"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"work"}},"arguments":[{"value":"0"}]}},{}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"markedStates"}},"arguments":[{"name":{"identifier":"s"}}]}},{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStopState"}}},"thenStmt":{}},{"expression":{"variables":[{"name":{"identifier":"edgeST"},"type":{"name":{"identifier":"ST"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"edge"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"RuleTransition"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"inner":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"RuleTransition"}}}},"name":{"identifier":"rr"},"type":{"name":{"identifier":"RuleTransition"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]}}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"value":"<"},"right":{"index":{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"rr"}}},"name":{"name":{"identifier":"ruleNames"}}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"isLeftRecursiveRule"},"scope":{"inner":{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"rr"}}},"type":{"name":{"identifier":"RuleStartState"}}}}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"label"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"["},"right":{"name":{"identifier":"precedence"},"scope":{"name":{"identifier":"rr"}}}},"right":{"value":"]"}}}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"label"}},"value":{"value":">"}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"label"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"src"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"target"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"followState"},"scope":{"name":{"identifier":"rr"}}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"arrowhead"},{"name":{"identifier":"arrowhead"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"edges"},{"name":{"identifier":"edgeST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"followState"},"scope":{"name":{"identifier":"rr"}}}]}},{}]}},{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"ActionTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"AbstractPredicateTransition"}}},"elseStmt":{"condition":{"name":{"identifier":"isEpsilon"},"scope":{"name":{"identifier":"edge"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"AtomTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"SetTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"RangeTransition"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"edge"}}}]}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"RangeTransition"}}},"name":{"identifier":"range"},"type":{"name":{"identifier":"RangeTransition"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"range"}}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"isLexer"}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammar"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"range"}}},"arguments":[{"name":{"identifier":"getVocabulary"},"scope":{"name":{"identifier":"grammar"}}}]}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"range"}}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"label"}}]}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"SetTransition"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"SetTransition"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"set"}}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"isLexer"}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammar"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"set"}}},"arguments":[{"name":{"identifier":"getVocabulary"},"scope":{"name":{"identifier":"grammar"}}}]}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"set"}}},"arguments":[{"value":"true"}]}}}},{"condition":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"NotSetTransition"}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"operator":"PLUS","left":{"value":"~"},"right":{"name":{"identifier":"label"}}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"label"}}]}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"edge"}},"type":{"name":{"identifier":"AtomTransition"}}},"name":{"identifier":"atom"},"type":{"name":{"identifier":"AtomTransition"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"label"},"scope":{"name":{"identifier":"atom"}}}]},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"isLexer"}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammar"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"getTokenDisplayName"},"scope":{"name":{"identifier":"grammar"}},"arguments":[{"name":{"identifier":"label"},"scope":{"name":{"identifier":"atom"}}}]}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"'"},"right":{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"appendCodePoint"},"scope":{"type":{"name":{"identifier":"StringBuilder"}}},"arguments":[{"name":{"identifier":"label"},"scope":{"name":{"identifier":"atom"}}}]}}]}},"right":{"value":"'"}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"label"}}]}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"epsilon-edge"}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"edge"}}}]}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"loopback"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"edge"}}},"type":{"name":{"identifier":"PlusBlockStartState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"edge"}}},"type":{"name":{"identifier":"StarLoopEntryState"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"loopback"}},"value":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"loopBackState"},"scope":{"inner":{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"edge"}}},"type":{"name":{"identifier":"StarLoopEntryState"}}}}}]}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"loopback"}},"value":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"loopBackState"},"scope":{"inner":{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"edge"}}},"type":{"name":{"identifier":"PlusBlockStartState"}}}}}]}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"loopback"},{"name":{"identifier":"loopback"}}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"edge"}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"edge"}}}]}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edgeST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"action-edge"}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"label"},{"name":{"identifier":"getEdgeLabel"},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"edge"}}}]}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"src"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"target"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"edge"}}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"arrowhead"},{"name":{"identifier":"arrowhead"}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"transitionIndex"},{"value":"false"}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edgeST"}},"arguments":[{"value":"transitionIndex"},{"name":{"identifier":"i"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"edges"},{"name":{"identifier":"edgeST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"edge"}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"work"}}}}},{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStopState"}}}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"stopstate"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"name"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"label"},{"name":{"identifier":"getStateLabel"},"arguments":[{"name":{"identifier":"s"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"states"},{"name":{"identifier":"st"}}]}}]},"iterable":{"name":{"identifier":"markedStates"}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStopState"}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"stlib"}},"arguments":[{"value":"state"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"name"},{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"label"},{"name":{"identifier":"getStateLabel"},"arguments":[{"name":{"identifier":"s"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"transitions"},{"name":{"identifier":"getTransitions"},"scope":{"name":{"identifier":"s"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"states"},{"name":{"identifier":"st"}}]}}]},"iterable":{"name":{"identifier":"markedStates"}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"dot"}}}}]}
/tool/dotgenerator.java	getEdgeLabel	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"label"}},"arguments":[{"value":"\\"},{"value":"\\\\"}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"label"}},"arguments":[{"value":"\\""},{"value":"\\\\""}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"label"}},"arguments":[{"value":"\n"},{"value":"\\\\n"}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"label"}},"arguments":[{"value":"\r"},{"value":""}]}}},{"expression":{"name":{"identifier":"label"}}}]}
/tool/dotgenerator.java	getStateLabel	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"expression":{"value":"null"}}},{"expression":{"variables":[{"initializer":{"value":""},"name":{"identifier":"stateLabel"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"BlockStartState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"BlockEndState"}}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"stateLabel"}},"value":{"value":"&larr;\\n"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"stateLabel"}},"value":{"value":"&rarr;\\n"}}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"stateLabel"}},"value":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}]}}},{"condition":{"operator":"OR","left":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"PlusBlockStartState"}}},"right":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"PlusLoopbackState"}}}},"elseStmt":{"condition":{"operator":"OR","left":{"operator":"OR","left":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"StarBlockStartState"}}},"right":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"StarLoopEntryState"}}}},"right":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"StarLoopbackState"}}}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"stateLabel"}},"value":{"value":"*"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"stateLabel"}},"value":{"value":"+"}}}]}},{"condition":{"operator":"AND","left":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"DecisionState"}}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"decision"},"scope":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"DecisionState"}}}}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateLabel"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"stateLabel"}},"right":{"value":"\\nd="}},"right":{"name":{"identifier":"decision"},"scope":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"DecisionState"}}}}}}}}]}},{"expression":{"name":{"identifier":"stateLabel"}}}]}
/tool/attributeresolver.java	resolvesToListLabel	[]
/tool/attributeresolver.java	resolvesToLabel	[]
/tool/attributeresolver.java	resolvesToAttributeDict	[]
/tool/attributeresolver.java	resolvesToToken	[]
/tool/attributeresolver.java	resolveToAttribute	[]
/tool/attributeresolver.java	resolveToAttribute	[]
/tool/grammarsyntaxmessage.java	getCause	{"statements":[{"expression":{"expression":{"name":{"identifier":"getCause"},"scope":{}},"type":{"name":{"identifier":"RecognitionException"}}}}]}
/tool/ast/starblockast.java	isGreedy	{"statements":[{"expression":{"name":{"identifier":"_greedy"}}}]}
/tool/ast/starblockast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"StarBlockAST"}},"arguments":[{}]}}]}
/tool/ast/starblockast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/grammarasterrornode.java	isNil	{"statements":[{"expression":{"name":{"identifier":"isNil"},"scope":{"name":{"identifier":"delegate"}}}}]}
/tool/ast/grammarasterrornode.java	getType	{"statements":[{"expression":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"delegate"}}}}]}
/tool/ast/grammarasterrornode.java	getText	{"statements":[{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"delegate"}}}}]}
/tool/ast/grammarasterrornode.java	toString	{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"delegate"}}}}]}
/tool/ast/notast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"NotAST"}},"arguments":[{}]}}]}
/tool/ast/notast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/terminalast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"TerminalAST"}},"arguments":[{}]}}]}
/tool/ast/terminalast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/predast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"PredAST"}},"arguments":[{}]}}]}
/tool/ast/predast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/setast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"SetAST"}},"arguments":[{}]}}]}
/tool/ast/setast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/grammarast.java	getChildrenAsArray	{"statements":[{"expression":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"children"}},"arguments":[{"elementType":{"name":{"identifier":"GrammarAST"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"children"}}}}]}]}}]}
/tool/ast/grammarast.java	getNodesWithType	{"statements":[{"expression":{"name":{"identifier":"getNodesWithType"},"arguments":[{"name":{"identifier":"of"},"scope":{"name":{"identifier":"IntervalSet"}},"arguments":[{"name":{"identifier":"ttype"}}]}]}}]}
/tool/ast/grammarast.java	getAllChildrenWithType	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"children"}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"Tree"}}},"name":{"identifier":"t"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"type"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}}]},"compare":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"children"}},"right":{}},"right":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"children"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"nodes"}}}]}
/tool/ast/grammarast.java	getNodesWithType	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"work"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{}]}},{"expression":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"t"}},"value":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"work"}},"arguments":[{"value":"0"}]}}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"types"}},"right":{}},"right":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"types"}},"arguments":[{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}}]}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"name":{"identifier":"t"}}]}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"children"},"scope":{"name":{"identifier":"t"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getChildrenAsArray"},"scope":{"name":{"identifier":"t"}}}]}]}}]}}]},"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"work"}}}}},{"expression":{"name":{"identifier":"nodes"}}}]}
/tool/ast/grammarast.java	getNodesWithTypePreorderDFS	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"name":{"identifier":"getNodesWithTypePreorderDFS_"},"arguments":[{"name":{"identifier":"nodes"}},{"name":{"identifier":"types"}}]}},{"expression":{"name":{"identifier":"nodes"}}}]}
/tool/ast/grammarast.java	getNodesWithTypePreorderDFS_	{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"types"}},"arguments":[{"name":{"identifier":"getType"},"scope":{}}]},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{}]}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"child"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"getNodesWithTypePreorderDFS_"},"scope":{"name":{"identifier":"child"}},"arguments":[{"name":{"identifier":"nodes"}},{"name":{"identifier":"types"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getChildCount"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/tool/ast/grammarast.java	getNodeWithTokenIndex	{"statements":[{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getToken"},"scope":{}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"getToken"},"scope":{}}},"right":{"name":{"identifier":"index"}}}},"thenStmt":{"statements":[{"expression":{}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"child"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodeWithTokenIndex"},"scope":{"name":{"identifier":"child"}},"arguments":[{"name":{"identifier":"index"}}]},"name":{"identifier":"result"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"result"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"result"}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getChildCount"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{}}]}
/tool/ast/grammarast.java	getOutermostAltNode	{"statements":[{"condition":{"operator":"AND","left":{"expression":{},"type":{"name":{"identifier":"AltAST"}}},"right":{"expression":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"parent"}}},"type":{"name":{"identifier":"RuleAST"}}}},"thenStmt":{"statements":[{"expression":{"expression":{},"type":{"name":{"identifier":"AltAST"}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"parent"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"getOutermostAltNode"},"scope":{"inner":{"expression":{"name":{"identifier":"parent"}},"type":{"name":{"identifier":"GrammarAST"}}}}}}},{"expression":{}}]}
/tool/ast/grammarast.java	getAltLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAncestors"},"scope":{}},"name":{"identifier":"ancestors"},"type":{"name":{"identifier":"List"},"typeArguments":[{"extendedType":{"name":{"identifier":"Tree"}}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ancestors"}},"right":{}},"thenStmt":{"expression":{}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ancestors"}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"p"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"ALT"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"p"}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"a"},"type":{"name":{"identifier":"AltAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"a"}}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"a"}}}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"a"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"a"}}}}}]}}]}}]},"compare":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"initialization":[{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"ancestors"}}},"right":{"value":"1"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{}}]}
/tool/ast/grammarast.java	deleteChild	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"children"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Object"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"t"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"deleteChild"},"arguments":[{"name":{"identifier":"getChildIndex"},"scope":{"name":{"identifier":"t"}}}]}},{"expression":{"value":"true"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"children"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"value":"false"}}]}
/tool/ast/grammarast.java	getFirstDescendantWithType	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"}},"right":{"name":{"identifier":"type"}}},"thenStmt":{"expression":{}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"children"}},"right":{}},"thenStmt":{"expression":{}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"c"}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"type"}}},"thenStmt":{"expression":{"name":{"identifier":"t"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFirstDescendantWithType"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"type"}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"CommonTree"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"d"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"d"}}}}]},"iterable":{"name":{"identifier":"children"}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"name":{"identifier":"Object"}}}]}},{"expression":{}}]}
/tool/ast/grammarast.java	getFirstDescendantWithType	{"statements":[{"condition":{"name":{"identifier":"member"},"scope":{"name":{"identifier":"types"}},"arguments":[{"name":{"identifier":"getType"}}]},"thenStmt":{"expression":{}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"children"}},"right":{}},"thenStmt":{"expression":{}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"c"}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"name":{"identifier":"member"},"scope":{"name":{"identifier":"types"}},"arguments":[{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}}]},"thenStmt":{"expression":{"name":{"identifier":"t"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFirstDescendantWithType"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"types"}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"CommonTree"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"d"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"d"}}}}]},"iterable":{"name":{"identifier":"children"}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"name":{"identifier":"Object"}}}]}},{"expression":{}}]}
/tool/ast/grammarast.java	setType	{"statements":[{"expression":{"name":{"identifier":"setType"},"scope":{"name":{"identifier":"token"}},"arguments":[{"name":{"identifier":"type"}}]}}]}
/tool/ast/grammarast.java	setText	{"statements":[{"expression":{"name":{"identifier":"setText"},"scope":{"name":{"identifier":"token"}},"arguments":[{"name":{"identifier":"text"}}]}}]}
/tool/ast/grammarast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"GrammarAST"}},"arguments":[{}]}}]}
/tool/ast/grammarast.java	dupTree	{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{}}},"name":{"identifier":"input"},"type":{"name":{"identifier":"CharStream"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"input"}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"t"}}]},"type":{"name":{"identifier":"GrammarAST"}}}}]}
/tool/ast/grammarast.java	toTokenString	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{}}},"name":{"identifier":"input"},"type":{"name":{"identifier":"CharStream"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"input"}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTreeNodeStream"}},"arguments":[{"name":{"identifier":"adaptor"}},{}]},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"CommonTreeNodeStream"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"LT"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"o"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"o"}}]},"name":{"identifier":"type"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":" "}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"o"}}}]}},{"expression":{"name":{"identifier":"consume"},"scope":{"name":{"identifier":"nodes"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"o"}},"value":{"expression":{"name":{"identifier":"LT"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"}},"value":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"adaptor"}},"arguments":[{"name":{"identifier":"o"}}]}}}]},"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"type"}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/tool/ast/grammarast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/grammarastwithoptions.java	setOption	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"options"}},"value":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"GrammarAST"}}]}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"options"}},"arguments":[{"name":{"identifier":"key"}},{"name":{"identifier":"node"}}]}}]}
/tool/ast/grammarastwithoptions.java	getOptionString	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionAST"},"arguments":[{"name":{"identifier":"key"}}]},"name":{"identifier":"value"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"value"}},"right":{}},"thenStmt":{"expression":{}}},{"condition":{"expression":{"name":{"identifier":"value"}},"type":{"name":{"identifier":"ActionAST"}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"value"}}},"name":{"identifier":"v"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"OR","left":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"v"}},"arguments":[{"value":"'"}]},"right":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"v"}},"arguments":[{"value":"\\""}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"}},"value":{"name":{"identifier":"getStringFromGrammarStringLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"v"}}]}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"v"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_ESCAPE_SEQUENCE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"value"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"value"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"}},"value":{"value":""}}}]}}]}},{"expression":{"name":{"identifier":"v"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"value"}}}}]}}]}
/tool/ast/grammarastwithoptions.java	getOptionAST	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"options"}},"arguments":[{"name":{"identifier":"key"}}]}}]}
/tool/ast/grammarastwithoptions.java	getNumberOfOptions	{"statements":[{"expression":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"elseExpr":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"options"}}},"thenExpr":{"value":"0"}}}]}
/tool/ast/grammarastwithoptions.java	dupNode	[]
/tool/ast/grammarastwithoptions.java	getOptions	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"emptyMap"},"scope":{"name":{"identifier":"Collections"}}}}]}},{"expression":{"name":{"identifier":"options"}}}]}
/tool/ast/plusblockast.java	isGreedy	{"statements":[{"expression":{"name":{"identifier":"_greedy"}}}]}
/tool/ast/plusblockast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"PlusBlockAST"}},"arguments":[{}]}}]}
/tool/ast/plusblockast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarastvisitor.java	visit	[]
/tool/ast/grammarrootast.java	getGrammarName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"arguments":[{"value":"0"}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}}},{"expression":{}}]}
/tool/ast/grammarrootast.java	getOptionString	{"statements":[{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"cmdLineOptions"}},"right":{}},"right":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"cmdLineOptions"}},"arguments":[{"name":{"identifier":"key"}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"cmdLineOptions"}},"arguments":[{"name":{"identifier":"key"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{},"arguments":[{"name":{"identifier":"key"}}]},"name":{"identifier":"value"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"value"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"value"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"defaultOptions"}},"arguments":[{"name":{"identifier":"key"}}]}}}]}},{"expression":{"name":{"identifier":"value"}}}]}
/tool/ast/grammarrootast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/grammarrootast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"GrammarRootAST"}},"arguments":[{}]}}]}
/tool/ast/ruleast.java	isLexerRule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRuleName"}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"}},"right":{}},"right":{"name":{"identifier":"isTokenName"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"name"}}]}}}]}
/tool/ast/ruleast.java	getRuleName	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"nameNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"nameNode"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameNode"}}}}},{"expression":{}}]}
/tool/ast/ruleast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"RuleAST"}},"arguments":[{}]}}]}
/tool/ast/ruleast.java	getLexerAction	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFirstChildWithType"},"arguments":[{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"blk"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"blk"}}},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"blk"}},"arguments":[{"value":"0"}]},"name":{"identifier":"onlyAlt"},"type":{"name":{"identifier":"Tree"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"onlyAlt"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"onlyAlt"}}},"right":{"value":"1"}}]},"name":{"identifier":"lastChild"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"lastChild"}}},"right":{"name":{"identifier":"ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"expression":{"name":{"identifier":"lastChild"}},"type":{"name":{"identifier":"ActionAST"}}}}]}}]}},{"expression":{}}]}
/tool/ast/ruleast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/quantifierast.java	isGreedy	[]
/tool/ast/altast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"AltAST"}},"arguments":[{}]}}]}
/tool/ast/altast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/optionalblockast.java	isGreedy	{"statements":[{"expression":{"name":{"identifier":"_greedy"}}}]}
/tool/ast/optionalblockast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"OptionalBlockAST"}},"arguments":[{}]}}]}
/tool/ast/optionalblockast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/rulerefast.java	dupNode	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"RuleRefAST"}},"arguments":[{}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"RuleRefAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"token"},"scope":{}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"token"},"scope":{}},"value":{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"r"}}}]}}},{"expression":{"name":{"identifier":"r"}}}]}
/tool/ast/rulerefast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/rangeast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"RangeAST"}},"arguments":[{}]}}]}
/tool/ast/rangeast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/actionast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"ActionAST"}},"arguments":[{}]}}]}
/tool/ast/actionast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/ast/blockast.java	dupNode	{"statements":[{"expression":{"type":{"name":{"identifier":"BlockAST"}},"arguments":[{}]}}]}
/tool/ast/blockast.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"v"}},"arguments":[{}]}}]}
/tool/lexergrammar.java	defineRule	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"defineRule"},"scope":{},"arguments":[{"name":{"identifier":"r"}}]}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"modes"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"modes"}},"value":{"type":{"name":{"identifier":"MultiMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Rule"}}]}}}}},{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"modes"}},"arguments":[{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"r"}}]}},{"expression":{"value":"true"}}]}
/tool/lexergrammar.java	undefineRule	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"undefineRule"},"scope":{},"arguments":[{"name":{"identifier":"r"}}]}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"modes"}},"arguments":[{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"r"}}}]},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"removed"},"type":{"type":"BOOLEAN"}}]}},{"check":{"name":{"identifier":"removed"}}},{"expression":{"value":"true"}}]}
/tool/antlrtoollistener.java	info	[]
/tool/antlrtoollistener.java	error	[]
/tool/antlrtoollistener.java	warning	[]
/tool/grammarparserinterpreter.java	createInterpreterRuleContext	{"statements":[{"expression":{"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}},"arguments":[{"name":{"identifier":"parent"}},{"name":{"identifier":"invokingStateNumber"}},{"name":{"identifier":"ruleIndex"}}]}}]}
/tool/grammarparserinterpreter.java	reset	{"statements":[{"expression":{"name":{"identifier":"reset"},"scope":{}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"overrideDecisionRoot"}},"value":{}}}]}
/tool/grammarparserinterpreter.java	findOuterMostDecisionStates	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BitSet"}},"arguments":[{"name":{"identifier":"size"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}}}]},"name":{"identifier":"track"},"type":{"name":{"identifier":"BitSet"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumberOfDecisions"},"scope":{"name":{"identifier":"atn"}}},"name":{"identifier":"numberOfDecisions"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"decisionState"},"type":{"name":{"identifier":"DecisionState"}}}]}},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"decisionState"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"startState"},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"condition":{"expression":{"name":{"identifier":"decisionState"}},"type":{"name":{"identifier":"StarLoopEntryState"}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"startState"}},"arguments":[{"value":"0"}]}},"right":{"name":{"identifier":"decisionState"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"track"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"decisionState"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"decisionState"}},"type":{"name":{"identifier":"StarLoopEntryState"}}},"name":{"identifier":"loopEntry"},"type":{"name":{"identifier":"StarLoopEntryState"}}}]}},{"condition":{"name":{"identifier":"isPrecedenceDecision"},"scope":{"name":{"identifier":"loopEntry"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"loopEntry"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"blockStart"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"track"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"blockStart"}}}]}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfDecisions"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"track"}}}]}
/tool/grammarparserinterpreter.java	visitDecisionState	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"visitDecisionState"},"scope":{},"arguments":[{"name":{"identifier":"p"}}]},"name":{"identifier":"predictedAlt"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"p"}}},"right":{"value":"1"}},"thenStmt":{"statements":[{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"decision"},"scope":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"overrideDecision"},"scope":{}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"_input"},"scope":{}}},"right":{"name":{"identifier":"overrideDecisionInputIndex"},"scope":{}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"overrideDecisionRoot"}},"value":{"expression":{"name":{"identifier":"getContext"}},"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}}}}}]}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"_ctx"}},"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}}},"name":{"identifier":"ctx"},"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}}}]}},{"condition":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"decisionStatesThatSetOuterAltNumInContext"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"p"}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outerAltNum"},"scope":{"name":{"identifier":"ctx"}}},"value":{"name":{"identifier":"predictedAlt"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"p"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"name":{"identifier":"isLeftRecursiveRule"},"scope":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"p"}}},"name":{"name":{"identifier":"stateToAltsMap"}}},"name":{"identifier":"alts"},"type":{"origin":"TYPE","componentType":{"type":"INT"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"p"}}}]},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"name":{"identifier":"lr"},"type":{"name":{"identifier":"LeftRecursiveRule"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"BLOCK_START"},"scope":{"name":{"identifier":"ATNState"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"STAR_BLOCK_START"},"scope":{"name":{"identifier":"ATNState"}}}},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"alts"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alts"}},"value":{"name":{"identifier":"getRecursiveOpAlts"},"scope":{"name":{"identifier":"lr"}}}}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"p"}}},"name":{"name":{"identifier":"stateToAltsMap"}}},"value":{"name":{"identifier":"alts"}}}}]}}]}},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"alts"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alts"}},"value":{"name":{"identifier":"getPrimaryAlts"},"scope":{"name":{"identifier":"lr"}}}}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"p"}}},"name":{"name":{"identifier":"stateToAltsMap"}}},"value":{"name":{"identifier":"alts"}}}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outerAltNum"},"scope":{"name":{"identifier":"ctx"}}},"value":{"index":{"name":{"identifier":"predictedAlt"}},"name":{"name":{"identifier":"alts"}}}}}]}}]}},{"expression":{"name":{"identifier":"predictedAlt"}}}]}
/tool/grammarparserinterpreter.java	getAllPossibleParseTrees	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"ParserRuleContext"}}]}},"name":{"identifier":"trees"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ParserRuleContext"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"deriveTempParserInterpreter"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"originalParser"}},{"name":{"identifier":"tokens"}}]},"name":{"identifier":"parser"},"type":{"name":{"identifier":"ParserInterpreter"}}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"stopIndex"}},"right":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"tokens"}}},"right":{"value":"1"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stopIndex"}},"value":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"tokens"}}},"right":{"value":"2"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"nextSetBit"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"value":"0"}]},"name":{"identifier":"alt"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"reset"},"scope":{"name":{"identifier":"parser"}}}},{"expression":{"name":{"identifier":"addDecisionOverride"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"decision"}},{"name":{"identifier":"startIndex"}},{"name":{"identifier":"alt"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parse"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"startRuleIndex"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"ParserRuleContext"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getRootOfSubtreeEnclosingRegion"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"startIndex"}},{"name":{"identifier":"stopIndex"}}]},"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}}},"name":{"identifier":"ambigSubTree"},"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}}}]}},{"condition":{"name":{"identifier":"isAncestorOf"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"getOverrideDecisionRoot"},"scope":{"name":{"identifier":"parser"}}},{"name":{"identifier":"ambigSubTree"}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ambigSubTree"}},"value":{"expression":{"name":{"identifier":"getOverrideDecisionRoot"},"scope":{"name":{"identifier":"parser"}}},"type":{"name":{"identifier":"GrammarInterpreterRuleContext"}}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"trees"}},"arguments":[{"name":{"identifier":"ambigSubTree"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alt"}},"value":{"name":{"identifier":"nextSetBit"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"alt"}},"right":{"value":"1"}}]}}}]},"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"alt"}},"right":{"value":"0"}}},{"expression":{"name":{"identifier":"trees"}}}]}
/tool/grammarparserinterpreter.java	getLookaheadParseTrees	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"ParserRuleContext"}}]}},"name":{"identifier":"trees"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ParserRuleContext"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"deriveTempParserInterpreter"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"originalParser"}},{"name":{"identifier":"tokens"}}]},"name":{"identifier":"parser"},"type":{"name":{"identifier":"ParserInterpreter"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"decisionToState"},"scope":{"name":{"identifier":"getATN"},"scope":{"name":{"identifier":"originalParser"}}}},"arguments":[{"name":{"identifier":"decision"}}]},"name":{"identifier":"decisionState"},"type":{"name":{"identifier":"DecisionState"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BailButConsumeErrorStrategy"},"scope":{"name":{"identifier":"GrammarParserInterpreter"}}}},"name":{"identifier":"errorHandler"},"type":{"name":{"identifier":"BailButConsumeErrorStrategy"},"scope":{"name":{"identifier":"GrammarParserInterpreter"}}}}]}},{"expression":{"name":{"identifier":"setErrorHandler"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"errorHandler"}}]}},{"expression":{"name":{"identifier":"reset"},"scope":{"name":{"identifier":"parser"}}}},{"expression":{"name":{"identifier":"addDecisionOverride"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"decision"}},{"name":{"identifier":"startIndex"}},{"name":{"identifier":"alt"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parse"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"startRuleIndex"}}]},"name":{"identifier":"tt"},"type":{"name":{"identifier":"ParserRuleContext"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"stopIndex"}},"name":{"identifier":"stopTreeAt"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"firstErrorTokenIndex"},"scope":{"name":{"identifier":"errorHandler"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stopTreeAt"}},"value":{"name":{"identifier":"firstErrorTokenIndex"},"scope":{"name":{"identifier":"errorHandler"}}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceInterval"},"scope":{"name":{"identifier":"tt"}}},"name":{"identifier":"overallRange"},"type":{"name":{"identifier":"Interval"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"stopTreeAt"}},"right":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"overallRange"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stopTreeAt"}},"value":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"overallRange"}}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRootOfSubtreeEnclosingRegion"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"tt"}},{"name":{"identifier":"startIndex"}},{"name":{"identifier":"stopTreeAt"}}]},"name":{"identifier":"subtree"},"type":{"name":{"identifier":"ParserRuleContext"}}}]}},{"condition":{"name":{"identifier":"isAncestorOf"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"getOverrideDecisionRoot"},"scope":{"name":{"identifier":"parser"}}},{"name":{"identifier":"subtree"}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"subtree"}},"value":{"name":{"identifier":"getOverrideDecisionRoot"},"scope":{"name":{"identifier":"parser"}}}}}]}},{"expression":{"name":{"identifier":"stripChildrenOutOfRange"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"subtree"}},{"name":{"identifier":"getOverrideDecisionRoot"},"scope":{"name":{"identifier":"parser"}}},{"name":{"identifier":"startIndex"}},{"name":{"identifier":"stopTreeAt"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"trees"}},"arguments":[{"name":{"identifier":"subtree"}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"alt"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"getTransitions"},"scope":{"name":{"identifier":"decisionState"}}}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"alt"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"alt"}}}]},{"expression":{"name":{"identifier":"trees"}}}]}
/tool/grammarparserinterpreter.java	deriveTempParserInterpreter	{"statements":[{"expression":{"variables":[{"name":{"identifier":"parser"},"type":{"name":{"identifier":"ParserInterpreter"}}}]}},{"condition":{"expression":{"name":{"identifier":"originalParser"}},"type":{"name":{"identifier":"ParserInterpreter"}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSerializedAsChars"},"scope":{"name":{"identifier":"ATNSerializer"}},"arguments":[{"name":{"identifier":"getATN"},"scope":{"name":{"identifier":"originalParser"}}}]},"name":{"identifier":"serializedAtn"},"type":{"origin":"TYPE","componentType":{"type":"CHAR"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"deserialize"},"scope":{"type":{"name":{"identifier":"ATNDeserializer"}}},"arguments":[{"name":{"identifier":"serializedAtn"}}]},"name":{"identifier":"deserialized"},"type":{"name":{"identifier":"ATN"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parser"}},"value":{"type":{"name":{"identifier":"ParserInterpreter"}},"arguments":[{"name":{"identifier":"getGrammarFileName"},"scope":{"name":{"identifier":"originalParser"}}},{"name":{"identifier":"getVocabulary"},"scope":{"name":{"identifier":"originalParser"}}},{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getRuleNames"},"scope":{"name":{"identifier":"originalParser"}}}]},{"name":{"identifier":"deserialized"}},{"name":{"identifier":"tokens"}}]}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"asSubclass"},"scope":{"name":{"identifier":"getClass"},"scope":{"name":{"identifier":"originalParser"}}},"arguments":[{"type":{"name":{"identifier":"ParserInterpreter"}}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"ParserInterpreter"}}}]}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"c"}},"arguments":[{"type":{"name":{"identifier":"Grammar"}}},{"type":{"name":{"identifier":"ATN"}}},{"type":{"name":{"identifier":"TokenStream"}}}]},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"ParserInterpreter"}}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parser"}},"value":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"getATN"},"scope":{"name":{"identifier":"originalParser"}}},{"name":{"identifier":"getTokenStream"},"scope":{"name":{"identifier":"originalParser"}}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalArgumentException"}},"arguments":[{"operator":"PLUS","left":{"value":"can't create parser to match incoming "},"right":{"name":{"identifier":"getSimpleName"},"scope":{"name":{"identifier":"getClass"},"scope":{"name":{"identifier":"originalParser"}}}}},{"name":{"identifier":"e"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]}]}},{"expression":{"name":{"identifier":"setInputStream"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"tokens"}}]}},{"expression":{"name":{"identifier":"setErrorHandler"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"type":{"name":{"identifier":"BailErrorStrategy"}}}]}},{"expression":{"name":{"identifier":"removeErrorListeners"},"scope":{"name":{"identifier":"parser"}}}},{"expression":{"name":{"identifier":"removeParseListeners"},"scope":{"name":{"identifier":"parser"}}}},{"expression":{"name":{"identifier":"setPredictionMode"},"scope":{"name":{"identifier":"getInterpreter"},"scope":{"name":{"identifier":"parser"}}},"arguments":[{"name":{"identifier":"LL_EXACT_AMBIG_DETECTION"},"scope":{"name":{"identifier":"PredictionMode"}}}]}},{"expression":{"name":{"identifier":"parser"}}}]}
/tool/grammarparserinterpreter.java	recover	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"recognizer"}}}},"name":{"identifier":"errIndex"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"firstErrorTokenIndex"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstErrorTokenIndex"}},"value":{"name":{"identifier":"errIndex"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"recognizer"}}},"name":{"identifier":"input"},"type":{"name":{"identifier":"TokenStream"}}}]}},{"condition":{"operator":"LESS","left":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"input"}}},"right":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"input"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"consume"},"scope":{"name":{"identifier":"recognizer"}}}}]}}]}
/tool/grammarparserinterpreter.java	recoverInline	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"recognizer"}}}},"name":{"identifier":"errIndex"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"firstErrorTokenIndex"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstErrorTokenIndex"}},"value":{"name":{"identifier":"errIndex"}}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"InputMismatchException"}},"arguments":[{"name":{"identifier":"recognizer"}}]},"name":{"identifier":"e"},"type":{"name":{"identifier":"InputMismatchException"}}}]}},{"expression":{"name":{"identifier":"e"}}}]}
/tool/grammarparserinterpreter.java	sync	{}
/tool/antlrmessage.java	getErrorType	{"statements":[{"expression":{"name":{"identifier":"errorType"}}}]}
/tool/antlrmessage.java	getArgs	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"args"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"EMPTY_ARGS"}}}]}},{"expression":{"name":{"identifier":"args"}}}]}
/tool/antlrmessage.java	getMessageTemplate	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ST"}},"arguments":[{"name":{"identifier":"msg"},"scope":{"name":{"identifier":"getErrorType"}}}]},"name":{"identifier":"messageST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"messageST"}}}},"value":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"errorType"}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"value":"verbose"},{"name":{"identifier":"verbose"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getArgs"}},"name":{"identifier":"args"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"Object"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"value":"arg"},"name":{"identifier":"attr"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"thenStmt":{"expression":{"operator":"PLUS","target":{"name":{"identifier":"attr"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"name":{"identifier":"attr"}},{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"args"}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"args"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"operator":"LESS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"args"}}},"right":{"value":"2"}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"value":"arg2"},{}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCause"}},"name":{"identifier":"cause"},"type":{"name":{"identifier":"Throwable"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"cause"}},"right":{}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"value":"exception"},{}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"value":"stackTrace"},{}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"value":"exception"},{"name":{"identifier":"cause"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageST"}},"arguments":[{"value":"stackTrace"},{"name":{"identifier":"getStackTrace"},"scope":{"name":{"identifier":"cause"}}}]}}]}},{"expression":{"name":{"identifier":"messageST"}}}]}
/tool/antlrmessage.java	getCause	{"statements":[{"expression":{"name":{"identifier":"e"}}}]}
/tool/antlrmessage.java	toString	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Message{"},"right":{"value":"errorType="}},"right":{"name":{"identifier":"getErrorType"}}},"right":{"value":", args="}},"right":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getArgs"}}]}},"right":{"value":", e="}},"right":{"name":{"identifier":"getCause"}}},"right":{"value":", fileName='"}},"right":{"name":{"identifier":"fileName"}}},"right":{"value":"\'"}},"right":{"value":", line="}},"right":{"name":{"identifier":"line"}}},"right":{"value":", charPosition="}},"right":{"name":{"identifier":"charPosition"}}},"right":{"value":"}"}}}]}
/tool/rule.java	defineActionInAlt	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"actions"}},"arguments":[{"name":{"identifier":"actionAST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"actions"},"scope":{"index":{"name":{"identifier":"currentAlt"}},"name":{"name":{"identifier":"alt"}}}},"arguments":[{"name":{"identifier":"actionAST"}}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineLexerAction"},"arguments":[{"name":{"identifier":"actionAST"}}]}}]}}]}
/tool/rule.java	defineLexerAction	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"actionIndex"}},"value":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"g"}}}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"actionAST"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"actionAST"}},{"name":{"identifier":"actionIndex"}}]}}]}}]}
/tool/rule.java	definePredicateInAlt	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"actions"}},"arguments":[{"name":{"identifier":"predAST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"actions"},"scope":{"index":{"name":{"identifier":"currentAlt"}},"name":{"name":{"identifier":"alt"}}}},"arguments":[{"name":{"identifier":"predAST"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempreds"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"predAST"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"sempreds"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"predAST"}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"sempreds"},"scope":{"name":{"identifier":"g"}}}}]}}]}}]}
/tool/rule.java	resolveRetvalOrProperty	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"retvals"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"retvals"}},"arguments":[{"name":{"identifier":"y"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"a"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPredefinedScope"},"arguments":[{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"AttributeDict"}}}]}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"d"}},"arguments":[{"name":{"identifier":"y"}}]}}]}
/tool/rule.java	getTokenRefs	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"refs"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"refs"}},"arguments":[{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"tokenRefs"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"refs"}}}]}
/tool/rule.java	getElementLabelNames	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"refs"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"refs"}},"arguments":[{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"labelDefs"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"refs"}}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"refs"}}}]}
/tool/rule.java	getElementLabelDefs	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"MultiMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"LabelElementPair"}}]}},"name":{"identifier":"defs"},"type":{"name":{"identifier":"MultiMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"LabelElementPair"}}]}}]}},{"body":{"statements":[{"body":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"defs"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"p"}}}},{"name":{"identifier":"p"}}]}}]},"iterable":{"name":{"identifier":"pairs"}},"variable":{"variables":[{"name":{"identifier":"p"},"type":{"name":{"identifier":"LabelElementPair"}}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"labelDefs"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}},"variable":{"variables":[{"name":{"identifier":"pairs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"defs"}}}]}
/tool/rule.java	hasAltSpecificContexts	{"statements":[{"expression":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getAltLabels"}},"right":{}}}]}
/tool/rule.java	getOriginalNumberOfAlts	{"statements":[{"expression":{"name":{"identifier":"numberOfAlts"}}}]}
/tool/rule.java	getAltLabels	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}},"name":{"identifier":"labels"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"ast"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"}}}]},"name":{"identifier":"list"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"list"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"list"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"}}},{"name":{"identifier":"list"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"list"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]},"arguments":[{"name":{"identifier":"i"}},{"name":{"identifier":"ast"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}]}]}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"labels"}}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"labels"}}}]}
/tool/rule.java	getUnlabeledAltASTs	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}},"name":{"identifier":"alts"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"ast"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"altLabel"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"}}}}]}}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"alts"}}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"alts"}}}]}
/tool/rule.java	resolveToAttribute	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"args"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"args"}},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"a"}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"retvals"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"retvals"}},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"a"}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"locals"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"locals"}},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"a"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPredefinedScope"},"arguments":[{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"name":{"identifier":"properties"},"type":{"name":{"identifier":"AttributeDict"}}}]}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"properties"}},"arguments":[{"name":{"identifier":"x"}}]}}]}
/tool/rule.java	resolveToAttribute	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPredefinedScope"},"arguments":[{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}}]},"name":{"identifier":"scope"},"type":{"name":{"identifier":"AttributeDict"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"scope"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"scope"}},"arguments":[{"name":{"identifier":"y"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"resolveRetvalOrProperty"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"anyLabelDef"}}}}]},"arguments":[{"name":{"identifier":"y"}}]}}]}}]}},{"expression":{}}]}
/tool/rule.java	resolvesToLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"expression":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"TOKEN_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}}}}}]}
/tool/rule.java	resolvesToListLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"expression":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"TOKEN_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}}}}}]}
/tool/rule.java	resolvesToToken	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"TOKEN_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"value":"false"}}]}
/tool/rule.java	resolvesToAttributeDict	{"statements":[{"condition":{"name":{"identifier":"resolvesToToken"},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"node"}}]},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"value":"false"}}]}
/tool/rule.java	resolveToRule	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"x"}},"arguments":[{"name":{"identifier":"name"},"scope":{}}]},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnyLabelDef"},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"anyLabelDef"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"anyLabelDef"}}}}]}}]}},{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"x"}}]}}]}
/tool/rule.java	getAnyLabelDef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getElementLabelDefs"}},"arguments":[{"name":{"identifier":"x"}}]},"name":{"identifier":"labels"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labels"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"value":"0"}]}}},{"expression":{}}]}
/tool/rule.java	getPredefinedScope	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getTypeString"},"scope":{"name":{"identifier":"g"}}},"right":{"value":":"}},"right":{"name":{"identifier":"ltype"}}},"name":{"identifier":"grammarLabelKey"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"grammarAndLabelRefTypeToScope"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"grammarLabelKey"}}]}}]}
/tool/rule.java	isFragment	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"modifiers"}},"right":{}},"thenStmt":{"expression":{"value":"false"}}},{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"a"}}},"arguments":[{"value":"fragment"}]},"thenStmt":{"expression":{"value":"true"}}}]},"iterable":{"name":{"identifier":"modifiers"}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"value":"false"}}]}
/tool/rule.java	hashCode	{"statements":[{"expression":{"name":{"identifier":"hashCode"},"scope":{"name":{"identifier":"name"}}}}]}
/tool/rule.java	equals	{"statements":[{"condition":{"operator":"EQUALS","left":{},"right":{"name":{"identifier":"obj"}}},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"Rule"}}}}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"}},"arguments":[{"name":{"identifier":"name"},"scope":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"Rule"}}}}}]}}]}
/tool/rule.java	toString	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"Rule{name="}]},"arguments":[{"name":{"identifier":"name"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"args"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":", args="}]},"arguments":[{"name":{"identifier":"args"}}]}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"retvals"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":", retvals="}]},"arguments":[{"name":{"identifier":"retvals"}}]}}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"}"}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/tool/grammar.java	info	{}
/tool/grammar.java	error	{}
/tool/grammar.java	warning	{}
/tool/grammar.java	pre	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}}},"value":{"name":{"identifier":"thiz"}}}},{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammar.java	post	{"statements":[{"expression":{"name":{"identifier":"t"}}}]}
/tool/grammar.java	initTokenSymbolTables	{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"tokenNameToTypeMap"}},"arguments":[{"value":"EOF"},{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{}]}}]}
/tool/grammar.java	loadImportedGrammars	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ast"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"IMPORT"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"i"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"i"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"}}},"name":{"identifier":"visited"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"name"},"scope":{}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"importedGrammars"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"c"}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"importedGrammarName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"ID"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"importedGrammarName"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"t"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"importedGrammarName"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"importedGrammarName"}}]},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"}},"value":{"name":{"identifier":"loadImportedGrammar"},"scope":{"name":{"identifier":"tool"}},"arguments":[{},{"name":{"identifier":"t"}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"ERROR_READING_IMPORTED_GRAMMAR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"importedGrammarName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"t"}}},{"name":{"identifier":"importedGrammarName"}},{"name":{"identifier":"name"}}]}},{}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"g"}},"right":{}},"thenStmt":{}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"g"}}},"value":{}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"importedGrammars"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"loadImportedGrammars"},"scope":{"name":{"identifier":"g"}}}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"i"}}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"name":{"identifier":"Object"}}}]}}]}
/tool/grammar.java	defineAction	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"atAST"}}},"right":{"value":"2"}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"atAST"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"scope"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTypeString"}},"name":{"identifier":"gtype"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"OR","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"scope"}},"arguments":[{"name":{"identifier":"gtype"}}]},"right":{"inner":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"scope"}},"arguments":[{"value":"parser"}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"gtype"}},"arguments":[{"value":"combined"}]}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"atAST"}},"arguments":[{"value":"1"}]}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"name"}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"atAST"}},"arguments":[{"value":"2"}]},"type":{"name":{"identifier":"ActionAST"}}}]}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"atAST"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"name"}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"atAST"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"ActionAST"}}}]}}]}}]}
/tool/grammar.java	defineRule	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"r"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"value":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"ruleNumber"}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"indexToRule"}},"arguments":[{"name":{"identifier":"r"}}]}},{"expression":{"value":"true"}}]}
/tool/grammar.java	undefineRule	{"statements":[{"condition":{"operator":"OR","left":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"right":{"value":"0"}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"indexToRule"}}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"indexToRule"}},"arguments":[{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}}]},"right":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"check":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]},"right":{"name":{"identifier":"r"}}}},{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"indexToRule"}},"arguments":[{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}}]}},{"body":{"statements":[{"check":{"operator":"EQUALS","left":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"indexToRule"}},"arguments":[{"name":{"identifier":"i"}}]}},"right":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}}},{"expression":{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"indexToRule"}},"arguments":[{"name":{"identifier":"i"}}]}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"indexToRule"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"ruleNumber"}}}},{"expression":{"value":"true"}}]}
/tool/grammar.java	getRule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"r"}}}},{"expression":{}}]}
/tool/grammar.java	getATN	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"atn"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ParserATNFactory"}},"arguments":[{}]},"name":{"identifier":"factory"},"type":{"name":{"identifier":"ParserATNFactory"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atn"}},"value":{"name":{"identifier":"createATN"},"scope":{"name":{"identifier":"factory"}}}}}]}},{"expression":{"name":{"identifier":"atn"}}}]}
/tool/grammar.java	getRule	{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"indexToRule"}},"arguments":[{"name":{"identifier":"index"}}]}}]}
/tool/grammar.java	getRule	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammarName"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImportedGrammar"},"arguments":[{"name":{"identifier":"grammarName"}}]},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"g"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"ruleName"}}]}}]}},{"expression":{"name":{"identifier":"getRule"},"arguments":[{"name":{"identifier":"ruleName"}}]}}]}
/tool/grammar.java	getAllImportedGrammars	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"importedGrammars"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Grammar"}}]}},"name":{"identifier":"delegates"},"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Grammar"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"delegates"}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"d"}}},{"name":{"identifier":"d"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllImportedGrammars"},"scope":{"name":{"identifier":"d"}}},"name":{"identifier":"ds"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ds"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"delegates"}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"imported"}}},{"name":{"identifier":"imported"}}]}}]},"iterable":{"name":{"identifier":"ds"}},"variable":{"variables":[{"name":{"identifier":"imported"},"type":{"name":{"identifier":"Grammar"}}}]}}]}}]},"iterable":{"name":{"identifier":"importedGrammars"}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Grammar"}}]},"arguments":[{"name":{"identifier":"values"},"scope":{"name":{"identifier":"delegates"}}}]}}]}
/tool/grammar.java	getImportedGrammars	{"statements":[{"expression":{"name":{"identifier":"importedGrammars"}}}]}
/tool/grammar.java	getImplicitLexer	{"statements":[{"expression":{"name":{"identifier":"implicitLexer"}}}]}
/tool/grammar.java	load	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Tool"}}},"name":{"identifier":"antlr"},"type":{"name":{"identifier":"Tool"}}}]}},{"expression":{"name":{"identifier":"loadGrammar"},"scope":{"name":{"identifier":"antlr"}},"arguments":[{"name":{"identifier":"fileName"}}]}}]}
/tool/grammar.java	getGrammarAncestors	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutermostGrammar"}},"name":{"identifier":"root"},"type":{"name":{"identifier":"Grammar"}}}]}},{"condition":{"operator":"EQUALS","left":{},"right":{"name":{"identifier":"root"}}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}},"name":{"identifier":"grammars"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parent"},"scope":{}},"name":{"identifier":"p"},"type":{"name":{"identifier":"Grammar"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"grammars"}},"arguments":[{"value":"0"},{"name":{"identifier":"p"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"p"}}}}}]},"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"p"}},"right":{}}},{"expression":{"name":{"identifier":"grammars"}}}]}
/tool/grammar.java	getOutermostGrammar	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"parent"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"getOutermostGrammar"},"scope":{"name":{"identifier":"parent"}}}}]}
/tool/grammar.java	getRecognizerName	{"statements":[{"expression":{"variables":[{"initializer":{"value":""},"name":{"identifier":"suffix"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammarAncestors"},"scope":{"name":{"identifier":"getOutermostGrammar"}}},"name":{"identifier":"grammarsFromRootToMe"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"name"}},"name":{"identifier":"qualifiedName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammarsFromRootToMe"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"_"}]}}]},"iterable":{"name":{"identifier":"grammarsFromRootToMe"}},"variable":{"variables":[{"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"name"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"qualifiedName"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}}]}},{"condition":{"operator":"OR","left":{"name":{"identifier":"isCombined"}},"right":{"inner":{"operator":"AND","left":{"name":{"identifier":"isLexer"}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"implicitLexer"}},"right":{}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"suffix"}},"value":{"name":{"identifier":"getGrammarTypeToFileNameSuffix"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"getType"}}]}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"qualifiedName"}},"right":{"name":{"identifier":"suffix"}}}}]}
/tool/grammar.java	getStringLiteralLexerRuleName	{"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"AUTO_GENERATED_TOKEN_NAME_PREFIX"}},"right":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"stringLiteralRuleNumber"}}}}}]}
/tool/grammar.java	getImportedGrammar	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"expression":{"name":{"identifier":"g"}}}}]},"iterable":{"name":{"identifier":"importedGrammars"}},"variable":{"variables":[{"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{}}]}
/tool/grammar.java	getTokenType	{"statements":[{"expression":{"variables":[{"name":{"identifier":"I"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"token"}},"arguments":[{"value":"0"}]},"right":{"value":"\'"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"I"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenNameToTypeMap"}},"arguments":[{"name":{"identifier":"token"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"I"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}},"arguments":[{"name":{"identifier":"token"}}]}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"inner":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"I"}},"right":{}}},"elseExpr":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}},"thenExpr":{"name":{"identifier":"I"}}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"i"}}}]}
/tool/grammar.java	getTokenDisplayName	{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"isLexer"}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"MIN_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"}}}}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"MAX_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getANTLRCharLiteralForChar"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"value":"EOF"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"INVALID_TOKEN_NAME"}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToStringLiteralList"}}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToStringLiteralList"}},"arguments":[{"name":{"identifier":"ttype"}}]},"right":{}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToStringLiteralList"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"}}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"ttype"}}]},"right":{}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}},{"expression":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}
/tool/grammar.java	getTokenName	{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"isLexer"}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"MIN_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"}}}}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"MAX_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getANTLRCharLiteralForChar"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"value":"EOF"}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"}}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"ttype"}}]},"right":{}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}},{"expression":{"name":{"identifier":"INVALID_TOKEN_NAME"}}}]}
/tool/grammar.java	getChannelValue	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"channelNameToValueMap"}},"arguments":[{"name":{"identifier":"channel"}}]},"name":{"identifier":"I"},"type":{"name":{"identifier":"Integer"}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"inner":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"I"}},"right":{}}},"elseExpr":{"operator":"MINUS","expression":{"value":"1"}},"thenExpr":{"name":{"identifier":"I"}}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"i"}}}]}
/tool/grammar.java	getRuleNames	{"statements":[{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"rules"}}}}]},"name":{"identifier":"result"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"name":{"identifier":"fill"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"result"}},{"name":{"identifier":"INVALID_RULE_NAME"}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"rule"}}},"name":{"name":{"identifier":"result"}}},"value":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule"}}}}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"}}},"variable":{"variables":[{"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/tool/grammar.java	getTokenNames	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMaxTokenType"}},"name":{"identifier":"numTokens"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"numTokens"}},"right":{"value":"1"}}}]},"name":{"identifier":"tokenNames"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"tokenNames"}}},"value":{"name":{"identifier":"getTokenName"},"arguments":[{"name":{"identifier":"i"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"tokenNames"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"tokenNames"}}}]}
/tool/grammar.java	getTokenDisplayNames	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMaxTokenType"}},"name":{"identifier":"numTokens"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"numTokens"}},"right":{"value":"1"}}}]},"name":{"identifier":"tokenNames"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"tokenNames"}}},"value":{"name":{"identifier":"getTokenDisplayName"},"arguments":[{"name":{"identifier":"i"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"tokenNames"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"tokenNames"}}}]}
/tool/grammar.java	getTokenLiteralNames	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMaxTokenType"}},"name":{"identifier":"numTokens"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"numTokens"}},"right":{"value":"1"}}}]},"name":{"identifier":"literalNames"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"literalNames"}}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToStringLiteralList"}},"arguments":[{"name":{"identifier":"i"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"length"},"scope":{"name":{"identifier":"literalNames"}}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToStringLiteralList"}}}]}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"body":{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"literalNames"}}}}},"right":{"operator":"EQUALS","left":{"index":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"name":{"name":{"identifier":"literalNames"}}},"right":{}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"name":{"name":{"identifier":"literalNames"}}},"value":{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}}}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"name":{"identifier":"literalNames"}}}]}
/tool/grammar.java	getTokenSymbolicNames	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMaxTokenType"}},"name":{"identifier":"numTokens"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"numTokens"}},"right":{"value":"1"}}}]},"name":{"identifier":"symbolicNames"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"i"}}]},"right":{}},"right":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"i"}}]},"arguments":[{"name":{"identifier":"AUTO_GENERATED_TOKEN_NAME_PREFIX"}}]}},"thenStmt":{"statements":[{}]}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"symbolicNames"}}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"i"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"length"},"scope":{"name":{"identifier":"symbolicNames"}}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"}}}]}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"symbolicNames"}}}]}
/tool/grammar.java	getVocabulary	{"statements":[{"expression":{"type":{"name":{"identifier":"VocabularyImpl"}},"arguments":[{"name":{"identifier":"getTokenLiteralNames"}},{"name":{"identifier":"getTokenSymbolicNames"}}]}}]}
/tool/grammar.java	getSemanticContextDisplayString	{"statements":[{"condition":{"expression":{"name":{"identifier":"semctx"}},"type":{"name":{"identifier":"Predicate"},"scope":{"name":{"identifier":"SemanticContext"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getPredicateDisplayString"},"arguments":[{"expression":{"name":{"identifier":"semctx"}},"type":{"name":{"identifier":"Predicate"},"scope":{"name":{"identifier":"SemanticContext"}}}}]}}]}},{"condition":{"expression":{"name":{"identifier":"semctx"}},"type":{"name":{"identifier":"AND"},"scope":{"name":{"identifier":"SemanticContext"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"semctx"}},"type":{"name":{"identifier":"AND"},"scope":{"name":{"identifier":"SemanticContext"}}}},"name":{"identifier":"and"},"type":{"name":{"identifier":"AND"},"scope":{"name":{"identifier":"SemanticContext"}}}}]}},{"expression":{"name":{"identifier":"joinPredicateOperands"},"arguments":[{"name":{"identifier":"and"}},{"value":" and "}]}}]}},{"condition":{"expression":{"name":{"identifier":"semctx"}},"type":{"name":{"identifier":"OR"},"scope":{"name":{"identifier":"SemanticContext"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"semctx"}},"type":{"name":{"identifier":"OR"},"scope":{"name":{"identifier":"SemanticContext"}}}},"name":{"identifier":"or"},"type":{"name":{"identifier":"OR"},"scope":{"name":{"identifier":"SemanticContext"}}}}]}},{"expression":{"name":{"identifier":"joinPredicateOperands"},"arguments":[{"name":{"identifier":"or"}},{"value":" or "}]}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"semctx"}}}}]}
/tool/grammar.java	joinPredicateOperands	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"buf"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"separator"}}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"getSemanticContextDisplayString"},"arguments":[{"name":{"identifier":"operand"}}]}]}}]},"iterable":{"name":{"identifier":"getOperands"},"scope":{"name":{"identifier":"op"}}},"variable":{"variables":[{"name":{"identifier":"operand"},"type":{"name":{"identifier":"SemanticContext"}}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/tool/grammar.java	getIndexToPredicateMap	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"PredAST"}}]}},"name":{"identifier":"indexToPredMap"},"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"PredAST"}}]}}]}},{"body":{"statements":[{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"PredAST"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"PredAST"}}},"name":{"identifier":"p"},"type":{"name":{"identifier":"PredAST"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"indexToPredMap"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempreds"}},"arguments":[{"name":{"identifier":"p"}}]},{"name":{"identifier":"p"}}]}}]}}]},"iterable":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"r"}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"indexToPredMap"}}}]}
/tool/grammar.java	getPredicateDisplayString	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"indexToPredMap"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"indexToPredMap"}},"value":{"name":{"identifier":"getIndexToPredicateMap"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"indexToPredMap"}},"arguments":[{"name":{"identifier":"predIndex"},"scope":{"name":{"identifier":"pred"}}}]},"name":{"identifier":"actionAST"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"actionAST"}}}}]}
/tool/grammar.java	getMaxCharValue	{"statements":[{"expression":{"name":{"identifier":"MAX_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"v4"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}}]}
/tool/grammar.java	getTokenTypes	{"statements":[{"condition":{"name":{"identifier":"isLexer"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getAllCharValues"}}}]}},{"expression":{"name":{"identifier":"of"},"scope":{"name":{"identifier":"IntervalSet"}},"arguments":[{"name":{"identifier":"MIN_USER_TOKEN_TYPE"},"scope":{"name":{"identifier":"Token"}}},{"name":{"identifier":"getMaxTokenType"}}]}}]}
/tool/grammar.java	getAllCharValues	{"statements":[{"expression":{"name":{"identifier":"of"},"scope":{"name":{"identifier":"IntervalSet"}},"arguments":[{"name":{"identifier":"MIN_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"}}},{"name":{"identifier":"getMaxCharValue"}}]}}]}
/tool/grammar.java	getMaxTokenType	{"statements":[{"expression":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"}}},"right":{"value":"1"}}}]}
/tool/grammar.java	getNewTokenType	{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"maxTokenType"}}}},{"expression":{"name":{"identifier":"maxTokenType"}}}]}
/tool/grammar.java	getNewChannelNumber	{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"maxChannelType"}}}},{"expression":{"name":{"identifier":"maxChannelType"}}}]}
/tool/grammar.java	importTokensFromTokensFile	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"arguments":[{"value":"tokenVocab"}]},"name":{"identifier":"vocab"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"vocab"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TokenVocabParser"}},"arguments":[{}]},"name":{"identifier":"vparser"},"type":{"name":{"identifier":"TokenVocabParser"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"load"},"scope":{"name":{"identifier":"vparser"}}},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"tokens="},"right":{"name":{"identifier":"tokens"}}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"0"}]},"right":{"value":"\'"}},"elseStmt":{"expression":{"name":{"identifier":"defineTokenName"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokens"}},"arguments":[{"name":{"identifier":"t"}}]}]}},"thenStmt":{"expression":{"name":{"identifier":"defineStringLiteral"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokens"}},"arguments":[{"name":{"identifier":"t"}}]}]}}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"tokens"}}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"String"}}}]}}]}}]}
/tool/grammar.java	importVocab	{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"defineTokenName"},"arguments":[{"name":{"identifier":"tokenName"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenNameToTypeMap"},"scope":{"name":{"identifier":"importG"}}},"arguments":[{"name":{"identifier":"tokenName"}}]}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"tokenNameToTypeMap"},"scope":{"name":{"identifier":"importG"}}}},"variable":{"variables":[{"name":{"identifier":"tokenName"},"type":{"name":{"identifier":"String"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"defineStringLiteral"},"arguments":[{"name":{"identifier":"tokenName"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"importG"}}},"arguments":[{"name":{"identifier":"tokenName"}}]}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"importG"}}}},"variable":{"variables":[{"name":{"identifier":"tokenName"},"type":{"name":{"identifier":"String"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"defineChannelName"},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"channel"}}},{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"channel"}}}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"channelNameToValueMap"},"scope":{"name":{"identifier":"importG"}}}},"variable":{"variables":[{"name":{"identifier":"channel"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"},"scope":{}}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"},"scope":{"name":{"identifier":"importG"}}}}]},"name":{"identifier":"max"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"setSize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"typeToTokenList"}},{"name":{"identifier":"max"}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"maxTokenType"}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"maxTokenType"}},{"name":{"identifier":"ttype"}}]}}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"typeToTokenList"},"scope":{}},"arguments":[{"name":{"identifier":"ttype"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"},"scope":{"name":{"identifier":"importG"}}},"arguments":[{"name":{"identifier":"ttype"}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"},"scope":{"name":{"identifier":"importG"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"ttype"}}}]},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"max"}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"size"},"scope":{"name":{"identifier":"channelValueToNameList"},"scope":{}}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"channelValueToNameList"},"scope":{"name":{"identifier":"importG"}}}}]}}},{"expression":{"name":{"identifier":"setSize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"channelValueToNameList"}},{"name":{"identifier":"max"}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"maxChannelType"}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"maxChannelType"}},{"name":{"identifier":"channelValue"}}]}}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"channelValueToNameList"},"scope":{}},"arguments":[{"name":{"identifier":"channelValue"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"channelValueToNameList"},"scope":{"name":{"identifier":"importG"}}},"arguments":[{"name":{"identifier":"channelValue"}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"channelValue"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"channelValueToNameList"},"scope":{"name":{"identifier":"importG"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"channelValue"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"channelValue"}}}]}]}
/tool/grammar.java	defineTokenName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenNameToTypeMap"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"prev"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"prev"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"defineTokenName"},"arguments":[{"name":{"identifier":"name"}},{"name":{"identifier":"getNewTokenType"}}]}}},{"expression":{"name":{"identifier":"prev"}}}]}
/tool/grammar.java	defineTokenName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenNameToTypeMap"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"prev"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"prev"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"prev"}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"tokenNameToTypeMap"}},"arguments":[{"name":{"identifier":"name"}},{"name":{"identifier":"ttype"}}]}},{"expression":{"name":{"identifier":"setTokenForType"},"arguments":[{"name":{"identifier":"ttype"}},{"name":{"identifier":"name"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"maxTokenType"}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"maxTokenType"}},{"name":{"identifier":"ttype"}}]}}},{"expression":{"name":{"identifier":"ttype"}}}]}
/tool/grammar.java	defineStringLiteral	{"statements":[{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}},"arguments":[{"name":{"identifier":"lit"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}},"arguments":[{"name":{"identifier":"lit"}}]}}]}},{"expression":{"name":{"identifier":"defineStringLiteral"},"arguments":[{"name":{"identifier":"lit"}},{"name":{"identifier":"getNewTokenType"}}]}}]}
/tool/grammar.java	defineStringLiteral	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}},"arguments":[{"name":{"identifier":"lit"}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}},"arguments":[{"name":{"identifier":"lit"}},{"name":{"identifier":"ttype"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToStringLiteralList"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setSize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"typeToStringLiteralList"}},{"operator":"PLUS","left":{"name":{"identifier":"ttype"}},"right":{"value":"1"}}]}}]}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"typeToStringLiteralList"}},"arguments":[{"name":{"identifier":"ttype"}},{"name":{"identifier":"lit"}}]}},{"expression":{"name":{"identifier":"setTokenForType"},"arguments":[{"name":{"identifier":"ttype"}},{"name":{"identifier":"lit"}}]}},{"expression":{"name":{"identifier":"ttype"}}}]}},{"expression":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}}]}
/tool/grammar.java	defineTokenAlias	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"defineTokenName"},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"}},"arguments":[{"name":{"identifier":"lit"}},{"name":{"identifier":"ttype"}}]}},{"expression":{"name":{"identifier":"setTokenForType"},"arguments":[{"name":{"identifier":"ttype"}},{"name":{"identifier":"name"}}]}},{"expression":{"name":{"identifier":"ttype"}}}]}
/tool/grammar.java	setTokenForType	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToTokenList"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setSize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"typeToTokenList"}},{"operator":"PLUS","left":{"name":{"identifier":"ttype"}},"right":{"value":"1"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"ttype"}}]},"name":{"identifier":"prevToken"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"prevToken"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"prevToken"}},"arguments":[{"value":"0"}]},"right":{"value":"\'"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"typeToTokenList"}},"arguments":[{"name":{"identifier":"ttype"}},{"name":{"identifier":"text"}}]}}]}}]}
/tool/grammar.java	defineChannelName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"channelNameToValueMap"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"prev"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"prev"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineChannelName"},"arguments":[{"name":{"identifier":"name"}},{"name":{"identifier":"getNewChannelNumber"}}]}}]}},{"expression":{"name":{"identifier":"prev"}}}]}
/tool/grammar.java	defineChannelName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"channelNameToValueMap"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"prev"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"prev"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"prev"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"channelNameToValueMap"}},"arguments":[{"name":{"identifier":"name"}},{"name":{"identifier":"value"}}]}},{"expression":{"name":{"identifier":"setChannelNameForValue"},"arguments":[{"name":{"identifier":"value"}},{"name":{"identifier":"name"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"maxChannelType"}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"maxChannelType"}},{"name":{"identifier":"value"}}]}}},{"expression":{"name":{"identifier":"value"}}}]}
/tool/grammar.java	setChannelNameForValue	{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"channelValue"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"channelValueToNameList"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setSize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"channelValueToNameList"}},{"operator":"PLUS","left":{"name":{"identifier":"channelValue"}},"right":{"value":"1"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"channelValueToNameList"}},"arguments":[{"name":{"identifier":"channelValue"}}]},"name":{"identifier":"prevChannel"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"prevChannel"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"channelValueToNameList"}},"arguments":[{"name":{"identifier":"channelValue"}},{"name":{"identifier":"name"}}]}}]}}]}
/tool/grammar.java	resolveToAttribute	{"statements":[{"expression":{}}]}
/tool/grammar.java	resolveToAttribute	{"statements":[{"expression":{}}]}
/tool/grammar.java	resolvesToLabel	{"statements":[{"expression":{"value":"false"}}]}
/tool/grammar.java	resolvesToListLabel	{"statements":[{"expression":{"value":"false"}}]}
/tool/grammar.java	resolvesToToken	{"statements":[{"expression":{"value":"false"}}]}
/tool/grammar.java	resolvesToAttributeDict	{"statements":[{"expression":{"value":"false"}}]}
/tool/grammar.java	getDefaultActionScope	{"statements":[{"selector":{"name":{"identifier":"getType"}},"entries":[{"label":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"lexer"}}]},{"label":{"name":{"identifier":"PARSER"},"scope":{"name":{"identifier":"ANTLRParser"}}}},{"label":{"name":{"identifier":"COMBINED"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"parser"}}]}]},{"expression":{}}]}
/tool/grammar.java	getType	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ast"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"ast"}}}}},{"expression":{"value":"0"}}]}
/tool/grammar.java	getTokenStream	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ast"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"tokenStream"},"scope":{"name":{"identifier":"ast"}}}}},{"expression":{}}]}
/tool/grammar.java	isLexer	{"statements":[{"expression":{"operator":"EQUALS","left":{"name":{"identifier":"getType"}},"right":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}}}}]}
/tool/grammar.java	isParser	{"statements":[{"expression":{"operator":"EQUALS","left":{"name":{"identifier":"getType"}},"right":{"name":{"identifier":"PARSER"},"scope":{"name":{"identifier":"ANTLRParser"}}}}}]}
/tool/grammar.java	isCombined	{"statements":[{"expression":{"operator":"EQUALS","left":{"name":{"identifier":"getType"}},"right":{"name":{"identifier":"COMBINED"},"scope":{"name":{"identifier":"ANTLRParser"}}}}}]}
/tool/grammar.java	isTokenName	{"statements":[{"expression":{"name":{"identifier":"isUpperCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"id"}},"arguments":[{"value":"0"}]}]}}]}
/tool/grammar.java	getTypeString	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ast"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"toLowerCase"},"scope":{"index":{"name":{"identifier":"getType"}},"name":{"name":{"identifier":"tokenNames"},"scope":{"name":{"identifier":"ANTLRParser"}}}}}}]}
/tool/grammar.java	getGrammarTypeToFileNameSuffix	{"statements":[{"selector":{"name":{"identifier":"type"}},"entries":[{"label":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"Lexer"}}]},{"label":{"name":{"identifier":"PARSER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"Parser"}}]},{"label":{"name":{"identifier":"COMBINED"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"Parser"}}]},{"statements":[{"expression":{"value":"<invalid>"}}]}]}]}
/tool/grammar.java	getOptionString	{"statements":[{"expression":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"key"}}]}}]}
/tool/grammar.java	setNodeOptions	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"node"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"t"}}},"right":{"value":"0"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"options"}}},"right":{"value":"0"}}},"thenStmt":{}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"c"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"c"}}},"right":{"name":{"identifier":"ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"setOption"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"c"}}},{}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setOption"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"c"}},"arguments":[{"value":"0"}]}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"c"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"options"}}},"variable":{"variables":[{"name":{"identifier":"o"},"type":{"name":{"identifier":"Object"}}}]}}]}
/tool/grammar.java	getStringLiteralAliasesFromLexerRules	{"statements":[{"expression":{"variables":[{"initializer":{"values":[{"value":"(RULE %name:TOKEN_REF (BLOCK (ALT %lit:STRING_LITERAL)))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (ALT %lit:STRING_LITERAL ACTION)))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (ALT %lit:STRING_LITERAL SEMPRED)))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (LEXER_ALT_ACTION (ALT %lit:STRING_LITERAL) .)))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (LEXER_ALT_ACTION (ALT %lit:STRING_LITERAL) . .)))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (LEXER_ALT_ACTION (ALT %lit:STRING_LITERAL) (LEXER_ACTION_CALL . .))))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (LEXER_ALT_ACTION (ALT %lit:STRING_LITERAL) . (LEXER_ACTION_CALL . .))))"},{"value":"(RULE %name:TOKEN_REF (BLOCK (LEXER_ALT_ACTION (ALT %lit:STRING_LITERAL) (LEXER_ACTION_CALL . .) .)))"}]},"name":{"identifier":"patterns"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ast"}}}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreeWizard"},"scope":{"name":{"identifier":"tree"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}},"arguments":[{"name":{"identifier":"adaptor"}},{"name":{"identifier":"tokenNames"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"wiz"},"type":{"name":{"identifier":"TreeWizard"},"scope":{"name":{"identifier":"tree"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}]}},"name":{"identifier":"lexerRuleToStringLiteral"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"ruleNodes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"ruleNodes"}},"right":{}},"right":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"ruleNodes"}}}},"thenStmt":{"expression":{}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"r"}},"arguments":[{"value":"0"}]},"name":{"identifier":"name"},"type":{"name":{"identifier":"Tree"},"scope":{"name":{"identifier":"tree"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"name"}}},"right":{"name":{"identifier":"TOKEN_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"name":{"identifier":"isLitRule"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isLitRule"}},"value":{"name":{"identifier":"defAlias"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"pattern"}},{"name":{"identifier":"wiz"}},{"name":{"identifier":"lexerRuleToStringLiteral"}}]}}},{"condition":{"name":{"identifier":"isLitRule"}},"thenStmt":{}}]},"iterable":{"name":{"identifier":"patterns"}},"variable":{"variables":[{"name":{"identifier":"pattern"},"type":{"name":{"identifier":"String"}}}]}}]}}]},"iterable":{"name":{"identifier":"ruleNodes"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"lexerRuleToStringLiteral"}}}]}
/tool/grammar.java	defAlias	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Object"}}]}},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Object"}}]}}]}},{"condition":{"name":{"identifier":"parse"},"scope":{"name":{"identifier":"wiz"}},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"pattern"}},{"name":{"identifier":"nodes"}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"value":"lit"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"litNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"value":"name"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"nameNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]},"arguments":[{"name":{"identifier":"nameNode"}},{"name":{"identifier":"litNode"}}]},"name":{"identifier":"pair"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerRuleToStringLiteral"}},"arguments":[{"name":{"identifier":"pair"}}]}},{"expression":{"value":"true"}}]}},{"expression":{"value":"false"}}]}
/tool/grammar.java	getStringLiterals	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"strings"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarTreeVisitor"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"strings"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}}]},"type":{},"name":{"identifier":"stringRef"},"parameters":[{"isVarArgs":"false","name":{"identifier":"ref"},"type":{"name":{"identifier":"TerminalAST"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}}}]},"type":{"name":{"identifier":"ErrorManager"}},"name":{"identifier":"getErrorManager"},"annotations":[{"name":{"identifier":"Override"}}]}]},"name":{"identifier":"collector"},"type":{"name":{"identifier":"GrammarTreeVisitor"}}}]}},{"expression":{"name":{"identifier":"visitGrammar"},"scope":{"name":{"identifier":"collector"}},"arguments":[{"name":{"identifier":"ast"}}]}},{"expression":{"name":{"identifier":"strings"}}}]}
/tool/grammar.java	stringRef	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"strings"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}}]}
/tool/grammar.java	getErrorManager	{"statements":[{"expression":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}}}]}
/tool/grammar.java	setLookaheadDFA	{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"decisionDFAs"}},"arguments":[{"name":{"identifier":"decision"}},{"name":{"identifier":"lookaheadDFA"}}]}}]}
/tool/grammar.java	getStateToGrammarRegionMap	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"Interval"}}]}},"name":{"identifier":"stateToGrammarRegionMap"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"Interval"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ast"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"stateToGrammarRegionMap"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"grammarTokenTypes"}}]},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"n"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"of"},"scope":{"name":{"identifier":"Interval"}},"arguments":[{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"n"}}},{"name":{"identifier":"getTokenStopIndex"},"scope":{"name":{"identifier":"n"}}}]},"name":{"identifier":"tokenRegion"},"type":{"name":{"identifier":"Interval"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"ruleNode"},"type":{"name":{"identifier":"Tree"},"scope":{"name":{"identifier":"tree"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}]}},{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"n"}}},"entries":[{"label":{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleNode"}},"value":{"name":{"identifier":"n"}}}},{}]},{"label":{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}},{"label":{"name":{"identifier":"CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleNode"}},"value":{"name":{"identifier":"getAncestor"},"scope":{"name":{"identifier":"n"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}}},{}]}]},{"condition":{"expression":{"name":{"identifier":"ruleNode"}},"type":{"name":{"identifier":"RuleAST"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRuleName"},"scope":{"inner":{"expression":{"name":{"identifier":"ruleNode"}},"type":{"name":{"identifier":"RuleAST"}}}}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"ast"}}},"arguments":[{"name":{"identifier":"ruleName"}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOriginalAST"},"scope":{"inner":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}}}},"name":{"identifier":"originalAST"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokenRegion"}},"value":{"name":{"identifier":"of"},"scope":{"name":{"identifier":"Interval"}},"arguments":[{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"originalAST"}}},{"name":{"identifier":"getTokenStopIndex"},"scope":{"name":{"identifier":"originalAST"}}}]}}}]}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"stateToGrammarRegionMap"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"n"}}}},{"name":{"identifier":"tokenRegion"}}]}}]}}]},"iterable":{"name":{"identifier":"nodes"}},"variable":{"variables":[{"name":{"identifier":"n"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"stateToGrammarRegionMap"}}}]}
/tool/grammar.java	getStateToGrammarRegion	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"stateToGrammarRegionMap"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateToGrammarRegionMap"}},"value":{"name":{"identifier":"getStateToGrammarRegionMap"},"arguments":[{"name":{"identifier":"ast"}},{}]}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"stateToGrammarRegionMap"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"INVALID"},"scope":{"name":{"identifier":"Interval"}}}}},{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stateToGrammarRegionMap"}},"arguments":[{"name":{"identifier":"atnStateNumber"}}]}}]}
/tool/grammar.java	createLexerInterpreter	{"statements":[{"condition":{"name":{"identifier":"isParser"},"scope":{}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalStateException"}},"arguments":[{"value":"A lexer interpreter can only be created for a lexer or combined grammar."}]}}]}},{"condition":{"name":{"identifier":"isCombined"},"scope":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"createLexerInterpreter"},"scope":{"name":{"identifier":"implicitLexer"}},"arguments":[{"name":{"identifier":"input"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSerializedAsChars"},"scope":{"name":{"identifier":"ATNSerializer"}},"arguments":[{"name":{"identifier":"atn"}}]},"name":{"identifier":"serializedAtn"},"type":{"origin":"TYPE","componentType":{"type":"CHAR"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"deserialize"},"scope":{"type":{"name":{"identifier":"ATNDeserializer"}}},"arguments":[{"name":{"identifier":"serializedAtn"}}]},"name":{"identifier":"deserialized"},"type":{"name":{"identifier":"ATN"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"allChannels"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"allChannels"}},"arguments":[{"value":"DEFAULT_TOKEN_CHANNEL"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"allChannels"}},"arguments":[{"value":"HIDDEN"}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"allChannels"}},"arguments":[{"name":{"identifier":"channelValueToNameList"}}]}},{"expression":{"type":{"name":{"identifier":"LexerInterpreter"}},"arguments":[{"name":{"identifier":"fileName"}},{"name":{"identifier":"getVocabulary"}},{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getRuleNames"}}]},{"name":{"identifier":"allChannels"}},{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"modes"},"scope":{"inner":{"expression":{},"type":{"name":{"identifier":"LexerGrammar"}}}}}},{"name":{"identifier":"deserialized"}},{"name":{"identifier":"input"}}]}}]}
/tool/grammar.java	createGrammarParserInterpreter	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalStateException"}},"arguments":[{"value":"A parser interpreter can only be created for a parser or combined grammar."}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSerializedAsChars"},"scope":{"name":{"identifier":"ATNSerializer"}},"arguments":[{"name":{"identifier":"atn"}}]},"name":{"identifier":"serializedAtn"},"type":{"origin":"TYPE","componentType":{"type":"CHAR"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"deserialize"},"scope":{"type":{"name":{"identifier":"ATNDeserializer"}}},"arguments":[{"name":{"identifier":"serializedAtn"}}]},"name":{"identifier":"deserialized"},"type":{"name":{"identifier":"ATN"}}}]}},{"expression":{"type":{"name":{"identifier":"GrammarParserInterpreter"}},"arguments":[{},{"name":{"identifier":"deserialized"}},{"name":{"identifier":"tokenStream"}}]}}]}
/tool/grammar.java	createParserInterpreter	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalStateException"}},"arguments":[{"value":"A parser interpreter can only be created for a parser or combined grammar."}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSerializedAsChars"},"scope":{"name":{"identifier":"ATNSerializer"}},"arguments":[{"name":{"identifier":"atn"}}]},"name":{"identifier":"serializedAtn"},"type":{"origin":"TYPE","componentType":{"type":"CHAR"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"deserialize"},"scope":{"type":{"name":{"identifier":"ATNDeserializer"}}},"arguments":[{"name":{"identifier":"serializedAtn"}}]},"name":{"identifier":"deserialized"},"type":{"name":{"identifier":"ATN"}}}]}},{"expression":{"type":{"name":{"identifier":"ParserInterpreter"}},"arguments":[{"name":{"identifier":"fileName"}},{"name":{"identifier":"getVocabulary"}},{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getRuleNames"}}]},{"name":{"identifier":"deserialized"}},{"name":{"identifier":"tokenStream"}}]}}]}
/tool/leftrecursiverule.java	hasAltSpecificContexts	{"statements":[{"expression":{"operator":"OR","left":{"name":{"identifier":"hasAltSpecificContexts"},"scope":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getAltLabels"}},"right":{}}}}]}
/tool/leftrecursiverule.java	getOriginalNumberOfAlts	{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"recPrimaryAlts"}},"right":{}},"thenStmt":{"expression":{"operator":"PLUS","target":{"name":{"identifier":"n"}},"value":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recPrimaryAlts"}}}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"recOpAlts"}},"right":{}},"thenStmt":{"expression":{"operator":"PLUS","target":{"name":{"identifier":"n"}},"value":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recOpAlts"}}}}}},{"expression":{"name":{"identifier":"n"}}}]}
/tool/leftrecursiverule.java	getOriginalAST	{"statements":[{"expression":{"name":{"identifier":"originalAST"}}}]}
/tool/leftrecursiverule.java	getUnlabeledAltASTs	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}},"name":{"identifier":"alts"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"name":{"identifier":"originalAltAST"},"scope":{"name":{"identifier":"altInfo"}}}]}}}]},"iterable":{"name":{"identifier":"recPrimaryAlts"}},"variable":{"variables":[{"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getElement"},"scope":{"name":{"identifier":"recOpAlts"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"name":{"identifier":"originalAltAST"},"scope":{"name":{"identifier":"altInfo"}}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recOpAlts"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"alts"}}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"alts"}}}]}
/tool/leftrecursiverule.java	getPrimaryAlts	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recPrimaryAlts"}}},"right":{"value":"0"}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"elementType":{"type":"INT"},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recPrimaryAlts"}}},"right":{"value":"1"}}}]},"name":{"identifier":"alts"},"type":{"origin":"TYPE","componentType":{"type":"INT"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"recPrimaryAlts"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"operator":"ASSIGN","target":{"index":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}},"name":{"name":{"identifier":"alts"}}},"value":{"name":{"identifier":"altNum"},"scope":{"name":{"identifier":"altInfo"}}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recPrimaryAlts"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"alts"}}}]}
/tool/leftrecursiverule.java	getRecursiveOpAlts	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recOpAlts"}}},"right":{"value":"0"}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"elementType":{"type":"INT"},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recOpAlts"}}},"right":{"value":"1"}}}]},"name":{"identifier":"alts"},"type":{"origin":"TYPE","componentType":{"type":"INT"}}}]}},{"expression":{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"alt"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"alt"}},"name":{"name":{"identifier":"alts"}}},"value":{"name":{"identifier":"altNum"},"scope":{"name":{"identifier":"altInfo"}}}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"alt"}}}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"recOpAlts"}}},"variable":{"variables":[{"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"name":{"identifier":"alts"}}}]}
/tool/leftrecursiverule.java	getAltLabels	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}},"name":{"identifier":"labels"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAltLabels"},"scope":{}},"name":{"identifier":"normalAltLabels"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"normalAltLabels"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"normalAltLabels"}}]}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"recPrimaryAlts"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}}]},"name":{"identifier":"pairs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"pairs"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"pairs"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},{"name":{"identifier":"pairs"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"pairs"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]},"arguments":[{"name":{"identifier":"altNum"},"scope":{"name":{"identifier":"altInfo"}}},{"name":{"identifier":"originalAltAST"},"scope":{"name":{"identifier":"altInfo"}}}]}]}}]}}]},"iterable":{"name":{"identifier":"recPrimaryAlts"}},"variable":{"variables":[{"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"recOpAlts"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getElement"},"scope":{"name":{"identifier":"recOpAlts"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}}]},"name":{"identifier":"pairs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"pairs"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"pairs"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},{"name":{"identifier":"pairs"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"pairs"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]},"arguments":[{"name":{"identifier":"altNum"},"scope":{"name":{"identifier":"altInfo"}}},{"name":{"identifier":"originalAltAST"},"scope":{"name":{"identifier":"altInfo"}}}]}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recOpAlts"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"labels"}}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"labels"}}}]}
/tool/defaulttoollistener.java	info	{"statements":[{"condition":{"name":{"identifier":"formatWantsSingleLineMessage"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"msg"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"msg"}},"arguments":[{"value":"\n"},{"value":" "}]}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/tool/defaulttoollistener.java	error	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMessageTemplate"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"msg"}}]},"name":{"identifier":"msgST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"msgST"}}},"name":{"identifier":"outputMsg"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"formatWantsSingleLineMessage"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputMsg"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"outputMsg"}},"arguments":[{"value":"\n"},{"value":" "}]}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"outputMsg"}}]}}]}
/tool/defaulttoollistener.java	warning	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMessageTemplate"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"msg"}}]},"name":{"identifier":"msgST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"msgST"}}},"name":{"identifier":"outputMsg"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"formatWantsSingleLineMessage"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputMsg"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"outputMsg"}},"arguments":[{"value":"\n"},{"value":" "}]}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"outputMsg"}}]}}]}
/tool/errorseverity.java	getText	{"statements":[{"expression":{"name":{"identifier":"text"}}}]}
/tool/attributedict.java	add	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"dict"},"scope":{"name":{"identifier":"a"}}},"value":{}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"attributes"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"a"}}},{"name":{"identifier":"a"}}]}}]}
/tool/attributedict.java	get	{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"attributes"}},"arguments":[{"name":{"identifier":"name"}}]}}]}
/tool/attributedict.java	getName	{"statements":[{"expression":{"name":{"identifier":"name"}}}]}
/tool/attributedict.java	size	{"statements":[{"expression":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"attributes"}}}}]}
/tool/attributedict.java	intersection	{"statements":[{"condition":{"operator":"OR","left":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"other"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"other"}}},"right":{"value":"0"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"size"}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"emptySet"},"scope":{"name":{"identifier":"Collections"}}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]},"arguments":[{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"attributes"}}}]},"name":{"identifier":"result"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"retainAll"},"scope":{"name":{"identifier":"result"}},"arguments":[{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"attributes"},"scope":{"name":{"identifier":"other"}}}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/tool/attributedict.java	toString	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getName"}},"right":{"value":":"}},"right":{"name":{"identifier":"attributes"}}}}]}
/tool/leftrecursioncyclesmessage.java	getStartTokenOfFirstRule	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"cycles"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"collection"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule"}}}}}]}}]},"iterable":{"name":{"identifier":"collection"}},"variable":{"variables":[{"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}}]},"iterable":{"name":{"identifier":"cycles"}},"variable":{"variables":[{"name":{"identifier":"collection"},"type":{"name":{"identifier":"Collection"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}},{"expression":{}}]}
/tool/errormanager.java	resetErrorState	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"errors"}},"value":{"value":"0"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"warnings"}},"value":{"value":"0"}}}]}
/tool/errormanager.java	getMessageTemplate	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMessageTemplate"},"scope":{"name":{"identifier":"msg"}},"arguments":[{"name":{"identifier":"longMessages"},"scope":{"name":{"identifier":"tool"}}}]},"name":{"identifier":"messageST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getLocationFormat"}},"name":{"identifier":"locationST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getReportFormat"},"arguments":[{"name":{"identifier":"severity"},"scope":{"name":{"identifier":"getErrorType"},"scope":{"name":{"identifier":"msg"}}}}]},"name":{"identifier":"reportST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMessageFormat"}},"name":{"identifier":"messageFormatST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"locationValid"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"line"},"scope":{"name":{"identifier":"msg"}}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"locationST"}},"arguments":[{"value":"line"},{"name":{"identifier":"line"},"scope":{"name":{"identifier":"msg"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"locationValid"}},"value":{"value":"true"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charPosition"},"scope":{"name":{"identifier":"msg"}}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"locationST"}},"arguments":[{"value":"column"},{"name":{"identifier":"charPosition"},"scope":{"name":{"identifier":"msg"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"locationValid"}},"value":{"value":"true"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"msg"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"msg"}}},"name":{"identifier":"displayFileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"antlr"}]},"elseStmt":{},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"msg"}}}]},"name":{"identifier":"f"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"f"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"displayFileName"}},"value":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"f"}}}}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"locationST"}},"arguments":[{"value":"file"},{"name":{"identifier":"displayFileName"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"locationValid"}},"value":{"value":"true"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageFormatST"}},"arguments":[{"value":"id"},{"name":{"identifier":"code"},"scope":{"name":{"identifier":"getErrorType"},"scope":{"name":{"identifier":"msg"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"messageFormatST"}},"arguments":[{"value":"text"},{"name":{"identifier":"messageST"}}]}},{"condition":{"name":{"identifier":"locationValid"}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"reportST"}},"arguments":[{"value":"location"},{"name":{"identifier":"locationST"}}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"reportST"}},"arguments":[{"value":"message"},{"name":{"identifier":"messageFormatST"}}]}},{"expression":{"name":{"identifier":"reportST"}}}]}
/tool/errormanager.java	getLocationFormat	{"statements":[{"expression":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"location"}]}}]}
/tool/errormanager.java	getReportFormat	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"report"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"type"},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"severity"}}}]}},{"expression":{"name":{"identifier":"st"}}}]}
/tool/errormanager.java	getMessageFormat	{"statements":[{"expression":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"message"}]}}]}
/tool/errormanager.java	formatWantsSingleLineMessage	{"statements":[{"expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"wantsSingleLineMessage"}]}},"arguments":[{"value":"true"}]}}]}
/tool/errormanager.java	info	{"statements":[{"expression":{"name":{"identifier":"info"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/tool/errormanager.java	syntaxError	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarSyntaxMessage"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"}},{"name":{"identifier":"antlrException"}},{"name":{"identifier":"args"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"ANTLRMessage"}}}]}},{"expression":{"name":{"identifier":"emit"},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"msg"}}]}}]}
/tool/errormanager.java	fatalInternalError	{"statements":[{"expression":{"name":{"identifier":"internalError"},"arguments":[{"name":{"identifier":"error"}},{"name":{"identifier":"e"}}]}},{"expression":{"type":{"name":{"identifier":"RuntimeException"}},"arguments":[{"name":{"identifier":"error"}},{"name":{"identifier":"e"}}]}}]}
/tool/errormanager.java	internalError	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getLastNonErrorManagerCodeLocation"},"arguments":[{"name":{"identifier":"e"}}]},"name":{"identifier":"location"},"type":{"name":{"identifier":"StackTraceElement"}}}]}},{"expression":{"name":{"identifier":"internalError"},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Exception "},"right":{"name":{"identifier":"e"}}},"right":{"value":"@"}},"right":{"name":{"identifier":"location"}}},"right":{"value":": "}},"right":{"name":{"identifier":"error"}}}]}}]}
/tool/errormanager.java	internalError	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getLastNonErrorManagerCodeLocation"},"arguments":[{"type":{"name":{"identifier":"Exception"}}}]},"name":{"identifier":"location"},"type":{"name":{"identifier":"StackTraceElement"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"location"}},"right":{"value":": "}},"right":{"name":{"identifier":"error"}}},"name":{"identifier":"msg"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"value":"internal error: "},"right":{"name":{"identifier":"msg"}}}]}}]}
/tool/errormanager.java	toolError	{"statements":[{"expression":{"name":{"identifier":"toolError"},"arguments":[{"name":{"identifier":"errorType"}},{},{"name":{"identifier":"args"}}]}}]}
/tool/errormanager.java	toolError	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ToolMessage"}},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"e"}},{"name":{"identifier":"args"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"ToolMessage"}}}]}},{"expression":{"name":{"identifier":"emit"},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"msg"}}]}}]}
/tool/errormanager.java	grammarError	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarSemanticsMessage"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"}},{"name":{"identifier":"args"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"ANTLRMessage"}}}]}},{"expression":{"name":{"identifier":"emit"},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"msg"}}]}}]}
/tool/errormanager.java	leftRecursionCycles	{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"errors"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursionCyclesMessage"}},"arguments":[{"name":{"identifier":"fileName"}},{"name":{"identifier":"cycles"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"ANTLRMessage"}}}]}},{"expression":{"name":{"identifier":"error"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/tool/errormanager.java	getNumErrors	{"statements":[{"expression":{"name":{"identifier":"errors"}}}]}
/tool/errormanager.java	getLastNonErrorManagerCodeLocation	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStackTrace"},"scope":{"name":{"identifier":"e"}}},"name":{"identifier":"stack"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"StackTraceElement"}}}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"stack"}}},"name":{"identifier":"t"},"type":{"name":{"identifier":"StackTraceElement"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"t"}}},"arguments":[{"value":"ErrorManager"}]}},"thenStmt":{"statements":[{}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"stack"}}}},"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"stack"}}},"name":{"identifier":"location"},"type":{"name":{"identifier":"StackTraceElement"}}}]}},{"expression":{"name":{"identifier":"location"}}}]}
/tool/errormanager.java	emit	{"statements":[{"selector":{"name":{"identifier":"severity"},"scope":{"name":{"identifier":"etype"}}},"entries":[{"label":{"name":{"identifier":"WARNING_ONE_OFF"}},"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"errorTypes"}},"arguments":[{"name":{"identifier":"etype"}}]},"thenStmt":{}}]},{"label":{"name":{"identifier":"WARNING"}},"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"warnings"}}}},{"expression":{"name":{"identifier":"warning"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"msg"}}]}},{}]},{"label":{"name":{"identifier":"ERROR_ONE_OFF"}},"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"errorTypes"}},"arguments":[{"name":{"identifier":"etype"}}]},"thenStmt":{}}]},{"label":{"name":{"identifier":"ERROR"}},"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"errors"}}}},{"expression":{"name":{"identifier":"error"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"msg"}}]}},{}]}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"errorTypes"}},"arguments":[{"name":{"identifier":"etype"}}]}}]}
/tool/errormanager.java	setFormat	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"formatName"},"scope":{}},"value":{"name":{"identifier":"formatName"}}}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"FORMATS_DIR"}},"right":{"name":{"identifier":"formatName"}}},"right":{"name":{"identifier":"GROUP_FILE_EXTENSION"},"scope":{"name":{"identifier":"STGroup"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getContextClassLoader"},"scope":{"name":{"identifier":"currentThread"},"scope":{"name":{"identifier":"Thread"}}}},"name":{"identifier":"cl"},"type":{"name":{"identifier":"ClassLoader"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getResource"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"url"},"type":{"name":{"identifier":"URL"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"url"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cl"}},"value":{"name":{"identifier":"getClassLoader"},"scope":{"type":{"name":{"identifier":"ErrorManager"}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"url"}},"value":{"name":{"identifier":"getResource"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"fileName"}}]}}}]}},{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"url"}},"right":{}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"formatName"}},"arguments":[{"value":"antlr"}]}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"url"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"rawError"},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"no such message format file "},"right":{"name":{"identifier":"fileName"}}},"right":{"value":" retrying with default ANTLR format"}}]}},{"expression":{"name":{"identifier":"setFormat"},"arguments":[{"value":"antlr"}]}},{}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"rawError"},"arguments":[{"operator":"PLUS","left":{"value":"ANTLR installation corrupted; cannot find ANTLR messages format file "},"right":{"name":{"identifier":"fileName"}}}]}},{"expression":{"name":{"identifier":"panic"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"format"}},"value":{"type":{"name":{"identifier":"STGroupFile"}},"arguments":[{"name":{"identifier":"fileName"}},{"value":"UTF-8"}]}}},{"expression":{"name":{"identifier":"load"},"scope":{"name":{"identifier":"format"}}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"errors"},"scope":{"name":{"identifier":"initSTListener"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"rawError"},"arguments":[{"operator":"PLUS","left":{"value":"ANTLR installation corrupted; can't load messages format file:\n"},"right":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"initSTListener"}}}}]}},{"expression":{"name":{"identifier":"panic"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"verifyFormat"}},"name":{"identifier":"formatOK"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"formatOK"}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"formatName"}},"arguments":[{"value":"antlr"}]}},"elseStmt":{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"formatOK"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setFormat"},"arguments":[{"value":"antlr"}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"rawError"},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"ANTLR installation corrupted; ANTLR messages format file "},"right":{"name":{"identifier":"formatName"}}},"right":{"value":".stg incomplete"}}]}},{"expression":{"name":{"identifier":"panic"}}}]}}]}
/tool/errormanager.java	verifyFormat	{"statements":[{"expression":{"variables":[{"initializer":{"value":"true"},"name":{"identifier":"ok"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDefined"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"location"}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"value":"Format template 'location' not found in "},"right":{"name":{"identifier":"formatName"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDefined"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"message"}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"value":"Format template 'message' not found in "},"right":{"name":{"identifier":"formatName"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDefined"},"scope":{"name":{"identifier":"format"}},"arguments":[{"value":"report"}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"value":"Format template 'report' not found in "},"right":{"name":{"identifier":"formatName"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}},{"expression":{"name":{"identifier":"ok"}}}]}
/tool/errormanager.java	rawError	{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/tool/errormanager.java	rawError	{"statements":[{"expression":{"name":{"identifier":"rawError"},"arguments":[{"name":{"identifier":"msg"}}]}},{"expression":{"name":{"identifier":"printStackTrace"},"scope":{"name":{"identifier":"e"}},"arguments":[{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}}]}}]}
/tool/errormanager.java	panic	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ToolMessage"}},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"args"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"ToolMessage"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMessageTemplate"},"arguments":[{"name":{"identifier":"msg"}}]},"name":{"identifier":"msgST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"msgST"}}},"name":{"identifier":"outputMsg"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"formatWantsSingleLineMessage"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputMsg"}},"value":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"outputMsg"}},"arguments":[{"value":"\n"},{"value":" "}]}}}]}},{"expression":{"name":{"identifier":"panic"},"arguments":[{"name":{"identifier":"outputMsg"}}]}}]}
/tool/errormanager.java	panic	{"statements":[{"expression":{"name":{"identifier":"rawError"},"arguments":[{"name":{"identifier":"msg"}}]}},{"expression":{"name":{"identifier":"panic"}}}]}
/tool/errormanager.java	panic	{"statements":[{"expression":{"type":{"name":{"identifier":"Error"}},"arguments":[{"value":"ANTLR ErrorManager panic"}]}}]}
/tool/labelelementpair.java	toString	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"}}},"right":{"value":" "}},"right":{"name":{"identifier":"type"}}},"right":{"value":" "}},"right":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"element"}}}}}]}
/unicode/unicodedatatemplatecontroller.java	addIntervalForCategory	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"categoryMap"}},"arguments":[{"name":{"identifier":"categoryName"}}]},"name":{"identifier":"intervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"intervalSet"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"intervalSet"}},"value":{"type":{"name":{"identifier":"IntervalSet"}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"categoryMap"}},"arguments":[{"name":{"identifier":"categoryName"}},{"name":{"identifier":"intervalSet"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"intervalSet"}},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"finish"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addPropertyAliases	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LONG"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}},"name":{"identifier":"nameChoice"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"name":{"identifier":"alias"},"type":{"name":{"identifier":"String"}}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alias"}},"value":{"name":{"identifier":"getPropertyName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"nameChoice"}}]}}}]},"catchClauses":[{"body":{"statements":[{}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"IllegalArgumentException"}}}}]},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alias"}},"right":{}}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"name":{"identifier":"alias"}},{"name":{"identifier":"propertyName"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"nameChoice"}}}}]},"condition":{"value":"true"}}]}
/unicode/unicodedatatemplatecontroller.java	addPropertyAlias	{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyAliases"}},"arguments":[{"name":{"identifier":"alias"}},{"name":{"identifier":"propertyName"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	getProperties	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"}}},"name":{"identifier":"propertyCodePointRanges"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"IntervalSet"}}]}}]}},{"expression":{"name":{"identifier":"addUnicodeCategoryCodesToCodePointRanges"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}}]}},{"expression":{"name":{"identifier":"addUnicodeBinaryPropertyCodesToCodePointRanges"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}}]}},{"expression":{"name":{"identifier":"addUnicodeIntPropertyCodesToCodePointRanges"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}}]}},{"expression":{"name":{"identifier":"addTR35ExtendedPictographicPropertyCodesToCodePointRanges"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}}]}},{"expression":{"name":{"identifier":"addEmojiPresentationPropertyCodesToCodePointRanges"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"}}},"name":{"identifier":"propertyAliases"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"addUnicodeCategoryCodesToNames"},"arguments":[{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"name":{"identifier":"addUnicodeBinaryPropertyCodesToNames"},"arguments":[{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"name":{"identifier":"addUnicodeScriptCodesToNames"},"arguments":[{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"name":{"identifier":"addUnicodeBlocksToNames"},"arguments":[{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"name":{"identifier":"addUnicodeIntPropertyCodesToNames"},"arguments":[{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyAliases"}},"arguments":[{"value":"EP"},{"value":"Extended_Pictographic"}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"}}},"name":{"identifier":"properties"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Object"}}]}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"properties"}},"arguments":[{"value":"propertyCodePointRanges"},{"name":{"identifier":"propertyCodePointRanges"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"properties"}},"arguments":[{"value":"propertyAliases"},{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"name":{"identifier":"properties"}}}]}
/unicode/unicodedatatemplatecontroller.java	getShortPropertyName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPropertyName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}}]},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"propertyName"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"propertyName"}},"value":{"name":{"identifier":"getPropertyName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"LONG"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}}]}}}]}},{"expression":{"name":{"identifier":"propertyName"}}}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeCategoryCodesToCodePointRanges	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTypeIterator"},"scope":{"name":{"identifier":"UCharacter"}}},"name":{"identifier":"iter"},"type":{"name":{"identifier":"RangeValueIterator"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Element"},"scope":{"name":{"identifier":"RangeValueIterator"}}}},"name":{"identifier":"element"},"type":{"name":{"identifier":"Element"},"scope":{"name":{"identifier":"RangeValueIterator"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPropertyValueName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"GENERAL_CATEGORY_MASK"},"scope":{"name":{"identifier":"UProperty"}}},{"operator":"LEFT_SHIFT","left":{"value":"1"},"right":{"name":{"identifier":"value"},"scope":{"name":{"identifier":"element"}}}},{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}}]},"name":{"identifier":"categoryName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"addIntervalForCategory"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}},{"name":{"identifier":"categoryName"}},{"name":{"identifier":"start"},"scope":{"name":{"identifier":"element"}}},{"operator":"MINUS","left":{"name":{"identifier":"limit"},"scope":{"name":{"identifier":"element"}}},"right":{"value":"1"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"categoryName"}},"arguments":[{"value":"0"},{"value":"1"}]},"name":{"identifier":"shortCategoryName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"addIntervalForCategory"},"arguments":[{"name":{"identifier":"propertyCodePointRanges"}},{"name":{"identifier":"shortCategoryName"}},{"name":{"identifier":"start"},"scope":{"name":{"identifier":"element"}}},{"operator":"MINUS","left":{"name":{"identifier":"limit"},"scope":{"name":{"identifier":"element"}}},"right":{"value":"1"}}]}}]},"condition":{"name":{"identifier":"next"},"scope":{"name":{"identifier":"iter"}},"arguments":[{"name":{"identifier":"element"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeCategoryCodesToNames	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTypeIterator"},"scope":{"name":{"identifier":"UCharacter"}}},"name":{"identifier":"iter"},"type":{"name":{"identifier":"RangeValueIterator"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Element"},"scope":{"name":{"identifier":"RangeValueIterator"}}}},"name":{"identifier":"element"},"type":{"name":{"identifier":"Element"},"scope":{"name":{"identifier":"RangeValueIterator"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"LEFT_SHIFT","left":{"value":"1"},"right":{"name":{"identifier":"value"},"scope":{"name":{"identifier":"element"}}}},"name":{"identifier":"generalCategoryMask"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPropertyValueName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"GENERAL_CATEGORY_MASK"},"scope":{"name":{"identifier":"UProperty"}}},{"name":{"identifier":"generalCategoryMask"}},{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}}]},"name":{"identifier":"categoryName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"LONG"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}},"name":{"identifier":"nameChoice"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"name":{"identifier":"alias"},"type":{"name":{"identifier":"String"}}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alias"}},"value":{"name":{"identifier":"getPropertyValueName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"GENERAL_CATEGORY_MASK"},"scope":{"name":{"identifier":"UProperty"}}},{"name":{"identifier":"generalCategoryMask"}},{"name":{"identifier":"nameChoice"}}]}}}]},"catchClauses":[{"body":{"statements":[{}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"IllegalArgumentException"}}}}]},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alias"}},"right":{}}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"name":{"identifier":"alias"}},{"name":{"identifier":"categoryName"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"nameChoice"}}}}]},"condition":{"value":"true"}}]},"condition":{"name":{"identifier":"next"},"scope":{"name":{"identifier":"iter"}},"arguments":[{"name":{"identifier":"element"}}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Control"},{"value":"C"}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Letter"},{"value":"L"}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Number"},{"value":"N"}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Mark"},{"value":"M"}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Punctuation"},{"value":"P"}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Symbol"},{"value":"S"}]}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"value":"Space"},{"value":"Z"}]}}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeBinaryPropertyCodesToCodePointRanges	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getShortPropertyName"},"arguments":[{"name":{"identifier":"property"}}]},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"intervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}}},"name":{"identifier":"unicodeSet"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"name":{"identifier":"applyIntPropertyValue"},"scope":{"name":{"identifier":"unicodeSet"}},"arguments":[{"name":{"identifier":"property"}},{"value":"1"}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"intervalSet"}},"arguments":[{"name":{"identifier":"codepoint"},"scope":{"name":{"identifier":"range"}}},{"name":{"identifier":"codepointEnd"},"scope":{"name":{"identifier":"range"}}}]}}]},"iterable":{"name":{"identifier":"ranges"},"scope":{"name":{"identifier":"unicodeSet"}}},"variable":{"variables":[{"name":{"identifier":"range"},"type":{"name":{"identifier":"EntryRange"},"scope":{"name":{"identifier":"UnicodeSet"}}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"name":{"identifier":"propertyName"}},{"name":{"identifier":"intervalSet"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"property"}},"right":{"name":{"identifier":"BINARY_LIMIT"},"scope":{"name":{"identifier":"UProperty"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"BINARY_START"},"scope":{"name":{"identifier":"UProperty"}}},"name":{"identifier":"property"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"property"}}}]}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeBinaryPropertyCodesToNames	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getShortPropertyName"},"arguments":[{"name":{"identifier":"property"}}]},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"addPropertyAliases"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"name":{"identifier":"propertyName"}},{"name":{"identifier":"property"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"property"}},"right":{"name":{"identifier":"BINARY_LIMIT"},"scope":{"name":{"identifier":"UProperty"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"BINARY_START"},"scope":{"name":{"identifier":"UProperty"}}},"name":{"identifier":"property"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"property"}}}]}]}
/unicode/unicodedatatemplatecontroller.java	addIntPropertyRanges	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"name":{"identifier":"applyIntPropertyValue"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"propertyValue"}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"namePrefix"}},"right":{"name":{"identifier":"getPropertyValueName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"propertyValue"}},{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}}]}},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"name":{"identifier":"propertyName"}}]},"name":{"identifier":"intervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"intervalSet"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"intervalSet"}},"value":{"type":{"name":{"identifier":"IntervalSet"}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"name":{"identifier":"propertyName"}},{"name":{"identifier":"intervalSet"}}]}}]}},{"expression":{"name":{"identifier":"addUnicodeSetToIntervalSet"},"arguments":[{"name":{"identifier":"set"}},{"name":{"identifier":"intervalSet"}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"propertyValue"}},"right":{"name":{"identifier":"getIntPropertyMaxValue"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}}]}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"getIntPropertyMinValue"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}}]},"name":{"identifier":"propertyValue"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"propertyValue"}}}]}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeSetToIntervalSet	{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"intervalSet"}},"arguments":[{"name":{"identifier":"codepoint"},"scope":{"name":{"identifier":"range"}}},{"name":{"identifier":"codepointEnd"},"scope":{"name":{"identifier":"range"}}}]}}]},"iterable":{"name":{"identifier":"ranges"},"scope":{"name":{"identifier":"unicodeSet"}}},"variable":{"variables":[{"name":{"identifier":"range"},"type":{"name":{"identifier":"EntryRange"},"scope":{"name":{"identifier":"UnicodeSet"}}}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeIntPropertyCodesToCodePointRanges	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getShortPropertyName"},"arguments":[{"name":{"identifier":"property"}}]},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"addIntPropertyRanges"},"arguments":[{"name":{"identifier":"property"}},{"operator":"PLUS","left":{"name":{"identifier":"propertyName"}},"right":{"value":"="}},{"name":{"identifier":"propertyCodePointRanges"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"property"}},"right":{"name":{"identifier":"INT_LIMIT"},"scope":{"name":{"identifier":"UProperty"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"INT_START"},"scope":{"name":{"identifier":"UProperty"}}},"name":{"identifier":"property"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"property"}}}]}]}
/unicode/unicodedatatemplatecontroller.java	addTR35ExtendedPictographicPropertyCodesToCodePointRanges	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F774"},{"value":"0x1F77F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2700"},{"value":"0x2701"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2703"},{"value":"0x2704"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x270E"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2710"},{"value":"0x2711"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2765"},{"value":"0x2767"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F030"},{"value":"0x1F093"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F094"},{"value":"0x1F09F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F10D"},{"value":"0x1F10F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F12F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F16C"},{"value":"0x1F16F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F1AD"},{"value":"0x1F1E5"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F260"},{"value":"0x1F265"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F203"},{"value":"0x1F20F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F23C"},{"value":"0x1F23F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F249"},{"value":"0x1F24F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F252"},{"value":"0x1F25F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F266"},{"value":"0x1F2FF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F7D5"},{"value":"0x1F7FF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F000"},{"value":"0x1F003"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F005"},{"value":"0x1F02B"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F02C"},{"value":"0x1F02F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F322"},{"value":"0x1F323"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F394"},{"value":"0x1F395"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F398"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F39C"},{"value":"0x1F39D"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F3F1"},{"value":"0x1F3F2"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F3F6"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F4FE"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F53E"},{"value":"0x1F548"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F54F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F568"},{"value":"0x1F56E"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F571"},{"value":"0x1F572"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F57B"},{"value":"0x1F586"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F588"},{"value":"0x1F589"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F58E"},{"value":"0x1F58F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F591"},{"value":"0x1F594"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F597"},{"value":"0x1F5A3"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5A6"},{"value":"0x1F5A7"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5A9"},{"value":"0x1F5B0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5B3"},{"value":"0x1F5BB"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5BD"},{"value":"0x1F5C1"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5C5"},{"value":"0x1F5D0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5D4"},{"value":"0x1F5DB"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5DF"},{"value":"0x1F5E0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5E2"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5E4"},{"value":"0x1F5E7"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5E9"},{"value":"0x1F5EE"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5F0"},{"value":"0x1F5F2"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F5F4"},{"value":"0x1F5F9"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2605"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2607"},{"value":"0x260D"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x260F"},{"value":"0x2610"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2612"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2616"},{"value":"0x2617"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2619"},{"value":"0x261C"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x261E"},{"value":"0x261F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2621"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2624"},{"value":"0x2625"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2627"},{"value":"0x2629"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x262B"},{"value":"0x262D"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2630"},{"value":"0x2637"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x263B"},{"value":"0x2647"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2654"},{"value":"0x265F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2661"},{"value":"0x2662"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2664"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2667"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2669"},{"value":"0x267A"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x267C"},{"value":"0x267E"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2680"},{"value":"0x2691"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2695"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2698"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x269A"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x269D"},{"value":"0x269F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26A2"},{"value":"0x26A9"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26AC"},{"value":"0x26AF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26B2"},{"value":"0x26BC"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26BF"},{"value":"0x26C3"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26C6"},{"value":"0x26C7"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26C9"},{"value":"0x26CD"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26D0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26D2"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26D5"},{"value":"0x26E8"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26EB"},{"value":"0x26EF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26F6"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26FB"},{"value":"0x26FC"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x26FE"},{"value":"0x26FF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x2388"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1FA00"},{"value":"0x1FFFD"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0A0"},{"value":"0x1F0AE"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0B1"},{"value":"0x1F0BF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0C1"},{"value":"0x1F0CF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0D1"},{"value":"0x1F0F5"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0AF"},{"value":"0x1F0B0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0C0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0D0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F0F6"},{"value":"0x1F0FF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F80C"},{"value":"0x1F80F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F848"},{"value":"0x1F84F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F85A"},{"value":"0x1F85F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F888"},{"value":"0x1F88F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F8AE"},{"value":"0x1F8FF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F900"},{"value":"0x1F90B"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F91F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F928"},{"value":"0x1F92F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F931"},{"value":"0x1F932"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F94C"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F95F"},{"value":"0x1F96B"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F992"},{"value":"0x1F997"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F9D0"},{"value":"0x1F9E6"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F90C"},{"value":"0x1F90F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F93F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F94D"},{"value":"0x1F94F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F96C"},{"value":"0x1F97F"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F998"},{"value":"0x1F9BF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F9C1"},{"value":"0x1F9CF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F9E7"},{"value":"0x1F9FF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6C6"},{"value":"0x1F6CA"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6D3"},{"value":"0x1F6D4"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6E6"},{"value":"0x1F6E8"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6EA"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6F1"},{"value":"0x1F6F2"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6F7"},{"value":"0x1F6F8"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6D5"},{"value":"0x1F6DF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6ED"},{"value":"0x1F6EF"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"value":"0x1F6F9"},{"value":"0x1F6FF"}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"value":"Extended_Pictographic"},{"name":{"identifier":"set"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}},"arguments":[{"value":"[\\p{GCB=Regional_Indicator}\\*#0-9\\u00a9\\u00ae\\u2122\\u3030\\u303d]"}]},"name":{"identifier":"emojiRKUnicodeSet"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"emojiRKIntervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"addUnicodeSetToIntervalSet"},"arguments":[{"name":{"identifier":"emojiRKUnicodeSet"}},{"name":{"identifier":"emojiRKIntervalSet"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"value":"EmojiRK"},{"name":{"identifier":"emojiRKIntervalSet"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}},"arguments":[{"value":"[\\p{Emoji=Yes}]"}]},"name":{"identifier":"emojiNRKUnicodeSet"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"name":{"identifier":"removeAll"},"scope":{"name":{"identifier":"emojiNRKUnicodeSet"}},"arguments":[{"name":{"identifier":"emojiRKUnicodeSet"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"emojiNRKIntervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"addUnicodeSetToIntervalSet"},"arguments":[{"name":{"identifier":"emojiNRKUnicodeSet"}},{"name":{"identifier":"emojiNRKIntervalSet"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"value":"EmojiNRK"},{"name":{"identifier":"emojiNRKIntervalSet"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addEmojiPresentationPropertyCodesToCodePointRanges	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}},"arguments":[{"value":"[[\\p{Emoji=Yes}]&[\\p{Emoji_Presentation=Yes}]]"}]},"name":{"identifier":"emojiDefaultUnicodeSet"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"emojiDefaultIntervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"addUnicodeSetToIntervalSet"},"arguments":[{"name":{"identifier":"emojiDefaultUnicodeSet"}},{"name":{"identifier":"emojiDefaultIntervalSet"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"value":"EmojiPresentation=EmojiDefault"},{"name":{"identifier":"emojiDefaultIntervalSet"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}},"arguments":[{"value":"[[\\p{Emoji=Yes}]&[\\p{Emoji_Presentation=No}]]"}]},"name":{"identifier":"textDefaultUnicodeSet"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"textDefaultIntervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"addUnicodeSetToIntervalSet"},"arguments":[{"name":{"identifier":"textDefaultUnicodeSet"}},{"name":{"identifier":"textDefaultIntervalSet"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"value":"EmojiPresentation=TextDefault"},{"name":{"identifier":"textDefaultIntervalSet"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UnicodeSet"}},"arguments":[{"value":"[\\p{Emoji=No}]"}]},"name":{"identifier":"textUnicodeSet"},"type":{"name":{"identifier":"UnicodeSet"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"textIntervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"addUnicodeSetToIntervalSet"},"arguments":[{"name":{"identifier":"textUnicodeSet"}},{"name":{"identifier":"textIntervalSet"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"propertyCodePointRanges"}},"arguments":[{"value":"EmojiPresentation=Text"},{"name":{"identifier":"textIntervalSet"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addIntPropertyAliases	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getShortPropertyName"},"arguments":[{"name":{"identifier":"property"}}]},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"propertyName"}},"right":{"value":"="}},"right":{"name":{"identifier":"getPropertyValueName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"propertyValue"}},{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}}]}},"name":{"identifier":"aliasTarget"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}},"name":{"identifier":"nameChoice"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"name":{"identifier":"alias"},"type":{"name":{"identifier":"String"}}}]}},{"body":{"statements":[{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alias"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"namePrefix"}},"right":{"name":{"identifier":"getPropertyValueName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"propertyValue"}},{"name":{"identifier":"nameChoice"}}]}}}}]},"catchClauses":[{"body":{"statements":[{}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"IllegalArgumentException"}}}}]},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alias"}},"right":{}}},{"expression":{"name":{"identifier":"addPropertyAlias"},"arguments":[{"name":{"identifier":"propertyAliases"}},{"name":{"identifier":"alias"}},{"name":{"identifier":"aliasTarget"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"nameChoice"}}}}]},"condition":{"value":"true"}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"propertyValue"}},"right":{"name":{"identifier":"getIntPropertyMaxValue"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}}]}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"getIntPropertyMinValue"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}}]},"name":{"identifier":"propertyValue"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"propertyValue"}}}]}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeScriptCodesToNames	{"statements":[{"expression":{"name":{"identifier":"addIntPropertyAliases"},"arguments":[{"name":{"identifier":"SCRIPT"},"scope":{"name":{"identifier":"UProperty"}}},{"value":""},{"name":{"identifier":"propertyAliases"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeBlocksToNames	{"statements":[{"expression":{"name":{"identifier":"addIntPropertyAliases"},"arguments":[{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"UProperty"}}},{"value":"In"},{"name":{"identifier":"propertyAliases"}}]}}]}
/unicode/unicodedatatemplatecontroller.java	addUnicodeIntPropertyCodesToNames	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"SHORT"},"scope":{"name":{"identifier":"NameChoice"},"scope":{"name":{"identifier":"UProperty"}}}},"right":{"value":"1"}},"name":{"identifier":"nameChoice"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"name":{"identifier":"propertyNameAlias"},"type":{"name":{"identifier":"String"}}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"propertyNameAlias"}},"value":{"name":{"identifier":"getPropertyName"},"scope":{"name":{"identifier":"UCharacter"}},"arguments":[{"name":{"identifier":"property"}},{"name":{"identifier":"nameChoice"}}]}}}]},"catchClauses":[{"body":{"statements":[{}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"IllegalArgumentException"}}}}]},{"expression":{"name":{"identifier":"addIntPropertyAliases"},"arguments":[{"name":{"identifier":"property"}},{"operator":"PLUS","left":{"name":{"identifier":"propertyNameAlias"}},"right":{"value":"="}},{"name":{"identifier":"propertyAliases"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"nameChoice"}}}}]},"condition":{"value":"true"}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"property"}},"right":{"name":{"identifier":"INT_LIMIT"},"scope":{"name":{"identifier":"UProperty"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"INT_START"},"scope":{"name":{"identifier":"UProperty"}}},"name":{"identifier":"property"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"property"}}}]}]}
/semantics/symbolcollector.java	getErrorManager	{"statements":[{"expression":{"name":{"identifier":"errMgr"}}}]}
/semantics/symbolcollector.java	process	{"statements":[{"expression":{"name":{"identifier":"visitGrammar"},"arguments":[{"name":{"identifier":"ast"}}]}}]}
/semantics/symbolcollector.java	globalNamedAction	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"expression":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"ID"}}},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"action"}}},"value":{"name":{"identifier":"g"}}}}]}
/semantics/symbolcollector.java	defineToken	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"terminals"}},"arguments":[{"name":{"identifier":"ID"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"tokenIDRefs"}},"arguments":[{"name":{"identifier":"ID"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"tokensDefs"}},"arguments":[{"name":{"identifier":"ID"}}]}}]}
/semantics/symbolcollector.java	defineChannel	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"channelDefs"}},"arguments":[{"name":{"identifier":"ID"}}]}}]}
/semantics/symbolcollector.java	discoverRule	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentRule"}},"value":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}}}]}
/semantics/symbolcollector.java	discoverLexerRule	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentRule"}},"value":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}}}]}
/semantics/symbolcollector.java	discoverOuterAlt	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ast"},"scope":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}},"value":{"name":{"identifier":"alt"}}}}]}
/semantics/symbolcollector.java	actionInAlt	{"statements":[{"expression":{"name":{"identifier":"defineActionInAlt"},"scope":{"name":{"identifier":"currentRule"}},"arguments":[{"name":{"identifier":"currentOuterAltNumber"}},{"name":{"identifier":"action"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"action"}}},"value":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}}}]}
/semantics/symbolcollector.java	sempredInAlt	{"statements":[{"expression":{"name":{"identifier":"definePredicateInAlt"},"scope":{"name":{"identifier":"currentRule"}},"arguments":[{"name":{"identifier":"currentOuterAltNumber"}},{"name":{"identifier":"pred"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"pred"}}},"value":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}}}]}
/semantics/symbolcollector.java	ruleCatch	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"action"}}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"catchme"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"exceptions"},"scope":{"name":{"identifier":"currentRule"}}},"arguments":[{"name":{"identifier":"catchme"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"action"}}},"value":{"name":{"identifier":"currentRule"}}}}]}
/semantics/symbolcollector.java	finallyAction	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"finallyAction"},"scope":{"name":{"identifier":"currentRule"}}},"value":{"name":{"identifier":"action"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"action"}}},"value":{"name":{"identifier":"currentRule"}}}}]}
/semantics/symbolcollector.java	label	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LabelElementPair"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"ID"}},{"name":{"identifier":"element"}},{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"op"}}}]},"name":{"identifier":"lp"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"labelDefs"},"scope":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"lp"}}]}}]}
/semantics/symbolcollector.java	stringRef	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"terminals"}},"arguments":[{"name":{"identifier":"ref"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"strings"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"currentRule"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"tokenRefs"},"scope":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"ref"}}]}}]}}]}
/semantics/symbolcollector.java	tokenRef	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"terminals"}},"arguments":[{"name":{"identifier":"ref"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"tokenIDRefs"}},"arguments":[{"name":{"identifier":"ref"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"currentRule"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"tokenRefs"},"scope":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"ref"}}]}}]}}]}
/semantics/symbolcollector.java	ruleRef	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rulerefs"}},"arguments":[{"name":{"identifier":"ref"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"currentRule"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"ruleRefs"},"scope":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"ref"}}]}}]}}]}
/semantics/symbolcollector.java	grammarOption	{"statements":[{"expression":{"name":{"identifier":"setActionResolver"},"arguments":[{"name":{"identifier":"valueAST"}}]}}]}
/semantics/symbolcollector.java	ruleOption	{"statements":[{"expression":{"name":{"identifier":"setActionResolver"},"arguments":[{"name":{"identifier":"valueAST"}}]}}]}
/semantics/symbolcollector.java	blockOption	{"statements":[{"expression":{"name":{"identifier":"setActionResolver"},"arguments":[{"name":{"identifier":"valueAST"}}]}}]}
/semantics/symbolcollector.java	elementOption	{"statements":[{"expression":{"name":{"identifier":"setActionResolver"},"arguments":[{"name":{"identifier":"valueAST"}}]}}]}
/semantics/symbolcollector.java	setActionResolver	{"statements":[{"condition":{"expression":{"name":{"identifier":"valueAST"}},"type":{"name":{"identifier":"ActionAST"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"inner":{"expression":{"name":{"identifier":"valueAST"}},"type":{"name":{"identifier":"ActionAST"}}}}},"value":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"currentRule"}}}}}}]}}]}
/semantics/actionsniffer.java	examineAction	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"actionToken"}}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRStringStream"}}}]}},{"expression":{"name":{"identifier":"setLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"actionToken"}}}]}},{"expression":{"name":{"identifier":"setCharPositionInLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"actionToken"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionSplitter"}},"arguments":[{"name":{"identifier":"in"}},{}]},"name":{"identifier":"splitter"},"type":{"name":{"identifier":"ActionSplitter"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"chunks"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"getActionTokens"},"scope":{"name":{"identifier":"splitter"}}}}}]}
/semantics/actionsniffer.java	processNested	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"actionToken"}}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRStringStream"}}}]}},{"expression":{"name":{"identifier":"setLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"actionToken"}}}]}},{"expression":{"name":{"identifier":"setCharPositionInLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"actionToken"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionSplitter"}},"arguments":[{"name":{"identifier":"in"}},{}]},"name":{"identifier":"splitter"},"type":{"name":{"identifier":"ActionSplitter"}}}]}},{"expression":{"name":{"identifier":"getActionTokens"},"scope":{"name":{"identifier":"splitter"}}}}]}
/semantics/actionsniffer.java	attr	{"statements":[{"expression":{"name":{"identifier":"trackRef"},"arguments":[{"name":{"identifier":"x"}}]}}]}
/semantics/actionsniffer.java	qualifiedAttr	{"statements":[{"expression":{"name":{"identifier":"trackRef"},"arguments":[{"name":{"identifier":"x"}}]}}]}
/semantics/actionsniffer.java	setAttr	{"statements":[{"expression":{"name":{"identifier":"trackRef"},"arguments":[{"name":{"identifier":"x"}}]}},{"expression":{"name":{"identifier":"processNested"},"arguments":[{"name":{"identifier":"rhs"}}]}}]}
/semantics/actionsniffer.java	setNonLocalAttr	{"statements":[{"expression":{"name":{"identifier":"processNested"},"arguments":[{"name":{"identifier":"rhs"}}]}}]}
/semantics/actionsniffer.java	trackRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenRefs"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"xRefs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"TerminalAST"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"xRefs"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"tokenRefsInActions"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleRefs"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"rRefs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rRefs"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"ruleRefsInActions"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]}}]}}]}
/semantics/usedefanalyzer.java	trackTokenRuleRefsInActions	{"statements":[{"body":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}},"name":{"identifier":"alt"},"type":{"name":{"identifier":"Alternative"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionSniffer"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{"name":{"identifier":"alt"}},{"name":{"identifier":"a"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"a"}}}]},"name":{"identifier":"sniffer"},"type":{"name":{"identifier":"ActionSniffer"}}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"name":{"identifier":"sniffer"}}}}]},"iterable":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"alt"}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"},"scope":{"name":{"identifier":"r"}}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/semantics/usedefanalyzer.java	actionIsContextDependent	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"actionAST"}}}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRStringStream"}}}]}},{"expression":{"name":{"identifier":"setLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"actionAST"}}}}]}},{"expression":{"name":{"identifier":"setCharPositionInLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"actionAST"}}}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"type":"BOOLEAN"},"initializer":{"values":[{"value":"false"}]},"levels":[{}]},"name":{"identifier":"dependent"},"type":{"origin":"TYPE","componentType":{"type":"BOOLEAN"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BlankActionSplitterListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]},"type":{},"name":{"identifier":"nonLocalAttr"},"parameters":[{"isVarArgs":"false","name":{"identifier":"expr"},"type":{"name":{"identifier":"String"}}},{"isVarArgs":"false","name":{"identifier":"x"},"type":{"name":{"identifier":"Token"}}},{"isVarArgs":"false","name":{"identifier":"y"},"type":{"name":{"identifier":"Token"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]},"type":{},"name":{"identifier":"qualifiedAttr"},"parameters":[{"isVarArgs":"false","name":{"identifier":"expr"},"type":{"name":{"identifier":"String"}}},{"isVarArgs":"false","name":{"identifier":"x"},"type":{"name":{"identifier":"Token"}}},{"isVarArgs":"false","name":{"identifier":"y"},"type":{"name":{"identifier":"Token"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]},"type":{},"name":{"identifier":"setAttr"},"parameters":[{"isVarArgs":"false","name":{"identifier":"expr"},"type":{"name":{"identifier":"String"}}},{"isVarArgs":"false","name":{"identifier":"x"},"type":{"name":{"identifier":"Token"}}},{"isVarArgs":"false","name":{"identifier":"rhs"},"type":{"name":{"identifier":"Token"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]},"type":{},"name":{"identifier":"setExprAttribute"},"parameters":[{"isVarArgs":"false","name":{"identifier":"expr"},"type":{"name":{"identifier":"String"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]},"type":{},"name":{"identifier":"setNonLocalAttr"},"parameters":[{"isVarArgs":"false","name":{"identifier":"expr"},"type":{"name":{"identifier":"String"}}},{"isVarArgs":"false","name":{"identifier":"x"},"type":{"name":{"identifier":"Token"}}},{"isVarArgs":"false","name":{"identifier":"y"},"type":{"name":{"identifier":"Token"}}},{"isVarArgs":"false","name":{"identifier":"rhs"},"type":{"name":{"identifier":"Token"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]},"type":{},"name":{"identifier":"attr"},"parameters":[{"isVarArgs":"false","name":{"identifier":"expr"},"type":{"name":{"identifier":"String"}}},{"isVarArgs":"false","name":{"identifier":"x"},"type":{"name":{"identifier":"Token"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]},"name":{"identifier":"listener"},"type":{"name":{"identifier":"ActionSplitterListener"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionSplitter"}},"arguments":[{"name":{"identifier":"in"}},{"name":{"identifier":"listener"}}]},"name":{"identifier":"splitter"},"type":{"name":{"identifier":"ActionSplitter"}}}]}},{"expression":{"name":{"identifier":"getActionTokens"},"scope":{"name":{"identifier":"splitter"}}}},{"expression":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}}}]}
/semantics/usedefanalyzer.java	nonLocalAttr	{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]}
/semantics/usedefanalyzer.java	qualifiedAttr	{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]}
/semantics/usedefanalyzer.java	setAttr	{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]}
/semantics/usedefanalyzer.java	setExprAttribute	{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]}
/semantics/usedefanalyzer.java	setNonLocalAttr	{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]}
/semantics/usedefanalyzer.java	attr	{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"value":"0"},"name":{"name":{"identifier":"dependent"}}},"value":{"value":"true"}}}]}
/semantics/usedefanalyzer.java	getRuleDependencies	{"statements":[{"expression":{"name":{"identifier":"getRuleDependencies"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}]}}]}
/semantics/usedefanalyzer.java	getRuleDependencies	{"statements":[{"expression":{"name":{"identifier":"getRuleDependencies"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"modes"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"modeName"}}]}]}}]}
/semantics/usedefanalyzer.java	getRuleDependencies	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Rule"}}]}]}},"name":{"identifier":"dependencies"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Rule"}}]}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"TOKEN_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"name":{"identifier":"tokenRefs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"dependencies"}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"calls"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"calls"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"calls"}},"value":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"dependencies"}},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"calls"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"calls"}},"arguments":[{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tref"}}}]}]}}]},"iterable":{"name":{"identifier":"tokenRefs"}},"variable":{"variables":[{"name":{"identifier":"tref"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"dependencies"}}}]}
/semantics/rulecollector.java	getErrorManager	{"statements":[{"expression":{"name":{"identifier":"errMgr"}}}]}
/semantics/rulecollector.java	process	{"statements":[{"expression":{"name":{"identifier":"visitGrammar"},"arguments":[{"name":{"identifier":"ast"}}]}}]}
/semantics/rulecollector.java	discoverRule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"block"}}},"name":{"identifier":"numAlts"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"name":{"identifier":"hasImmediateRecursiveRuleRefs"},"scope":{"name":{"identifier":"LeftRecursiveRuleAnalyzer"}},"arguments":[{"name":{"identifier":"rule"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"r"}},"value":{"type":{"name":{"identifier":"Rule"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"rule"}},{"name":{"identifier":"numAlts"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"r"}},"value":{"type":{"name":{"identifier":"LeftRecursiveRule"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"rule"}}]}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"r"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"parseTypedArgList"},"scope":{"name":{"identifier":"ScopeParser"}},"arguments":[{"name":{"identifier":"arg"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}},{"name":{"identifier":"g"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"ARG"},"scope":{"name":{"identifier":"DictType"},"scope":{"name":{"identifier":"AttributeDict"}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"arg"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"arg"}}},"value":{"index":{"name":{"identifier":"currentOuterAltNumber"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"returns"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"parseTypedArgList"},"scope":{"name":{"identifier":"ScopeParser"}},"arguments":[{"name":{"identifier":"returns"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"returns"}}},{"name":{"identifier":"g"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"RET"},"scope":{"name":{"identifier":"DictType"},"scope":{"name":{"identifier":"AttributeDict"}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"returns"}}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"locals"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"parseTypedArgList"},"scope":{"name":{"identifier":"ScopeParser"}},"arguments":[{"name":{"identifier":"locals"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"locals"}}},{"name":{"identifier":"g"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"LOCAL"},"scope":{"name":{"identifier":"DictType"},"scope":{"name":{"identifier":"AttributeDict"}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"locals"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"a"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"ActionAST"}}},"name":{"identifier":"action"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"a"}},"arguments":[{"value":"0"}]}},{"name":{"identifier":"action"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"action"}}},"value":{"name":{"identifier":"r"}}}}]},"iterable":{"name":{"identifier":"actions"}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/semantics/rulecollector.java	discoverOuterAlt	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"alt"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"ruleToAltLabels"}},"arguments":[{"name":{"identifier":"currentRuleName"}},{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"alt"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"alt"}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"altLabelToRuleName"}},"arguments":[{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"altLabel"}}]},{"name":{"identifier":"currentRuleName"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"altLabelToRuleName"}},"arguments":[{"name":{"identifier":"decapitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"altLabel"}}]},{"name":{"identifier":"currentRuleName"}}]}}]}}]}
/semantics/rulecollector.java	discoverLexerRule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"block"}}},"name":{"identifier":"numAlts"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Rule"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"rule"}},{"name":{"identifier":"numAlts"}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"currentModeName"}}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"modifiers"}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"modifiers"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"modifiers"}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"r"}}]}}]}
/semantics/basicsemanticchecks.java	getErrorManager	{"statements":[{"expression":{"name":{"identifier":"errMgr"}}}]}
/semantics/basicsemanticchecks.java	process	{"statements":[{"expression":{"name":{"identifier":"visitGrammar"},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}]}}]}
/semantics/basicsemanticchecks.java	discoverGrammar	{"statements":[{"expression":{"name":{"identifier":"checkGrammarName"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}]}}]}
/semantics/basicsemanticchecks.java	finishPrequels	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"firstPrequel"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"firstPrequel"}}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"parent"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"parent"}},"arguments":[{"name":{"identifier":"OPTIONS"}}]},"name":{"identifier":"options"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"parent"}},"arguments":[{"name":{"identifier":"IMPORT"}}]},"name":{"identifier":"imports"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"parent"}},"arguments":[{"name":{"identifier":"TOKENS_SPEC"}}]},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"name":{"identifier":"checkNumPrequels"},"arguments":[{"name":{"identifier":"options"}},{"name":{"identifier":"imports"}},{"name":{"identifier":"tokens"}}]}}]}
/semantics/basicsemanticchecks.java	importGrammar	{"statements":[{"expression":{"name":{"identifier":"checkImport"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}]}}]}
/semantics/basicsemanticchecks.java	discoverRules	{"statements":[{"expression":{"name":{"identifier":"checkNumRules"},"arguments":[{"name":{"identifier":"rules"}}]}}]}
/semantics/basicsemanticchecks.java	enterMode	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nonFragmentRuleCount"}},"value":{"value":"0"}}}]}
/semantics/basicsemanticchecks.java	exitMode	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"nonFragmentRuleCount"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"tree"}}},"name":{"identifier":"token"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"value":"?"},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"tree"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"value":"0"}]}}}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"name"}},"right":{}},"right":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"name"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"value":"?"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"token"}},"value":{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"MODE_WITHOUT_RULES"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"name"}},{"name":{"identifier":"g"}}]}}]}}]}
/semantics/basicsemanticchecks.java	modeDef	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"MODE_NOT_IN_LEXER"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}},{"name":{"identifier":"g"}}]}}]}}]}
/semantics/basicsemanticchecks.java	discoverRule	{"statements":[{"expression":{"name":{"identifier":"checkInvalidRuleDef"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}]}}]}
/semantics/basicsemanticchecks.java	discoverLexerRule	{"statements":[{"expression":{"name":{"identifier":"checkInvalidRuleDef"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"modifiers"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"FRAGMENT"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"inFragmentRule"}},"value":{"value":"true"}}}]}}]},"iterable":{"name":{"identifier":"modifiers"}},"variable":{"variables":[{"name":{"identifier":"tree"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"inFragmentRule"}}},"thenStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"nonFragmentRuleCount"}}}}]}}]}
/semantics/basicsemanticchecks.java	exitLexerRule	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"inFragmentRule"}},"value":{"value":"false"}}}]}
/semantics/basicsemanticchecks.java	ruleRef	{"statements":[{"expression":{"name":{"identifier":"checkInvalidRuleRef"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ref"}}}]}}]}
/semantics/basicsemanticchecks.java	ruleOption	{"statements":[{"expression":{"name":{"identifier":"checkOptions"},"arguments":[{"expression":{"name":{"identifier":"getAncestor"},"scope":{"name":{"identifier":"ID"}},"arguments":[{"name":{"identifier":"RULE"}}]},"type":{"name":{"identifier":"GrammarAST"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"valueAST"}}]}}]}
/semantics/basicsemanticchecks.java	blockOption	{"statements":[{"expression":{"name":{"identifier":"checkOptions"},"arguments":[{"expression":{"name":{"identifier":"getAncestor"},"scope":{"name":{"identifier":"ID"}},"arguments":[{"name":{"identifier":"BLOCK"}}]},"type":{"name":{"identifier":"GrammarAST"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"valueAST"}}]}}]}
/semantics/basicsemanticchecks.java	grammarOption	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"checkOptions"},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"valueAST"}}]},"name":{"identifier":"ok"},"type":{"type":"BOOLEAN"}}]}}]}
/semantics/basicsemanticchecks.java	defineToken	{"statements":[{"expression":{"name":{"identifier":"checkTokenDefinition"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}]}}]}
/semantics/basicsemanticchecks.java	enterChannelsSpec	{"statements":[{"condition":{"name":{"identifier":"isParser"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"condition":{"name":{"identifier":"isCombined"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHANNELS_BLOCK_IN_COMBINED_GRAMMAR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"tree"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHANNELS_BLOCK_IN_PARSER_GRAMMAR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"tree"}}}]}}]}}]}
/semantics/basicsemanticchecks.java	defineChannel	{"statements":[{"expression":{"name":{"identifier":"checkChannelDefinition"},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}]}}]}
/semantics/basicsemanticchecks.java	elementOption	{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"v"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"checkElementOptions"},"arguments":[{"name":{"identifier":"elem"}},{"name":{"identifier":"ID"}},{"name":{"identifier":"valueAST"}}]},"name":{"identifier":"ok"},"type":{"type":"BOOLEAN"}}]}}]}
/semantics/basicsemanticchecks.java	finishRule	{"statements":[{"condition":{"name":{"identifier":"isLexerRule"},"scope":{"name":{"identifier":"rule"}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"rule"}},"arguments":[{"name":{"identifier":"BLOCK"}}]},"type":{"name":{"identifier":"BlockAST"}}},"name":{"identifier":"blk"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"blk"}}},"name":{"identifier":"nalts"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"rule"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"idAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"blk"}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altAST"},"type":{"name":{"identifier":"AltAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altAST"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altAST"}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"ruleCollector"}}},"arguments":[{"name":{"identifier":"decapitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"altLabel"}}]}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ALT_LABEL_CONFLICTS_WITH_RULE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altAST"}}}},{"name":{"identifier":"altLabel"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altLabelToRuleName"},"scope":{"name":{"identifier":"ruleCollector"}}},"arguments":[{"name":{"identifier":"altLabel"}}]},"name":{"identifier":"prevRuleForLabel"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"prevRuleForLabel"}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"prevRuleForLabel"}},"arguments":[{"name":{"identifier":"getRuleName"},"scope":{"name":{"identifier":"rule"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ALT_LABEL_REDEF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altAST"}}}},{"name":{"identifier":"altLabel"}},{"name":{"identifier":"getRuleName"},"scope":{"name":{"identifier":"rule"}}},{"name":{"identifier":"prevRuleForLabel"}}]}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"nalts"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleToAltLabels"},"scope":{"name":{"identifier":"ruleCollector"}}},"arguments":[{"name":{"identifier":"getRuleName"},"scope":{"name":{"identifier":"rule"}}}]},"name":{"identifier":"altLabels"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"numAltLabels"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabels"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"numAltLabels"}},"value":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"altLabels"}}}}}},{"condition":{"operator":"AND","left":{"operator":"GREATER","left":{"name":{"identifier":"numAltLabels"}},"right":{"value":"0"}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"nalts"}},"right":{"name":{"identifier":"numAltLabels"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"RULE_WITH_TOO_FEW_ALT_LABELS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"idAST"}}},{"name":{"identifier":"getRuleName"},"scope":{"name":{"identifier":"rule"}}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkGrammarName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"nameToken"}}}},"name":{"identifier":"fullyQualifiedName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"fullyQualifiedName"}},"right":{}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fullyQualifiedName"}}]},"name":{"identifier":"f"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"f"}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"originalGrammar"},"scope":{"name":{"identifier":"g"}}},"right":{}},"thenStmt":{}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"stripFileExtension"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"fileName"}}]},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameToken"}}}]}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"name":{"identifier":"GRAMMAR_FROM_STRING_NAME"},"scope":{"name":{"identifier":"Grammar"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"FILE_AND_GRAMMAR_NAME_DIFFER"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"nameToken"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameToken"}}},{"name":{"identifier":"fileName"}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkNumRules	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"rulesNode"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"rulesNode"}}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"root"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"IDNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"NO_RULES"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"IDNode"}}},{"name":{"identifier":"g"}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkNumPrequels	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Token"}}]}},"name":{"identifier":"secondOptionTokens"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Token"}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"options"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"secondOptionTokens"}},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"options"}},"arguments":[{"value":"1"}]}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imports"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"imports"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"secondOptionTokens"}},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"imports"}},"arguments":[{"value":"1"}]}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tokens"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"tokens"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"secondOptionTokens"}},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokens"}},"arguments":[{"value":"1"}]}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"t"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"REPEATED_PREQUEL"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"t"}}]}}]},"iterable":{"name":{"identifier":"secondOptionTokens"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"Token"}}}]}}]}
/semantics/basicsemanticchecks.java	checkInvalidRuleDef	{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"ruleID"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileName"}},"value":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"ruleID"}}}}}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"isLowerCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ruleID"}}},"arguments":[{"value":"0"}]}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"PARSER_RULES_NOT_ALLOWED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"ruleID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ruleID"}}}]}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isParser"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"isTokenName"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ruleID"}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"LEXER_RULES_NOT_ALLOWED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"ruleID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ruleID"}}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkInvalidRuleRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"ruleID"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"isLowerCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ruleID"}}},"arguments":[{"value":"0"}]}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"PARSER_RULE_REF_IN_LEXER_RULE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"ruleID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ruleID"}}},{"name":{"identifier":"currentRuleName"}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkTokenDefinition	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"tokenID"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isTokenName"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tokenID"}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"TOKEN_NAMES_MUST_START_UPPER"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"tokenID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tokenID"}}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkChannelDefinition	{}
/semantics/basicsemanticchecks.java	enterLexerElement	{}
/semantics/basicsemanticchecks.java	enterLexerCommand	{"statements":[{"expression":{"name":{"identifier":"checkElementIsOuterMostInSingleAlt"},"arguments":[{"name":{"identifier":"tree"}}]}},{"condition":{"name":{"identifier":"inFragmentRule"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"tree"}}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"currentRuleName"}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"FRAGMENT_ACTION_IGNORED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"tree"}}},{"name":{"identifier":"ruleName"}}]}}]}}]}
/semantics/basicsemanticchecks.java	actionInAlt	{"statements":[{"condition":{"name":{"identifier":"inFragmentRule"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"action"}}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"currentRuleName"}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"FRAGMENT_ACTION_IGNORED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"action"}}},{"name":{"identifier":"ruleName"}}]}}]}}]}
/semantics/basicsemanticchecks.java	checkElementIsOuterMostInSingleAlt	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"tree"}}},"name":{"identifier":"alt"},"type":{"name":{"identifier":"CommonTree"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"alt"}}},"name":{"identifier":"blk"},"type":{"name":{"identifier":"CommonTree"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"blk"}}}},"right":{"name":{"identifier":"RULE"}}},"name":{"identifier":"outerMostAlt"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAncestor"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"name":{"identifier":"RULE"}}]},"name":{"identifier":"rule"},"type":{"name":{"identifier":"Tree"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"tree"}}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"OR","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"outerMostAlt"}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"blk"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LEXER_COMMAND_PLACEMENT_ISSUE"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"e"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"e"}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"tree"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"rule"}},"arguments":[{"value":"0"}]}}]}}]}}]}
/semantics/basicsemanticchecks.java	label	{"statements":[{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"element"}}},"entries":[{"label":{"name":{"identifier":"TOKEN_REF"}}},{"label":{"name":{"identifier":"STRING_LITERAL"}}},{"label":{"name":{"identifier":"RANGE"}}},{"label":{"name":{"identifier":"SET"}}},{"label":{"name":{"identifier":"NOT"}}},{"label":{"name":{"identifier":"RULE_REF"}}},{"label":{"name":{"identifier":"WILDCARD"}},"statements":[{}]},{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"LABEL_BLOCK_NOT_A_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},{}]}]}]}
/semantics/basicsemanticchecks.java	enterLabeledLexerElement	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"V3_LEXER_LABEL"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"label"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"}}}]}}]}
/semantics/basicsemanticchecks.java	enterTerminal	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tree"}}},"name":{"identifier":"text"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"text"}},"arguments":[{"value":"''"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EMPTY_STRINGS_AND_SETS_NOT_ALLOWED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"tree"}}},{"value":"''"}]}}]}}]}
/semantics/basicsemanticchecks.java	checkOptions	{"statements":[{"expression":{"variables":[{"initializer":{"value":"true"},"name":{"identifier":"ok"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"}}},"right":{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"}}},"right":{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"}}},"right":{"name":{"identifier":"GRAMMAR"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"legalGrammarOption"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}},"thenStmt":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}}]}},"thenStmt":{"statements":[{"condition":{"operator":"AND","left":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"LexerBlockOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ParserBlockOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ok"}},"value":{"value":"false"}}}]}}]}},{"expression":{"name":{"identifier":"ok"}}}]}
/semantics/basicsemanticchecks.java	checkElementOptions	{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"checkAssocElementOption"}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ID"}},"right":{}}},"right":{"name":{"identifier":"equals"},"scope":{"value":"assoc"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},"thenStmt":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"elem"}}},"right":{"name":{"identifier":"ALT"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},"name":{"identifier":"optionID"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"optionID"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"UNRECOGNIZED_ASSOC_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"currentRuleName"}}]}}]}}]}},{"condition":{"expression":{"name":{"identifier":"elem"}},"type":{"name":{"identifier":"RuleRefAST"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"checkRuleRefOptions"},"arguments":[{"expression":{"name":{"identifier":"elem"}},"type":{"name":{"identifier":"RuleRefAST"}}},{"name":{"identifier":"ID"}},{"name":{"identifier":"valueAST"}}]}}]}},{"condition":{"expression":{"name":{"identifier":"elem"}},"type":{"name":{"identifier":"TerminalAST"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"checkTokenOptions"},"arguments":[{"expression":{"name":{"identifier":"elem"}},"type":{"name":{"identifier":"TerminalAST"}}},{"name":{"identifier":"ID"}},{"name":{"identifier":"valueAST"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"elem"}}},"right":{"name":{"identifier":"ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"elem"}}},"right":{"name":{"identifier":"SEMPRED"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},"name":{"identifier":"optionID"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"optionID"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"valueAST"}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"semPredOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"value":"false"}}]}}]}},{"expression":{"value":"false"}}]}
/semantics/basicsemanticchecks.java	checkRuleRefOptions	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},"name":{"identifier":"optionID"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"optionID"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"valueAST"}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleRefOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"value":"false"}}]}},{"expression":{"value":"true"}}]}
/semantics/basicsemanticchecks.java	checkTokenOptions	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},"name":{"identifier":"optionID"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"optionID"}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"valueAST"}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"tokenOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"optionID"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"optionID"}}}]}},{"expression":{"value":"false"}}]}},{"expression":{"value":"true"}}]}
/semantics/basicsemanticchecks.java	legalGrammarOption	{"statements":[{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"g"}}},"entries":[{"label":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"lexerOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"key"}}]}}]},{"label":{"name":{"identifier":"PARSER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"parserOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"key"}}]}}]},{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"parserOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"key"}}]}}]}]}]}
/semantics/basicsemanticchecks.java	checkImport	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImportedGrammar"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"importID"}}}]},"name":{"identifier":"delegate"},"type":{"name":{"identifier":"Grammar"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"delegate"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"validImportTypes"}},"arguments":[{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"delegate"}}}]},"name":{"identifier":"validDelegators"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Integer"}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"validDelegators"}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"validDelegators"}},"arguments":[{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"g"}}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_IMPORT"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"importID"}},{"name":{"identifier":"g"}},{"name":{"identifier":"delegate"}}]}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isCombined"},"scope":{"name":{"identifier":"g"}}},"right":{"inner":{"operator":"OR","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"delegate"}}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"getGrammarTypeToFileNameSuffix"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"delegate"}}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"getGrammarTypeToFileNameSuffix"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"PARSER"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}}]}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"IMPORT_NAME_CLASH"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"importID"}},{"name":{"identifier":"g"}},{"name":{"identifier":"delegate"}}]}}]}}]}
/semantics/attributechecks.java	checkAllAttributeExpressions	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}},{},{},{"name":{"identifier":"act"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"act"}}}]},"name":{"identifier":"checker"},"type":{"name":{"identifier":"AttributeChecks"}}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"name":{"identifier":"checker"}}}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"act"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"body":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{},{"name":{"identifier":"a"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"a"}}}]},"name":{"identifier":"checker"},"type":{"name":{"identifier":"AttributeChecks"}}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"name":{"identifier":"checker"}}}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"r"}}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}},"name":{"identifier":"alt"},"type":{"name":{"identifier":"Alternative"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{"name":{"identifier":"alt"}},{"name":{"identifier":"a"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"a"}}}]},"name":{"identifier":"checker"},"type":{"name":{"identifier":"AttributeChecks"}}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"name":{"identifier":"checker"}}}}]},"iterable":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"alt"}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"},"scope":{"name":{"identifier":"r"}}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"e"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"ActionAST"}}},"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{},{"name":{"identifier":"a"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"a"}}}]},"name":{"identifier":"checker"},"type":{"name":{"identifier":"AttributeChecks"}}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"name":{"identifier":"checker"}}}}]},"iterable":{"name":{"identifier":"exceptions"},"scope":{"name":{"identifier":"r"}}},"variable":{"variables":[{"name":{"identifier":"e"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"finallyAction"},"scope":{"name":{"identifier":"r"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{},{"name":{"identifier":"finallyAction"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"finallyAction"},"scope":{"name":{"identifier":"r"}}}}]},"name":{"identifier":"checker"},"type":{"name":{"identifier":"AttributeChecks"}}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"name":{"identifier":"checker"}}}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/semantics/attributechecks.java	examineAction	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"actionToken"}}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRStringStream"}}}]}},{"expression":{"name":{"identifier":"setLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"actionToken"}}}]}},{"expression":{"name":{"identifier":"setCharPositionInLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"actionToken"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionSplitter"}},"arguments":[{"name":{"identifier":"in"}},{}]},"name":{"identifier":"splitter"},"type":{"name":{"identifier":"ActionSplitter"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"chunks"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"getActionTokens"},"scope":{"name":{"identifier":"splitter"}}}}}]}
/semantics/attributechecks.java	qualifiedAttr	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"ATTRIBUTE_IN_LEXER_ACTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},"right":{"value":"."}},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}}},{"name":{"identifier":"expr"}}]}},{}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"attr"},"arguments":[{"name":{"identifier":"expr"}},{"name":{"identifier":"x"}}]}},{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"node"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"isolatedRuleRef"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"rref"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rref"}},"right":{}},"elseStmt":{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"resolvesToAttributeDict"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNKNOWN_ATTRIBUTE_IN_SCOPE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"y"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"expr"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNKNOWN_SIMPLE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}}]}},"thenStmt":{"statements":[{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"rref"}}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"rref"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}}]},"right":{}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNKNOWN_RULE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"y"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rref"}}},{"name":{"identifier":"expr"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_RULE_PARAMETER_REF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"y"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rref"}}},{"name":{"identifier":"expr"}}]}}]}}]}}]}}]}
/semantics/attributechecks.java	setAttr	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"ATTRIBUTE_IN_LEXER_ACTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}},{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"UNKNOWN_SIMPLE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"errorType"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"condition":{"name":{"identifier":"resolvesToListLabel"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"errorType"}},"value":{"name":{"identifier":"ASSIGNMENT_TO_LIST_LABEL"},"scope":{"name":{"identifier":"ErrorType"}}}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}}]}},{"expression":{"name":{"identifier":"examineAction"},"scope":{"type":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{"name":{"identifier":"alt"}},{"name":{"identifier":"node"}},{"name":{"identifier":"rhs"}}]}}}]}
/semantics/attributechecks.java	attr	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"ATTRIBUTE_IN_LEXER_ACTION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}},{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"right":{}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"resolvesToToken"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"thenStmt":{"statements":[{}]}},{"condition":{"name":{"identifier":"resolvesToListLabel"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"isolatedRuleRef"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"ISOLATED_RULE_REF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}},{}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNKNOWN_SIMPLE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}}]}}]}
/semantics/attributechecks.java	nonLocalAttr	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"r"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNKNOWN_RULE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"y"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNDEFINED_RULE_IN_NONLOCAL_REF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"expr"}}]}}]}}]}
/semantics/attributechecks.java	setNonLocalAttr	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"r"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNKNOWN_RULE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"y"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"expr"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNDEFINED_RULE_IN_NONLOCAL_REF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"expr"}}]}}]}}]}
/semantics/attributechecks.java	text	{}
/semantics/attributechecks.java	templateInstance	{}
/semantics/attributechecks.java	indirectTemplateInstance	{}
/semantics/attributechecks.java	setExprAttribute	{}
/semantics/attributechecks.java	setSTAttribute	{}
/semantics/attributechecks.java	templateExpr	{}
/semantics/attributechecks.java	isolatedRuleRef	{"statements":[{"condition":{"expression":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"type":{"name":{"identifier":"Grammar"}}},"thenStmt":{"expression":{}}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"x"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]},"thenStmt":{"expression":{"name":{"identifier":"r"}}}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"labels"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}},{"condition":{"expression":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"type":{"name":{"identifier":"Rule"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"type":{"name":{"identifier":"Alternative"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"labels"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labelDefs"},"scope":{"inner":{"expression":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"type":{"name":{"identifier":"Alternative"}}}}},"arguments":[{"name":{"identifier":"x"}}]}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"labels"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getElementLabelDefs"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"x"}}]}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labels"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labels"}},"arguments":[{"value":"0"}]},"name":{"identifier":"anyLabelDef"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"anyLabelDef"}}},"right":{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"anyLabelDef"}}}}]}}]}}]}},{"condition":{"expression":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"type":{"name":{"identifier":"Alternative"}}},"thenStmt":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleRefs"},"scope":{"inner":{"expression":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"type":{"name":{"identifier":"Alternative"}}}}},"arguments":[{"name":{"identifier":"x"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"x"}}]}}]}}]}},{"expression":{}}]}
/semantics/semanticpipeline.java	process	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"RuleCollector"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"ruleCollector"},"type":{"name":{"identifier":"RuleCollector"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"ruleCollector"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"name":{"identifier":"prevErrors"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BasicSemanticChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"ruleCollector"}}]},"name":{"identifier":"basics"},"type":{"name":{"identifier":"BasicSemanticChecks"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"basics"}}}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"prevErrors"}}},"thenStmt":{}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"prevErrors"}},"value":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursiveRuleTransformer"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"ruleCollector"}}}},{"name":{"identifier":"g"}}]},"name":{"identifier":"lrtrans"},"type":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]}},{"expression":{"name":{"identifier":"translateLeftRecursiveRules"},"scope":{"name":{"identifier":"lrtrans"}}}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"prevErrors"}}},"thenStmt":{}},{"body":{"statements":[{"expression":{"name":{"identifier":"defineRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"r"}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"ruleCollector"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"SymbolCollector"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"collector"},"type":{"name":{"identifier":"SymbolCollector"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"collector"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"SymbolChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"collector"}}]},"name":{"identifier":"symcheck"},"type":{"name":{"identifier":"SymbolChecks"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"symcheck"}}}},{"body":{"statements":[{"expression":{"name":{"identifier":"defineAction"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"a"}}]}}]},"iterable":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"collector"}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"ast"},"scope":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}}}},"value":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}}}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"},"scope":{"name":{"identifier":"r"}}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"importTokensFromTokensFile"},"scope":{"name":{"identifier":"g"}}}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"assignTokenTypes"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"tokensDefs"},"scope":{"name":{"identifier":"collector"}}},{"name":{"identifier":"tokenIDRefs"},"scope":{"name":{"identifier":"collector"}}},{"name":{"identifier":"terminals"},"scope":{"name":{"identifier":"collector"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"assignLexerTokenTypes"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"tokensDefs"},"scope":{"name":{"identifier":"collector"}}}]}}]}},{"expression":{"name":{"identifier":"checkForModeConflicts"},"scope":{"name":{"identifier":"symcheck"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"checkForUnreachableTokens"},"scope":{"name":{"identifier":"symcheck"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"assignChannelTypes"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"channelDefs"},"scope":{"name":{"identifier":"collector"}}}]}},{"expression":{"name":{"identifier":"checkRuleArgs"},"scope":{"name":{"identifier":"symcheck"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"rulerefs"},"scope":{"name":{"identifier":"collector"}}}]}},{"expression":{"name":{"identifier":"identifyStartRules"},"arguments":[{"name":{"identifier":"collector"}}]}},{"expression":{"name":{"identifier":"checkForQualifiedRuleIssues"},"scope":{"name":{"identifier":"symcheck"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"qualifiedRulerefs"},"scope":{"name":{"identifier":"collector"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"0"}},"thenStmt":{}},{"expression":{"name":{"identifier":"checkAllAttributeExpressions"},"scope":{"name":{"identifier":"AttributeChecks"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"trackTokenRuleRefsInActions"},"scope":{"name":{"identifier":"UseDefAnalyzer"}},"arguments":[{"name":{"identifier":"g"}}]}}]}
/semantics/semanticpipeline.java	identifyStartRules	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleName"}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isStartRule"},"scope":{"name":{"identifier":"r"}}},"value":{"value":"false"}}}}]},"iterable":{"name":{"identifier":"rulerefs"},"scope":{"name":{"identifier":"collector"}}},"variable":{"variables":[{"name":{"identifier":"ref"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/semantics/semanticpipeline.java	assignLexerTokenTypes	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutermostGrammar"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"G"},"type":{"name":{"identifier":"Grammar"}}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"isTokenName"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"def"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineTokenName"},"scope":{"name":{"identifier":"G"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"def"}}}]}}]}}]},"iterable":{"name":{"identifier":"tokensDefs"}},"variable":{"variables":[{"name":{"identifier":"def"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isFragment"},"scope":{"name":{"identifier":"r"}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasTypeOrMoreCommand"},"arguments":[{"name":{"identifier":"r"}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineTokenName"},"scope":{"name":{"identifier":"G"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStringLiteralAliasesFromLexerRules"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"litAliases"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"conflictingLiterals"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"litAliases"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"nameAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"litAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"G"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"litAST"}}}]}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"conflictingLiterals"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"litAST"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineTokenAlias"},"scope":{"name":{"identifier":"G"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"litAST"}}}]}}]}}]},"iterable":{"name":{"identifier":"litAliases"}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"G"}}},"arguments":[{"name":{"identifier":"lit"}}]},"name":{"identifier":"value"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"value"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"value"}},"right":{"value":"0"}}},"right":{"operator":"LESS","left":{"name":{"identifier":"value"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"typeToStringLiteralList"},"scope":{"name":{"identifier":"G"}}}}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"lit"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"typeToStringLiteralList"},"scope":{"name":{"identifier":"G"}}},"arguments":[{"name":{"identifier":"value"}}]}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"typeToStringLiteralList"},"scope":{"name":{"identifier":"G"}}},"arguments":[{"name":{"identifier":"value"}},{}]}}]}}]},"iterable":{"name":{"identifier":"conflictingLiterals"}},"variable":{"variables":[{"name":{"identifier":"lit"},"type":{"name":{"identifier":"String"}}}]}}]}}]}
/semantics/semanticpipeline.java	hasTypeOrMoreCommand	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"name":{"identifier":"ast"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ast"}},"right":{}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstDescendantWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"LEXER_ALT_ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"altActionAst"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"altActionAst"}},"right":{}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"altActionAst"}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"node"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"node"}}},"right":{"name":{"identifier":"LEXER_ACTION_CALL"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"name":{"identifier":"equals"},"scope":{"value":"more"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"node"}}}]},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"type"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"node"}},"arguments":[{"value":"0"}]}}]},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"altActionAst"}}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"value":"false"}}]}
/semantics/semanticpipeline.java	assignTokenTypes	{"statements":[{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"alias"}}}]},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"TOKEN_NAME_REASSIGNMENT"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"alias"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"alias"}}}]}}]}},{"expression":{"name":{"identifier":"defineTokenName"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"alias"}}}]}}]},"iterable":{"name":{"identifier":"tokensDefs"}},"variable":{"variables":[{"name":{"identifier":"alias"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idAST"}}}]},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"IMPLICIT_TOKEN_DEFINITION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"idAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idAST"}}}]}}]}},{"expression":{"name":{"identifier":"defineTokenName"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idAST"}}}]}}]},"iterable":{"name":{"identifier":"tokenIDs"}},"variable":{"variables":[{"name":{"identifier":"idAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"termAST"}}},"right":{"name":{"identifier":"STRING_LITERAL"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"termAST"}}}]},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"IMPLICIT_STRING_DEFINITION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"termAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"termAST"}}}]}}]}}]},"iterable":{"name":{"identifier":"terminals"}},"variable":{"variables":[{"name":{"identifier":"termAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"semantics"},{"operator":"PLUS","left":{"value":"tokens="},"right":{"name":{"identifier":"tokenNameToTypeMap"},"scope":{"name":{"identifier":"g"}}}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"semantics"},{"operator":"PLUS","left":{"value":"strings="},"right":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"g"}}}}]}}]}
/semantics/semanticpipeline.java	assignChannelTypes	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutermostGrammar"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"outermost"},"type":{"name":{"identifier":"Grammar"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"channel"}}},"name":{"identifier":"channelName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"channelName"}}]},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHANNEL_CONFLICTS_WITH_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"channel"}}},{"name":{"identifier":"channelName"}}]}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"COMMON_CONSTANTS"},"scope":{"name":{"identifier":"LexerATNFactory"}}},"arguments":[{"name":{"identifier":"channelName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHANNEL_CONFLICTS_WITH_COMMON_CONSTANTS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"channel"}}},{"name":{"identifier":"channelName"}}]}}]}},{"condition":{"expression":{"name":{"identifier":"outermost"}},"type":{"name":{"identifier":"LexerGrammar"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"outermost"}},"type":{"name":{"identifier":"LexerGrammar"}}},"name":{"identifier":"lexerGrammar"},"type":{"name":{"identifier":"LexerGrammar"}}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"modes"},"scope":{"name":{"identifier":"lexerGrammar"}}},"arguments":[{"name":{"identifier":"channelName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHANNEL_CONFLICTS_WITH_MODE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"channel"}}},{"name":{"identifier":"channelName"}}]}}]}}]}},{"expression":{"name":{"identifier":"defineChannelName"},"scope":{"name":{"identifier":"outermost"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"channel"}}}]}}]},"iterable":{"name":{"identifier":"channelDefs"}},"variable":{"variables":[{"name":{"identifier":"channel"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/semantics/blankactionsplitterlistener.java	qualifiedAttr	{}
/semantics/blankactionsplitterlistener.java	setAttr	{}
/semantics/blankactionsplitterlistener.java	attr	{}
/semantics/blankactionsplitterlistener.java	templateInstance	{}
/semantics/blankactionsplitterlistener.java	nonLocalAttr	{}
/semantics/blankactionsplitterlistener.java	setNonLocalAttr	{}
/semantics/blankactionsplitterlistener.java	indirectTemplateInstance	{}
/semantics/blankactionsplitterlistener.java	setExprAttribute	{}
/semantics/blankactionsplitterlistener.java	setSTAttribute	{}
/semantics/blankactionsplitterlistener.java	templateExpr	{}
/semantics/blankactionsplitterlistener.java	text	{}
/semantics/symbolchecks.java	process	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}},"right":{}},"thenStmt":{"statements":[{"body":{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"nameToRuleMap"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"r"}}]}},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]}},{"expression":{"name":{"identifier":"checkReservedNames"},"arguments":[{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}]}},{"expression":{"name":{"identifier":"checkActionRedefinitions"},"arguments":[{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"collector"}}}]}},{"expression":{"name":{"identifier":"checkForLabelConflicts"},"arguments":[{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}]}}]}
/semantics/symbolchecks.java	checkActionRedefinitions	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"actions"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDefaultActionScope"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"scope"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"name":{"identifier":"nameNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nameNode"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ampersandAST"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"ampersandAST"}}},"right":{"value":"2"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scope"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameNode"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ampersandAST"}},"arguments":[{"value":"1"}]}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameNode"}}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"actionScopeToActionNames"}},"arguments":[{"name":{"identifier":"scope"}}]},"name":{"identifier":"scopeActions"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"scopeActions"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scopeActions"}},"value":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"actionScopeToActionNames"}},"arguments":[{"name":{"identifier":"scope"}},{"name":{"identifier":"scopeActions"}}]}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"scopeActions"}},"arguments":[{"name":{"identifier":"name"}}]}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"ACTION_REDEFINITION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"nameNode"}}},{"name":{"identifier":"name"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"scopeActions"}},"arguments":[{"name":{"identifier":"name"}}]}}]}}]},"iterable":{"name":{"identifier":"actions"}},"variable":{"variables":[{"name":{"identifier":"ampersandAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/semantics/symbolchecks.java	checkForLabelConflicts	{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"checkForAttributeConflicts"},"arguments":[{"name":{"identifier":"r"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"}}},"name":{"identifier":"labelNameSpace"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"LabelElementPair"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}},"name":{"identifier":"a"},"type":{"name":{"identifier":"Alternative"}}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"hasAltSpecificContexts"},"scope":{"name":{"identifier":"r"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"checkLabelPairs"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"labelNameSpace"}},{"name":{"identifier":"pairs"}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"}}},"name":{"identifier":"labelPairs"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"findAltLabelName"},"arguments":[{"name":{"identifier":"label"},"scope":{"name":{"identifier":"p"}}}]},"name":{"identifier":"labelName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labelName"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"name":{"identifier":"list"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"labelPairs"}},"arguments":[{"name":{"identifier":"labelName"}}]},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"list"}},"value":{"type":{"name":{"identifier":"ArrayList"}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"labelPairs"}},"arguments":[{"name":{"identifier":"labelName"}},{"name":{"identifier":"list"}}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"list"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labelPairs"}},"arguments":[{"name":{"identifier":"labelName"}}]}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"list"}},"arguments":[{"name":{"identifier":"p"}}]}}]}}]},"iterable":{"name":{"identifier":"pairs"}},"variable":{"variables":[{"name":{"identifier":"p"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"labelNameSpace"}}}},{"expression":{"name":{"identifier":"checkLabelPairs"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"labelNameSpace"}},{"name":{"identifier":"internalPairs"}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"labelPairs"}}},"variable":{"variables":[{"name":{"identifier":"internalPairs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"labelDefs"},"scope":{"name":{"identifier":"a"}}}},"variable":{"variables":[{"name":{"identifier":"pairs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"LabelElementPair"}}]}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"numberOfAlts"},"scope":{"name":{"identifier":"r"}}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/semantics/symbolchecks.java	checkLabelPairs	{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"checkForLabelConflict"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"label"},"scope":{"name":{"identifier":"p"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"p"}}}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"labelNameSpace"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"prev"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"prev"}},"right":{}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"checkForTypeMismatch"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"prev"}},{"name":{"identifier":"p"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"labelNameSpace"}},"arguments":[{"name":{"identifier":"name"}},{"name":{"identifier":"p"}}]}}]}}]},"iterable":{"name":{"identifier":"pairs"}},"variable":{"variables":[{"name":{"identifier":"p"},"type":{"name":{"identifier":"LabelElementPair"}}}]}}]}
/semantics/symbolchecks.java	findAltLabelName	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"label"}},"right":{}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"label"}},"type":{"name":{"identifier":"AltAST"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"findAltLabelName"},"arguments":[{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"label"}}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"label"}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altAST"},"type":{"name":{"identifier":"AltAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altAST"}}},"right":{}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"altAST"}}},"right":{}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"findAltLabelName"},"arguments":[{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"label"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"altAST"}}}}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altAST"}}}}}]}}]}},"thenStmt":{"statements":[{"expression":{}}]}}]}
/semantics/symbolchecks.java	checkForTypeMismatch	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"prevLabelPair"}}},"right":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"labelPair"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"elseExpr":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"labelPair"}}}},"thenExpr":{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}},"name":{"identifier":"token"},"type":{"name":{"identifier":"Token"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"LABEL_TYPE_CONFLICT"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"labelPair"}}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"labelPair"}}},"right":{"value":"!="}},"right":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"prevLabelPair"}}}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"prevLabelPair"}}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"labelPair"}}}}]}},"right":{"inner":{"operator":"OR","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"prevLabelPair"}}},"arguments":[{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"prevLabelPair"}}},"arguments":[{"name":{"identifier":"RULE_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]}}}},"right":{"inner":{"operator":"OR","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"labelPair"}}},"arguments":[{"name":{"identifier":"RULE_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"labelPair"}}},"arguments":[{"name":{"identifier":"RULE_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"elseExpr":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"labelPair"}}}},"thenExpr":{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}},"name":{"identifier":"token"},"type":{"name":{"identifier":"Token"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"prevLabelPair"}}},"arguments":[{"name":{"identifier":"RULE_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"elseExpr":{"value":"="},"thenExpr":{"value":"+="}},"name":{"identifier":"prevLabelOp"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"labelPair"}}},"arguments":[{"name":{"identifier":"RULE_LIST_LABEL"},"scope":{"name":{"identifier":"LabelType"}}}]},"elseExpr":{"value":"="},"thenExpr":{"value":"+="}},"name":{"identifier":"labelOp"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"LABEL_TYPE_CONFLICT"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"labelPair"}}}},"right":{"name":{"identifier":"labelOp"}}},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"labelPair"}}}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"prevLabelPair"}}}},"right":{"name":{"identifier":"prevLabelOp"}}},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"element"},"scope":{"name":{"identifier":"prevLabelPair"}}}}}]}}]}}]}
/semantics/symbolchecks.java	checkForLabelConflict	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"labelID"}}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"nameToRuleMap"}},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LABEL_CONFLICTS_WITH_RULE"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"etype"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"labelID"}}},{"name":{"identifier":"name"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"tokenIDs"}},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LABEL_CONFLICTS_WITH_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"etype"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"labelID"}}},{"name":{"identifier":"name"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"name"}}]},"right":{}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LABEL_CONFLICTS_WITH_ARG"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"etype"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"labelID"}}},{"name":{"identifier":"name"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"name"}}]},"right":{}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LABEL_CONFLICTS_WITH_RETVAL"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"etype"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"labelID"}}},{"name":{"identifier":"name"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"name"}}]},"right":{}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"LABEL_CONFLICTS_WITH_LOCAL"},"scope":{"name":{"identifier":"ErrorType"}}},"name":{"identifier":"etype"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"labelID"}}},{"name":{"identifier":"name"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}}]}
/semantics/symbolchecks.java	checkForAttributeConflicts	{"statements":[{"expression":{"name":{"identifier":"checkDeclarationRuleConflicts"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"nameToRuleMap"}}},{"name":{"identifier":"ARG_CONFLICTS_WITH_RULE"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkDeclarationRuleConflicts"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"tokenIDs"}},{"name":{"identifier":"ARG_CONFLICTS_WITH_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkDeclarationRuleConflicts"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"nameToRuleMap"}}},{"name":{"identifier":"RETVAL_CONFLICTS_WITH_RULE"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkDeclarationRuleConflicts"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"tokenIDs"}},{"name":{"identifier":"RETVAL_CONFLICTS_WITH_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkDeclarationRuleConflicts"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"nameToRuleMap"}}},{"name":{"identifier":"LOCAL_CONFLICTS_WITH_RULE"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkDeclarationRuleConflicts"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"tokenIDs"}},{"name":{"identifier":"LOCAL_CONFLICTS_WITH_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkLocalConflictingDeclarations"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"RETVAL_CONFLICTS_WITH_ARG"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkLocalConflictingDeclarations"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"LOCAL_CONFLICTS_WITH_ARG"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"checkLocalConflictingDeclarations"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"retvals"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"LOCAL_CONFLICTS_WITH_RETVAL"},"scope":{"name":{"identifier":"ErrorType"}}}]}}]}
/semantics/symbolchecks.java	checkDeclarationRuleConflicts	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"attributes"}},"right":{}},"thenStmt":{"statements":[{}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleNames"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"attribute"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"attribute"}}},"right":{}},"elseExpr":{"name":{"identifier":"token"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},"thenExpr":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"attribute"}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"attribute"}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"attributes"},"scope":{"name":{"identifier":"attributes"}}}},"variable":{"variables":[{"name":{"identifier":"attribute"},"type":{"name":{"identifier":"Attribute"}}}]}}]}
/semantics/symbolchecks.java	checkLocalConflictingDeclarations	{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"attributes"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"referenceAttributes"}},"right":{}}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"intersection"},"scope":{"name":{"identifier":"attributes"}},"arguments":[{"name":{"identifier":"referenceAttributes"}}]},"name":{"identifier":"conflictingKeys"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"attributes"}},"arguments":[{"name":{"identifier":"key"}}]}},"right":{}},"elseExpr":{"name":{"identifier":"token"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},"thenExpr":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"attributes"}},"arguments":[{"name":{"identifier":"key"}}]}}},{"name":{"identifier":"key"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]},"iterable":{"name":{"identifier":"conflictingKeys"}},"variable":{"variables":[{"name":{"identifier":"key"},"type":{"name":{"identifier":"String"}}}]}}]}
/semantics/symbolchecks.java	checkReservedNames	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"reservedNames"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"RESERVED_RULE_NAME"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule"}}}]}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/semantics/symbolchecks.java	checkForModeConflicts	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}},"name":{"identifier":"lexerGrammar"},"type":{"name":{"identifier":"LexerGrammar"}}}]}},{"body":{"statements":[{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"modeName"}},"arguments":[{"value":"DEFAULT_MODE"}]}},"right":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"reservedNames"}},"arguments":[{"name":{"identifier":"modeName"}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"next"},"scope":{"name":{"identifier":"iterator"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"modes"},"scope":{"name":{"identifier":"lexerGrammar"}}},"arguments":[{"name":{"identifier":"modeName"}}]}}},"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"MODE_CONFLICTS_WITH_COMMON_CONSTANTS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule"}}}}},{"name":{"identifier":"modeName"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"modeName"}}]},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"next"},"scope":{"name":{"identifier":"iterator"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"modes"},"scope":{"name":{"identifier":"lexerGrammar"}}},"arguments":[{"name":{"identifier":"modeName"}}]}}},"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"MODE_CONFLICTS_WITH_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule"}}}}},{"name":{"identifier":"modeName"}}]}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"modes"},"scope":{"name":{"identifier":"lexerGrammar"}}}},"variable":{"variables":[{"name":{"identifier":"modeName"},"type":{"name":{"identifier":"String"}}}]}}]}}]}
/semantics/symbolchecks.java	checkForUnreachableTokens	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}},"name":{"identifier":"lexerGrammar"},"type":{"name":{"identifier":"LexerGrammar"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"}}},"name":{"identifier":"stringLiteralRules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"}}},"name":{"identifier":"stringLiteralValues"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSingleTokenValues"},"arguments":[{"name":{"identifier":"rule"}}]},"name":{"identifier":"ruleStringAlts"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ruleStringAlts"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"ruleStringAlts"}}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stringLiteralRules"}},"arguments":[{"name":{"identifier":"rule"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stringLiteralValues"}},"arguments":[{"name":{"identifier":"ruleStringAlts"}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"rules"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralValues"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"firstTokenStringValues"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralRules"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"rule1"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"checkForOverlap"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"rule1"}},{"name":{"identifier":"rule1"}},{"name":{"identifier":"firstTokenStringValues"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralValues"}},"arguments":[{"name":{"identifier":"i"}}]}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isFragment"},"scope":{"name":{"identifier":"rule1"}}}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralRules"}},"arguments":[{"name":{"identifier":"j"}}]},"name":{"identifier":"rule2"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isFragment"},"scope":{"name":{"identifier":"rule2"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"checkForOverlap"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"rule1"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralRules"}},"arguments":[{"name":{"identifier":"j"}}]},{"name":{"identifier":"firstTokenStringValues"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralValues"}},"arguments":[{"name":{"identifier":"j"}}]}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"j"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"stringLiteralRules"}}}},"initialization":[{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}},"name":{"identifier":"j"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"j"}}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"stringLiteralRules"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"modes"},"scope":{"name":{"identifier":"lexerGrammar"}}}},"variable":{"variables":[{"name":{"identifier":"rules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}}]}}]}
/semantics/symbolchecks.java	getSingleTokenValues	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"}}},"name":{"identifier":"values"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alt"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"alt"}}}},"right":{"value":"2"}},"right":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"AltAST"}}}},"right":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}},"elseExpr":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"alt"}}},"thenExpr":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"alt"}}},"arguments":[{"value":"0"}]}},"name":{"identifier":"rootNode"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"rootNode"}}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"ignore"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"currentValue"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"rootNode"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"child"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"child"}},"type":{"name":{"identifier":"TerminalAST"}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ignore"}},"value":{"value":"true"}}},{}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"child"}},"type":{"name":{"identifier":"TerminalAST"}}},"name":{"identifier":"terminalAST"},"type":{"name":{"identifier":"TerminalAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"terminalAST"}}}},"right":{"name":{"identifier":"STRING_LITERAL"},"scope":{"name":{"identifier":"ANTLRLexer"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"terminalAST"}}}},"name":{"identifier":"text"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"currentValue"}},"arguments":[{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"text"}},"arguments":[{"value":"1"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"text"}}},"right":{"value":"1"}}]}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ignore"}},"value":{"value":"true"}}},{}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"rootNode"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"ignore"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"values"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"currentValue"}}}]}}]}}]}}]},"iterable":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"rule"}}},"variable":{"variables":[{"name":{"identifier":"alt"},"type":{"name":{"identifier":"Alternative"}}}]}},{"expression":{"name":{"identifier":"values"}}}]}
/semantics/symbolchecks.java	checkForOverlap	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"rule1"}},"right":{"name":{"identifier":"rule2"}}},"elseExpr":{"value":"0"},"thenExpr":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}},"name":{"identifier":"secondTokenInd"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"firstTokenStringValues"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"str1"},"type":{"name":{"identifier":"String"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"secondTokenStringValues"}},"arguments":[{"name":{"identifier":"j"}}]},"name":{"identifier":"str2"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"str1"}},"arguments":[{"name":{"identifier":"str2"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"TOKEN_UNREACHABLE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule2"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule2"}}},{"name":{"identifier":"str2"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule1"}}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"j"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"secondTokenStringValues"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"secondTokenInd"}},"name":{"identifier":"j"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"j"}}}]}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"firstTokenStringValues"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/semantics/symbolchecks.java	checkRuleArgs	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"rulerefs"}},"right":{}},"thenStmt":{}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleName"}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ref"}},"arguments":[{"name":{"identifier":"ARG_ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"arg"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},"right":{}}}}},"elseStmt":{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"arg"}},"right":{}},"right":{"inner":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},"right":{}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"MISSING_RULE_ARGS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"ruleName"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"RULE_HAS_NO_ARGS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"ruleName"}}]}}]}}]},"iterable":{"name":{"identifier":"rulerefs"}},"variable":{"variables":[{"name":{"identifier":"ref"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/semantics/symbolchecks.java	checkForQualifiedRuleIssues	{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"grammar"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"dot"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"rule"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"semantics"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"grammar"}}},"right":{"value":"."}},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rule"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImportedGrammar"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"grammar"}}}]},"name":{"identifier":"delegate"},"type":{"name":{"identifier":"Grammar"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"delegate"}},"right":{}},"elseStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"grammar"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rule"}}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"NO_SUCH_RULE_IN_SCOPE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"rule"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"grammar"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rule"}}}]}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"NO_SUCH_GRAMMAR_SCOPE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"grammar"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"grammar"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rule"}}}]}}]}}]},"iterable":{"name":{"identifier":"qualifiedRuleRefs"}},"variable":{"variables":[{"name":{"identifier":"dot"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/gui/treelayoutadaptor.java	iterator	{"statements":[{"expression":{"type":{"name":{"identifier":"Iterator"},"typeArguments":[{"name":{"identifier":"Tree"}}]},"anonymousClassBody":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]},{"body":{"statements":[{"expression":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"i"}}}}]},"type":{"type":"BOOLEAN"},"name":{"identifier":"hasNext"},"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasNext"}}},"thenStmt":{"expression":{"type":{"name":{"identifier":"NoSuchElementException"}}}}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}}]},"type":{"name":{"identifier":"Tree"}},"name":{"identifier":"next"},"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}}}}]},"type":{},"name":{"identifier":"remove"},"annotations":[{"name":{"identifier":"Override"}}]}]}}]}
/gui/treelayoutadaptor.java	hasNext	{"statements":[{"expression":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"i"}}}}]}
/gui/treelayoutadaptor.java	next	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasNext"}}},"thenStmt":{"expression":{"type":{"name":{"identifier":"NoSuchElementException"}}}}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}}]}
/gui/treelayoutadaptor.java	remove	{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}}}}]}
/gui/treelayoutadaptor.java	iterator	{"statements":[{"expression":{"type":{"name":{"identifier":"Iterator"},"typeArguments":[{"name":{"identifier":"Tree"}}]},"anonymousClassBody":[{"variables":[{"initializer":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"tree"}}},"name":{"identifier":"i"},"type":{"type":"INT"}}]},{"body":{"statements":[{"expression":{"operator":"GREATER","left":{"name":{"identifier":"i"}},"right":{"value":"0"}}}]},"type":{"type":"BOOLEAN"},"name":{"identifier":"hasNext"},"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasNext"}}},"thenStmt":{"expression":{"type":{"name":{"identifier":"NoSuchElementException"}}}}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"operator":"PREFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]}}]},"type":{"name":{"identifier":"Tree"}},"name":{"identifier":"next"},"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}}}}]},"type":{},"name":{"identifier":"remove"},"annotations":[{"name":{"identifier":"Override"}}]}]}}]}
/gui/treelayoutadaptor.java	hasNext	{"statements":[{"expression":{"operator":"GREATER","left":{"name":{"identifier":"i"}},"right":{"value":"0"}}}]}
/gui/treelayoutadaptor.java	next	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasNext"}}},"thenStmt":{"expression":{"type":{"name":{"identifier":"NoSuchElementException"}}}}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"operator":"PREFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]}}]}
/gui/treelayoutadaptor.java	remove	{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}}}}]}
/gui/treelayoutadaptor.java	isLeaf	{"statements":[{"expression":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"node"}}},"right":{"value":"0"}}}]}
/gui/treelayoutadaptor.java	isChildOfParent	{"statements":[{"expression":{"operator":"EQUALS","left":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"node"}}},"right":{"name":{"identifier":"parentNode"}}}}]}
/gui/treelayoutadaptor.java	getRoot	{"statements":[{"expression":{"name":{"identifier":"root"}}}]}
/gui/treelayoutadaptor.java	getLastChild	{"statements":[{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"parentNode"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"parentNode"}}},"right":{"value":"1"}}]}}]}
/gui/treelayoutadaptor.java	getFirstChild	{"statements":[{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"parentNode"}},"arguments":[{"value":"0"}]}}]}
/gui/treelayoutadaptor.java	getChildrenReverse	{"statements":[{"expression":{"type":{"name":{"identifier":"AntlrTreeChildrenReverseIterable"}},"arguments":[{"name":{"identifier":"node"}}]}}]}
/gui/treelayoutadaptor.java	getChildren	{"statements":[{"expression":{"type":{"name":{"identifier":"AntlrTreeChildrenIterable"}},"arguments":[{"name":{"identifier":"node"}}]}}]}
/gui/treetextprovider.java	getText	[]
/gui/systemfontmetrics.java	getFont	{"statements":[{"expression":{"name":{"identifier":"font"}}}]}
/gui/treeviewer.java	getText	{"statements":[{"expression":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"getNodeText"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"node"}},{"name":{"identifier":"ruleNames"}}]}]}}]}
/gui/treeviewer.java	getWidth	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFontMetrics"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"font"},"scope":{"name":{"identifier":"viewer"}}}]},"name":{"identifier":"fontMetrics"},"type":{"name":{"identifier":"FontMetrics"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"stringWidth"},"scope":{"name":{"identifier":"fontMetrics"}},"arguments":[{"name":{"identifier":"s"}}]},"right":{"operator":"MULTIPLY","left":{"name":{"identifier":"nodeWidthPadding"},"scope":{"name":{"identifier":"viewer"}}},"right":{"value":"2"}}},"name":{"identifier":"w"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"w"}}}]}
/gui/treeviewer.java	getHeight	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFontMetrics"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"font"},"scope":{"name":{"identifier":"viewer"}}}]},"name":{"identifier":"fontMetrics"},"type":{"name":{"identifier":"FontMetrics"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"fontMetrics"}}},"right":{"operator":"MULTIPLY","left":{"name":{"identifier":"nodeHeightPadding"},"scope":{"name":{"identifier":"viewer"}}},"right":{"value":"2"}}},"name":{"identifier":"h"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"split"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"\n"}]},"name":{"identifier":"lines"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"operator":"MULTIPLY","left":{"name":{"identifier":"h"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"lines"}}}}}]}
/gui/treeviewer.java	updatePreferredSize	{"statements":[{"expression":{"name":{"identifier":"setPreferredSize"},"arguments":[{"name":{"identifier":"getScaledTreeSize"}}]}},{"expression":{"name":{"identifier":"invalidate"}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getParent"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"validate"},"scope":{"name":{"identifier":"getParent"}}}}]}},{"expression":{"name":{"identifier":"repaint"}}}]}
/gui/treeviewer.java	getUseCurvedEdges	{"statements":[{"expression":{"name":{"identifier":"useCurvedEdges"}}}]}
/gui/treeviewer.java	setUseCurvedEdges	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"useCurvedEdges"},"scope":{}},"value":{"name":{"identifier":"useCurvedEdges"}}}}]}
/gui/treeviewer.java	paintEdges	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLeaf"},"scope":{"name":{"identifier":"getTree"}},"arguments":[{"name":{"identifier":"parent"}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BasicStroke"}},"arguments":[{"value":"1.0f"},{"name":{"identifier":"CAP_ROUND"},"scope":{"name":{"identifier":"BasicStroke"}}},{"name":{"identifier":"JOIN_ROUND"},"scope":{"name":{"identifier":"BasicStroke"}}}]},"name":{"identifier":"stroke"},"type":{"name":{"identifier":"BasicStroke"}}}]}},{"expression":{"name":{"identifier":"setStroke"},"scope":{"inner":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"Graphics2D"}}}},"arguments":[{"name":{"identifier":"stroke"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"parent"}}]},"name":{"identifier":"parentBounds"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterX"},"scope":{"name":{"identifier":"parentBounds"}}},"name":{"identifier":"x1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMaxY"},"scope":{"name":{"identifier":"parentBounds"}}},"name":{"identifier":"y1"},"type":{"type":"DOUBLE"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"child"}}]},"name":{"identifier":"childBounds"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterX"},"scope":{"name":{"identifier":"childBounds"}}},"name":{"identifier":"x2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMinY"},"scope":{"name":{"identifier":"childBounds"}}},"name":{"identifier":"y2"},"type":{"type":"DOUBLE"}}]}},{"condition":{"name":{"identifier":"getUseCurvedEdges"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"drawLine"},"scope":{"name":{"identifier":"g"}},"arguments":[{"expression":{"name":{"identifier":"x1"}},"type":{"type":"INT"}},{"expression":{"name":{"identifier":"y1"}},"type":{"type":"INT"}},{"expression":{"name":{"identifier":"x2"}},"type":{"type":"INT"}},{"expression":{"name":{"identifier":"y2"}},"type":{"type":"INT"}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"CubicCurve2D"}}}},"name":{"identifier":"c"},"type":{"name":{"identifier":"CubicCurve2D"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"x1"}},"name":{"identifier":"ctrlx1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"operator":"DIVIDE","left":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"y1"}},"right":{"name":{"identifier":"y2"}}}},"right":{"value":"2"}},"name":{"identifier":"ctrly1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"x2"}},"name":{"identifier":"ctrlx2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"y1"}},"name":{"identifier":"ctrly2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"name":{"identifier":"setCurve"},"scope":{"name":{"identifier":"c"}},"arguments":[{"name":{"identifier":"x1"}},{"name":{"identifier":"y1"}},{"name":{"identifier":"ctrlx1"}},{"name":{"identifier":"ctrly1"}},{"name":{"identifier":"ctrlx2"}},{"name":{"identifier":"ctrly2"}},{"name":{"identifier":"x2"}},{"name":{"identifier":"y2"}}]}},{"expression":{"name":{"identifier":"draw"},"scope":{"inner":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"Graphics2D"}}}},"arguments":[{"name":{"identifier":"c"}}]}}]}},{"expression":{"name":{"identifier":"paintEdges"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"child"}}]}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"getTree"}},"arguments":[{"name":{"identifier":"parent"}}]},"variable":{"variables":[{"name":{"identifier":"child"},"type":{"name":{"identifier":"Tree"}}}]}}]}}]}
/gui/treeviewer.java	paintBox	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"box"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"ruleFailedAndMatchedNothing"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"expression":{"name":{"identifier":"tree"}},"type":{"name":{"identifier":"ParserRuleContext"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"tree"}},"type":{"name":{"identifier":"ParserRuleContext"}}},"name":{"identifier":"ctx"},"type":{"name":{"identifier":"ParserRuleContext"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleFailedAndMatchedNothing"}},"value":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"exception"},"scope":{"name":{"identifier":"ctx"}}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"stop"},"scope":{"name":{"identifier":"ctx"}}},"right":{}}},"right":{"operator":"LESS","left":{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"stop"},"scope":{"name":{"identifier":"ctx"}}}},"right":{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"start"},"scope":{"name":{"identifier":"ctx"}}}}}}}}]}},{"condition":{"operator":"OR","left":{"operator":"OR","left":{"operator":"OR","left":{"name":{"identifier":"isHighlighted"},"arguments":[{"name":{"identifier":"tree"}}]},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"boxColor"}},"right":{}}},"right":{"expression":{"name":{"identifier":"tree"}},"type":{"name":{"identifier":"ErrorNode"}}}},"right":{"name":{"identifier":"ruleFailedAndMatchedNothing"}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"isHighlighted"},"arguments":[{"name":{"identifier":"tree"}}]},"elseStmt":{"condition":{"operator":"OR","left":{"expression":{"name":{"identifier":"tree"}},"type":{"name":{"identifier":"ErrorNode"}}},"right":{"name":{"identifier":"ruleFailedAndMatchedNothing"}}},"elseStmt":{"expression":{"name":{"identifier":"setColor"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"boxColor"}}]}},"thenStmt":{"expression":{"name":{"identifier":"setColor"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"LIGHT_RED"}}]}}},"thenStmt":{"expression":{"name":{"identifier":"setColor"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"highlightedBoxColor"}}]}}},{"expression":{"name":{"identifier":"fillRoundRect"},"scope":{"name":{"identifier":"g"}},"arguments":[{"expression":{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},{"expression":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},{"operator":"MINUS","left":{"expression":{"name":{"identifier":"width"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"value":"1"}},{"operator":"MINUS","left":{"expression":{"name":{"identifier":"height"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"value":"1"}},{"name":{"identifier":"arcSize"}},{"name":{"identifier":"arcSize"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"borderColor"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setColor"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"borderColor"}}]}},{"expression":{"name":{"identifier":"drawRoundRect"},"scope":{"name":{"identifier":"g"}},"arguments":[{"expression":{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},{"expression":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},{"operator":"MINUS","left":{"expression":{"name":{"identifier":"width"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"value":"1"}},{"operator":"MINUS","left":{"expression":{"name":{"identifier":"height"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"value":"1"}},{"name":{"identifier":"arcSize"}},{"name":{"identifier":"arcSize"}}]}}]}},{"expression":{"name":{"identifier":"setColor"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"textColor"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"split"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"\n"}]},"name":{"identifier":"lines"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFontMetrics"},"arguments":[{"name":{"identifier":"font"}}]},"name":{"identifier":"m"},"type":{"name":{"identifier":"FontMetrics"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"expression":{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"operator":"DIVIDE","left":{"name":{"identifier":"arcSize"}},"right":{"value":"2"}}},"right":{"name":{"identifier":"nodeWidthPadding"}}},"name":{"identifier":"x"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"expression":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"name":{"identifier":"getAscent"},"scope":{"name":{"identifier":"m"}}}},"right":{"name":{"identifier":"getLeading"},"scope":{"name":{"identifier":"m"}}}},"right":{"value":"1"}},"right":{"name":{"identifier":"nodeHeightPadding"}}},"name":{"identifier":"y"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"text"},"arguments":[{"name":{"identifier":"g"}},{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"lines"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"y"}},"value":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"m"}}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"lines"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/gui/treeviewer.java	text	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s"}},"value":{"name":{"identifier":"escapeWhitespace"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"s"}},{"value":"true"}]}}},{"expression":{"name":{"identifier":"drawString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"s"}},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}}]}
/gui/treeviewer.java	paint	{"statements":[{"expression":{"name":{"identifier":"paint"},"scope":{},"arguments":[{"name":{"identifier":"g"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"treeLayout"}},"right":{}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"Graphics2D"}}},"name":{"identifier":"g2"},"type":{"name":{"identifier":"Graphics2D"}}}]}},{"expression":{"name":{"identifier":"setRenderingHint"},"scope":{"name":{"identifier":"g2"}},"arguments":[{"name":{"identifier":"KEY_ANTIALIASING"},"scope":{"name":{"identifier":"RenderingHints"}}},{"name":{"identifier":"VALUE_ANTIALIAS_ON"},"scope":{"name":{"identifier":"RenderingHints"}}}]}},{"expression":{"name":{"identifier":"setRenderingHint"},"scope":{"name":{"identifier":"g2"}},"arguments":[{"name":{"identifier":"KEY_TEXT_ANTIALIASING"},"scope":{"name":{"identifier":"RenderingHints"}}},{"name":{"identifier":"VALUE_TEXT_ANTIALIAS_ON"},"scope":{"name":{"identifier":"RenderingHints"}}}]}},{"expression":{"name":{"identifier":"paintEdges"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"getRoot"},"scope":{"name":{"identifier":"getTree"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"paintBox"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"Tree"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"getNodeBounds"},"scope":{"name":{"identifier":"treeLayout"}}}},"variable":{"variables":[{"name":{"identifier":"Tree"},"type":{"name":{"identifier":"Tree"}}}]}}]}
/gui/treeviewer.java	generateEdges	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLeaf"},"scope":{"name":{"identifier":"getTree"}},"arguments":[{"name":{"identifier":"parent"}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"parent"}}]},"name":{"identifier":"b1"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterX"},"scope":{"name":{"identifier":"b1"}}},"name":{"identifier":"x1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterY"},"scope":{"name":{"identifier":"b1"}}},"name":{"identifier":"y1"},"type":{"type":"DOUBLE"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"child"}}]},"name":{"identifier":"childBounds"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterX"},"scope":{"name":{"identifier":"childBounds"}}},"name":{"identifier":"x2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMinY"},"scope":{"name":{"identifier":"childBounds"}}},"name":{"identifier":"y2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"writer"}},"arguments":[{"name":{"identifier":"line"},"arguments":[{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"x1"}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"y1"}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"x2"}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"y2"}}},{"value":"stroke:black; stroke-width:1px;"}]}]}},{"expression":{"name":{"identifier":"generateEdges"},"arguments":[{"name":{"identifier":"writer"}},{"name":{"identifier":"child"}}]}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"getTree"}},"arguments":[{"name":{"identifier":"parent"}}]},"variable":{"variables":[{"name":{"identifier":"child"},"type":{"name":{"identifier":"Tree"}}}]}}]}}]}
/gui/treeviewer.java	generateBox	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"parent"}}]},"name":{"identifier":"box"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"writer"}},"arguments":[{"name":{"identifier":"rect"},"arguments":[{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"width"},"scope":{"name":{"identifier":"box"}}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"height"},"scope":{"name":{"identifier":"box"}}}},{"value":"fill:orange; stroke:rgb(0,0,0);"},{"value":"rx=\\"1\\""}]}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"getText"},"arguments":[{"name":{"identifier":"parent"}}]},"arguments":[{"value":"<"},{"value":"&lt;"}]},"arguments":[{"value":">"},{"value":"&gt;"}]},"name":{"identifier":"line"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"value":"10"},"name":{"identifier":"fontSize"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"expression":{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"value":"2"}},"name":{"identifier":"x"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","left":{"operator":"PLUS","left":{"expression":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}},"type":{"type":"INT"}},"right":{"name":{"identifier":"fontSize"}}},"right":{"value":"1"}},"name":{"identifier":"y"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"font-family:sans-serif;font-size:%dpx;"},{"name":{"identifier":"fontSize"}}]},"name":{"identifier":"style"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"writer"}},"arguments":[{"name":{"identifier":"text"},"arguments":[{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"x"}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"y"}}},{"name":{"identifier":"style"}},{"name":{"identifier":"line"}}]}]}}]}
/gui/treeviewer.java	line	{"statements":[{"expression":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"<line x1=\\"%s\\" y1=\\"%s\\" x2=\\"%s\\" y2=\\"%s\\" style=\\"%s\\" />\n"},{"name":{"identifier":"x1"}},{"name":{"identifier":"y1"}},{"name":{"identifier":"x2"}},{"name":{"identifier":"y2"}},{"name":{"identifier":"style"}}]}}]}
/gui/treeviewer.java	rect	{"statements":[{"expression":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"<rect x=\\"%s\\" y=\\"%s\\" width=\\"%s\\" height=\\"%s\\" style=\\"%s\\" %s/>\n"},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}},{"name":{"identifier":"width"}},{"name":{"identifier":"height"}},{"name":{"identifier":"style"}},{"name":{"identifier":"extraAttributes"}}]}}]}
/gui/treeviewer.java	text	{"statements":[{"expression":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"<text x=\\"%s\\" y=\\"%s\\" style=\\"%s\\">\n%s\n</text>\n"},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}},{"name":{"identifier":"style"}},{"name":{"identifier":"text"}}]}}]}
/gui/treeviewer.java	paintSVG	{"statements":[{"expression":{"name":{"identifier":"generateEdges"},"arguments":[{"name":{"identifier":"writer"}},{"name":{"identifier":"getRoot"},"scope":{"name":{"identifier":"getTree"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"generateBox"},"arguments":[{"name":{"identifier":"writer"}},{"name":{"identifier":"tree"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"getNodeBounds"},"scope":{"name":{"identifier":"treeLayout"}}}},"variable":{"variables":[{"name":{"identifier":"tree"},"type":{"name":{"identifier":"Tree"}}}]}}]}
/gui/treeviewer.java	getComponentGraphics	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"Graphics2D"}}},"name":{"identifier":"g2d"},"type":{"name":{"identifier":"Graphics2D"}}}]}},{"expression":{"name":{"identifier":"scale"},"scope":{"name":{"identifier":"g2d"}},"arguments":[{"name":{"identifier":"scale"}},{"name":{"identifier":"scale"}}]}},{"expression":{"name":{"identifier":"getComponentGraphics"},"scope":{},"arguments":[{"name":{"identifier":"g2d"}}]}}]}
/gui/treeviewer.java	showInDialog	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JFrame"}}},"name":{"identifier":"dialog"},"type":{"name":{"identifier":"JFrame"}}}]}},{"expression":{"name":{"identifier":"setTitle"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"value":"Parse Tree Inspector"}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"userNodeForPackage"},"scope":{"name":{"identifier":"Preferences"}},"arguments":[{"type":{"name":{"identifier":"TreeViewer"}}}]},"name":{"identifier":"prefs"},"type":{"name":{"identifier":"Preferences"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JPanel"}},"arguments":[{"type":{"name":{"identifier":"BorderLayout"}},"arguments":[{"value":"5"},{"value":"5"}]}]},"name":{"identifier":"mainPane"},"type":{"name":{"identifier":"Container"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JPanel"}},"arguments":[{"type":{"name":{"identifier":"BorderLayout"}},"arguments":[{"value":"0"},{"value":"0"}]}]},"name":{"identifier":"contentPane"},"type":{"name":{"identifier":"Container"}}}]}},{"expression":{"name":{"identifier":"setBackground"},"scope":{"name":{"identifier":"contentPane"}},"arguments":[{"name":{"identifier":"white"},"scope":{"name":{"identifier":"Color"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JScrollPane"}},"arguments":[{"name":{"identifier":"viewer"}}]},"name":{"identifier":"scrollPane"},"type":{"name":{"identifier":"JScrollPane"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"contentPane"}},"arguments":[{"name":{"identifier":"scrollPane"}},{"name":{"identifier":"CENTER"},"scope":{"name":{"identifier":"BorderLayout"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JPanel"}},"arguments":[{"type":{"name":{"identifier":"FlowLayout"}}}]},"name":{"identifier":"wrapper"},"type":{"name":{"identifier":"JPanel"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JPanel"}},"arguments":[{"type":{"name":{"identifier":"BorderLayout"}},"arguments":[{"value":"0"},{"value":"0"}]}]},"name":{"identifier":"bottomPanel"},"type":{"name":{"identifier":"JPanel"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"contentPane"}},"arguments":[{"name":{"identifier":"bottomPanel"}},{"name":{"identifier":"SOUTH"},"scope":{"name":{"identifier":"BorderLayout"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JButton"}},"arguments":[{"value":"OK"}]},"name":{"identifier":"ok"},"type":{"name":{"identifier":"JButton"}}}]}},{"expression":{"name":{"identifier":"addActionListener"},"scope":{"name":{"identifier":"ok"}},"arguments":[{"type":{"name":{"identifier":"ActionListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"dispatchEvent"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"type":{"name":{"identifier":"WindowEvent"}},"arguments":[{"name":{"identifier":"dialog"}},{"name":{"identifier":"WINDOW_CLOSING"},"scope":{"name":{"identifier":"WindowEvent"}}}]}]}}]},"type":{},"name":{"identifier":"actionPerformed"},"parameters":[{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"ActionEvent"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"wrapper"}},"arguments":[{"name":{"identifier":"ok"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JButton"}},"arguments":[{"value":"Export as PNG"}]},"name":{"identifier":"png"},"type":{"name":{"identifier":"JButton"}}}]}},{"expression":{"name":{"identifier":"addActionListener"},"scope":{"name":{"identifier":"png"}},"arguments":[{"type":{"name":{"identifier":"ActionListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"generatePNGFile"},"arguments":[{"name":{"identifier":"viewer"}},{"name":{"identifier":"dialog"}}]}}]},"type":{},"name":{"identifier":"actionPerformed"},"parameters":[{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"ActionEvent"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"wrapper"}},"arguments":[{"name":{"identifier":"png"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JButton"}},"arguments":[{"value":"Export as SVG"}]},"name":{"identifier":"svg"},"type":{"name":{"identifier":"JButton"}}}]}},{"expression":{"name":{"identifier":"addActionListener"},"scope":{"name":{"identifier":"svg"}},"arguments":[{"type":{"name":{"identifier":"ActionListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"generateSVGFile"},"arguments":[{"name":{"identifier":"viewer"}},{"name":{"identifier":"dialog"}}]}}]},"type":{},"name":{"identifier":"actionPerformed"},"parameters":[{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"ActionEvent"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"wrapper"}},"arguments":[{"name":{"identifier":"svg"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"bottomPanel"}},"arguments":[{"name":{"identifier":"wrapper"}},{"name":{"identifier":"SOUTH"},"scope":{"name":{"identifier":"BorderLayout"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_VIEWER_SCALE_PREFS_KEY"}},{"name":{"identifier":"getScale"},"scope":{"name":{"identifier":"viewer"}}}]},"name":{"identifier":"lastKnownViewerScale"},"type":{"type":"DOUBLE"}}]}},{"expression":{"name":{"identifier":"setScale"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"lastKnownViewerScale"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"inner":{"operator":"MULTIPLY","left":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"lastKnownViewerScale"}},"right":{"value":"1.0"}}},"right":{"value":"1000"}}},"type":{"type":"INT"}},"name":{"identifier":"sliderValue"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JSlider"}},"arguments":[{"name":{"identifier":"HORIZONTAL"},"scope":{"name":{"identifier":"JSlider"}}},{"operator":"MINUS","expression":{"value":"999"}},{"value":"1000"},{"name":{"identifier":"sliderValue"}}]},"name":{"identifier":"scaleSlider"},"type":{"name":{"identifier":"JSlider"}}}]}},{"expression":{"name":{"identifier":"addChangeListener"},"scope":{"name":{"identifier":"scaleSlider"}},"arguments":[{"type":{"name":{"identifier":"ChangeListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"scaleSlider"}}},"name":{"identifier":"v"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"setScale"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"operator":"PLUS","left":{"operator":"DIVIDE","left":{"name":{"identifier":"v"}},"right":{"value":"1000.0"}},"right":{"value":"1.0"}}]}}]},"type":{},"name":{"identifier":"stateChanged"},"parameters":[{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"ChangeEvent"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"bottomPanel"}},"arguments":[{"name":{"identifier":"scaleSlider"}},{"name":{"identifier":"CENTER"},"scope":{"name":{"identifier":"BorderLayout"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JPanel"}},"arguments":[{"type":{"name":{"identifier":"BorderLayout"}},"arguments":[{"value":"5"},{"value":"5"}]}]},"name":{"identifier":"treePanel"},"type":{"name":{"identifier":"JPanel"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"EmptyIcon"}}},"name":{"identifier":"empty"},"type":{"name":{"identifier":"Icon"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"UIManager"}},"arguments":[{"value":"Tree.closedIcon"},{"name":{"identifier":"empty"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"UIManager"}},"arguments":[{"value":"Tree.openIcon"},{"name":{"identifier":"empty"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"UIManager"}},"arguments":[{"value":"Tree.leafIcon"},{"name":{"identifier":"empty"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRoot"},"scope":{"name":{"identifier":"getTree"},"scope":{"name":{"identifier":"viewer"}}}},"name":{"identifier":"parseTreeRoot"},"type":{"name":{"identifier":"Tree"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreeNodeWrapper"}},"arguments":[{"name":{"identifier":"parseTreeRoot"}},{"name":{"identifier":"viewer"}}]},"name":{"identifier":"nodeRoot"},"type":{"name":{"identifier":"TreeNodeWrapper"}}}]}},{"expression":{"name":{"identifier":"fillTree"},"arguments":[{"name":{"identifier":"nodeRoot"}},{"name":{"identifier":"parseTreeRoot"}},{"name":{"identifier":"viewer"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JTree"}},"arguments":[{"name":{"identifier":"nodeRoot"}}]},"name":{"identifier":"tree"},"type":{"name":{"identifier":"JTree"}}}]}},{"expression":{"name":{"identifier":"setSelectionMode"},"scope":{"name":{"identifier":"getSelectionModel"},"scope":{"name":{"identifier":"tree"}}},"arguments":[{"name":{"identifier":"SINGLE_TREE_SELECTION"},"scope":{"name":{"identifier":"TreeSelectionModel"}}}]}},{"expression":{"name":{"identifier":"addTreeSelectionListener"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"type":{"name":{"identifier":"TreeSelectionListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getSource"},"scope":{"name":{"identifier":"e"}}},"type":{"name":{"identifier":"JTree"}}},"name":{"identifier":"selectedTree"},"type":{"name":{"identifier":"JTree"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSelectionPath"},"scope":{"name":{"identifier":"selectedTree"}}},"name":{"identifier":"path"},"type":{"name":{"identifier":"TreePath"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"path"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getLastPathComponent"},"scope":{"name":{"identifier":"path"}}},"type":{"name":{"identifier":"TreeNodeWrapper"}}},"name":{"identifier":"treeNode"},"type":{"name":{"identifier":"TreeNodeWrapper"}}}]}},{"expression":{"name":{"identifier":"setTree"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"expression":{"name":{"identifier":"getUserObject"},"scope":{"name":{"identifier":"treeNode"}}},"type":{"name":{"identifier":"Tree"}}}]}}]}}]},"type":{},"name":{"identifier":"valueChanged"},"parameters":[{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"TreeSelectionEvent"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"treePanel"}},"arguments":[{"type":{"name":{"identifier":"JScrollPane"}},"arguments":[{"name":{"identifier":"tree"}}]}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JSplitPane"}},"arguments":[{"name":{"identifier":"HORIZONTAL_SPLIT"},"scope":{"name":{"identifier":"JSplitPane"}}},{"name":{"identifier":"treePanel"}},{"name":{"identifier":"contentPane"}}]},"name":{"identifier":"splitPane"},"type":{"name":{"identifier":"JSplitPane"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"mainPane"}},"arguments":[{"name":{"identifier":"splitPane"}},{"name":{"identifier":"CENTER"},"scope":{"name":{"identifier":"BorderLayout"}}}]}},{"expression":{"name":{"identifier":"setContentPane"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"name":{"identifier":"mainPane"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"WindowAdapter"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"putInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_WIDTH_PREFS_KEY"}},{"expression":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"dialog"}}}},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"putInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_HEIGHT_PREFS_KEY"}},{"expression":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"dialog"}}}},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"putDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_X_PREFS_KEY"}},{"name":{"identifier":"getX"},"scope":{"name":{"identifier":"getLocationOnScreen"},"scope":{"name":{"identifier":"dialog"}}}}]}},{"expression":{"name":{"identifier":"putDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_Y_PREFS_KEY"}},{"name":{"identifier":"getY"},"scope":{"name":{"identifier":"getLocationOnScreen"},"scope":{"name":{"identifier":"dialog"}}}}]}},{"expression":{"name":{"identifier":"putInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_DIVIDER_LOC_PREFS_KEY"}},{"name":{"identifier":"getDividerLocation"},"scope":{"name":{"identifier":"splitPane"}}}]}},{"expression":{"name":{"identifier":"putDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_VIEWER_SCALE_PREFS_KEY"}},{"name":{"identifier":"getScale"},"scope":{"name":{"identifier":"viewer"}}}]}},{"expression":{"name":{"identifier":"setVisible"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"value":"false"}]}},{"expression":{"name":{"identifier":"dispose"},"scope":{"name":{"identifier":"dialog"}}}}]},"type":{},"name":{"identifier":"windowClosing"},"parameters":[{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"WindowEvent"}}}],"annotations":[{"name":{"identifier":"Override"}}]}]},"name":{"identifier":"exitListener"},"type":{"name":{"identifier":"WindowListener"}}}]}},{"expression":{"name":{"identifier":"addWindowListener"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"name":{"identifier":"exitListener"}}]}},{"expression":{"name":{"identifier":"setDefaultCloseOperation"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"name":{"identifier":"DO_NOTHING_ON_CLOSE"},"scope":{"name":{"identifier":"JFrame"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_WIDTH_PREFS_KEY"}},{"value":"600"}]},"name":{"identifier":"width"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_HEIGHT_PREFS_KEY"}},{"value":"500"}]},"name":{"identifier":"height"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"setPreferredSize"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"type":{"name":{"identifier":"Dimension"}},"arguments":[{"name":{"identifier":"width"}},{"name":{"identifier":"height"}}]}]}},{"expression":{"name":{"identifier":"pack"},"scope":{"name":{"identifier":"dialog"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_DIVIDER_LOC_PREFS_KEY"}},{"value":"200"}]},"name":{"identifier":"dividerLocation"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"setDividerLocation"},"scope":{"name":{"identifier":"splitPane"}},"arguments":[{"name":{"identifier":"dividerLocation"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_X_PREFS_KEY"}},{"operator":"MINUS","expression":{"value":"1"}}]},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"setLocationRelativeTo"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setLocation"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"expression":{"name":{"identifier":"getDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_X_PREFS_KEY"}},{"value":"100"}]},"type":{"type":"INT"}},{"expression":{"name":{"identifier":"getDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_Y_PREFS_KEY"}},{"value":"100"}]},"type":{"type":"INT"}}]}}]}},{"expression":{"name":{"identifier":"setVisible"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"value":"true"}]}},{"expression":{"name":{"identifier":"dialog"}}}]}
/gui/treeviewer.java	actionPerformed	{"statements":[{"expression":{"name":{"identifier":"dispatchEvent"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"type":{"name":{"identifier":"WindowEvent"}},"arguments":[{"name":{"identifier":"dialog"}},{"name":{"identifier":"WINDOW_CLOSING"},"scope":{"name":{"identifier":"WindowEvent"}}}]}]}}]}
/gui/treeviewer.java	actionPerformed	{"statements":[{"expression":{"name":{"identifier":"generatePNGFile"},"arguments":[{"name":{"identifier":"viewer"}},{"name":{"identifier":"dialog"}}]}}]}
/gui/treeviewer.java	actionPerformed	{"statements":[{"expression":{"name":{"identifier":"generateSVGFile"},"arguments":[{"name":{"identifier":"viewer"}},{"name":{"identifier":"dialog"}}]}}]}
/gui/treeviewer.java	stateChanged	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"scaleSlider"}}},"name":{"identifier":"v"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"setScale"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"operator":"PLUS","left":{"operator":"DIVIDE","left":{"name":{"identifier":"v"}},"right":{"value":"1000.0"}},"right":{"value":"1.0"}}]}}]}
/gui/treeviewer.java	valueChanged	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getSource"},"scope":{"name":{"identifier":"e"}}},"type":{"name":{"identifier":"JTree"}}},"name":{"identifier":"selectedTree"},"type":{"name":{"identifier":"JTree"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSelectionPath"},"scope":{"name":{"identifier":"selectedTree"}}},"name":{"identifier":"path"},"type":{"name":{"identifier":"TreePath"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"path"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getLastPathComponent"},"scope":{"name":{"identifier":"path"}}},"type":{"name":{"identifier":"TreeNodeWrapper"}}},"name":{"identifier":"treeNode"},"type":{"name":{"identifier":"TreeNodeWrapper"}}}]}},{"expression":{"name":{"identifier":"setTree"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"expression":{"name":{"identifier":"getUserObject"},"scope":{"name":{"identifier":"treeNode"}}},"type":{"name":{"identifier":"Tree"}}}]}}]}}]}
/gui/treeviewer.java	windowClosing	{"statements":[{"expression":{"name":{"identifier":"putInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_WIDTH_PREFS_KEY"}},{"expression":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"dialog"}}}},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"putInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_HEIGHT_PREFS_KEY"}},{"expression":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"dialog"}}}},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"putDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_X_PREFS_KEY"}},{"name":{"identifier":"getX"},"scope":{"name":{"identifier":"getLocationOnScreen"},"scope":{"name":{"identifier":"dialog"}}}}]}},{"expression":{"name":{"identifier":"putDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_Y_PREFS_KEY"}},{"name":{"identifier":"getY"},"scope":{"name":{"identifier":"getLocationOnScreen"},"scope":{"name":{"identifier":"dialog"}}}}]}},{"expression":{"name":{"identifier":"putInt"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_DIVIDER_LOC_PREFS_KEY"}},{"name":{"identifier":"getDividerLocation"},"scope":{"name":{"identifier":"splitPane"}}}]}},{"expression":{"name":{"identifier":"putDouble"},"scope":{"name":{"identifier":"prefs"}},"arguments":[{"name":{"identifier":"DIALOG_VIEWER_SCALE_PREFS_KEY"}},{"name":{"identifier":"getScale"},"scope":{"name":{"identifier":"viewer"}}}]}},{"expression":{"name":{"identifier":"setVisible"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{"value":"false"}]}},{"expression":{"name":{"identifier":"dispose"},"scope":{"name":{"identifier":"dialog"}}}}]}
/gui/treeviewer.java	generatePNGFile	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BufferedImage"}},"arguments":[{"name":{"identifier":"width"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"viewer"}}}},{"name":{"identifier":"height"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"viewer"}}}},{"name":{"identifier":"TYPE_INT_ARGB"},"scope":{"name":{"identifier":"BufferedImage"}}}]},"name":{"identifier":"bi"},"type":{"name":{"identifier":"BufferedImage"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createGraphics"},"scope":{"name":{"identifier":"bi"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Graphics"}}}]}},{"expression":{"name":{"identifier":"paint"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"dispose"},"scope":{"name":{"identifier":"g"}}}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFileChooser"},"arguments":[{"value":".png"},{"value":"PNG files"}]},"name":{"identifier":"fileChooser"},"type":{"name":{"identifier":"JFileChooser"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"showSaveDialog"},"scope":{"name":{"identifier":"fileChooser"}},"arguments":[{"name":{"identifier":"dialog"}}]},"name":{"identifier":"returnValue"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"returnValue"}},"right":{"name":{"identifier":"APPROVE_OPTION"},"scope":{"name":{"identifier":"JFileChooser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSelectedFile"},"scope":{"name":{"identifier":"fileChooser"}}},"name":{"identifier":"pngFile"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"ImageIO"}},"arguments":[{"name":{"identifier":"bi"}},{"value":"png"},{"name":{"identifier":"pngFile"}}]}},{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"open"},"scope":{"name":{"identifier":"getDesktop"},"scope":{"name":{"identifier":"Desktop"}}},"arguments":[{"name":{"identifier":"getParentFile"},"scope":{"name":{"identifier":"pngFile"}}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"showMessageDialog"},"scope":{"name":{"identifier":"JOptionPane"}},"arguments":[{"name":{"identifier":"dialog"}},{"operator":"PLUS","left":{"value":"Saved PNG to: "},"right":{"name":{"identifier":"getAbsolutePath"},"scope":{"name":{"identifier":"pngFile"}}}}]}},{"expression":{"name":{"identifier":"printStackTrace"},"scope":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"Exception"}}}}]}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"showMessageDialog"},"scope":{"name":{"identifier":"JOptionPane"}},"arguments":[{"name":{"identifier":"dialog"}},{"operator":"PLUS","left":{"value":"Could not export to PNG: "},"right":{"name":{"identifier":"getMessage"},"scope":{"name":{"identifier":"ex"}}}},{"value":"Error"},{"name":{"identifier":"ERROR_MESSAGE"},"scope":{"name":{"identifier":"JOptionPane"}}}]}},{"expression":{"name":{"identifier":"printStackTrace"},"scope":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"Exception"}}}}]}]}
/gui/treeviewer.java	getFileChooser	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateNonExistingFile"},"arguments":[{"name":{"identifier":"fileEnding"}}]},"name":{"identifier":"suggestedFile"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JFileChooserConfirmOverwrite"}}},"name":{"identifier":"fileChooser"},"type":{"name":{"identifier":"JFileChooser"}}}]}},{"expression":{"name":{"identifier":"setCurrentDirectory"},"scope":{"name":{"identifier":"fileChooser"}},"arguments":[{"name":{"identifier":"getParentFile"},"scope":{"name":{"identifier":"suggestedFile"}}}]}},{"expression":{"name":{"identifier":"setSelectedFile"},"scope":{"name":{"identifier":"fileChooser"}},"arguments":[{"name":{"identifier":"suggestedFile"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"FileFilter"}},"anonymousClassBody":[{"body":{"statements":[{"condition":{"name":{"identifier":"isFile"},"scope":{"name":{"identifier":"pathname"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"pathname"}}}},"arguments":[{"name":{"identifier":"fileEnding"}}]}}]}},{"expression":{"value":"true"}}]},"type":{"type":"BOOLEAN"},"name":{"identifier":"accept"},"parameters":[{"isVarArgs":"false","name":{"identifier":"pathname"},"type":{"name":{"identifier":"File"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"description"}},"right":{"value":" (*"}},"right":{"name":{"identifier":"fileEnding"}}},"right":{"value":")"}}}]},"type":{"name":{"identifier":"String"}},"name":{"identifier":"getDescription"},"annotations":[{"name":{"identifier":"Override"}}]}]},"name":{"identifier":"filter"},"type":{"name":{"identifier":"FileFilter"}}}]}},{"expression":{"name":{"identifier":"addChoosableFileFilter"},"scope":{"name":{"identifier":"fileChooser"}},"arguments":[{"name":{"identifier":"filter"}}]}},{"expression":{"name":{"identifier":"setFileFilter"},"scope":{"name":{"identifier":"fileChooser"}},"arguments":[{"name":{"identifier":"filter"}}]}},{"expression":{"name":{"identifier":"fileChooser"}}}]}
/gui/treeviewer.java	accept	{"statements":[{"condition":{"name":{"identifier":"isFile"},"scope":{"name":{"identifier":"pathname"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"pathname"}}}},"arguments":[{"name":{"identifier":"fileEnding"}}]}}]}},{"expression":{"value":"true"}}]}
/gui/treeviewer.java	getDescription	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"description"}},"right":{"value":" (*"}},"right":{"name":{"identifier":"fileEnding"}}},"right":{"value":")"}}}]}
/gui/treeviewer.java	generateSVGFile	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFileChooser"},"arguments":[{"value":".svg"},{"value":"SVG files"}]},"name":{"identifier":"fileChooser"},"type":{"name":{"identifier":"JFileChooser"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"showSaveDialog"},"scope":{"name":{"identifier":"fileChooser"}},"arguments":[{"name":{"identifier":"dialog"}}]},"name":{"identifier":"returnValue"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"returnValue"}},"right":{"name":{"identifier":"APPROVE_OPTION"},"scope":{"name":{"identifier":"JFileChooser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSelectedFile"},"scope":{"name":{"identifier":"fileChooser"}}},"name":{"identifier":"svgFile"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BufferedWriter"}},"arguments":[{"type":{"name":{"identifier":"FileWriter"}},"arguments":[{"name":{"identifier":"svgFile"}}]}]},"name":{"identifier":"writer"},"type":{"name":{"identifier":"BufferedWriter"}}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"writer"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"<svg width=\\""},"right":{"operator":"MULTIPLY","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"viewer"}}}},"right":{"value":"1.1"}}},"right":{"value":"\\" height=\\""}},"right":{"operator":"MULTIPLY","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"viewer"}}}},"right":{"value":"1.1"}}},"right":{"value":"\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\">"}}]}},{"expression":{"name":{"identifier":"paintSVG"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"name":{"identifier":"writer"}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"writer"}},"arguments":[{"value":"</svg>"}]}},{"expression":{"name":{"identifier":"flush"},"scope":{"name":{"identifier":"writer"}}}},{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"writer"}}}},{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"open"},"scope":{"name":{"identifier":"getDesktop"},"scope":{"name":{"identifier":"Desktop"}}},"arguments":[{"name":{"identifier":"getParentFile"},"scope":{"name":{"identifier":"svgFile"}}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"showMessageDialog"},"scope":{"name":{"identifier":"JOptionPane"}},"arguments":[{"name":{"identifier":"dialog"}},{"operator":"PLUS","left":{"value":"Saved SVG to: "},"right":{"name":{"identifier":"getAbsolutePath"},"scope":{"name":{"identifier":"svgFile"}}}}]}},{"expression":{"name":{"identifier":"printStackTrace"},"scope":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"Exception"}}}}]}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"showMessageDialog"},"scope":{"name":{"identifier":"JOptionPane"}},"arguments":[{"name":{"identifier":"dialog"}},{"operator":"PLUS","left":{"value":"Could not export to SVG: "},"right":{"name":{"identifier":"getMessage"},"scope":{"name":{"identifier":"ex"}}}},{"value":"Error"},{"name":{"identifier":"ERROR_MESSAGE"},"scope":{"name":{"identifier":"JOptionPane"}}}]}},{"expression":{"name":{"identifier":"printStackTrace"},"scope":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"Exception"}}}}]}]}
/gui/treeviewer.java	generateNonExistingFile	{"statements":[{"expression":{"variables":[{"initializer":{"value":"."},"name":{"identifier":"parent"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"value":"antlr4_parse_tree"},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"parent"}},{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"name":{"identifier":"extension"}}}]},"name":{"identifier":"file"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"counter"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"file"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"parent"}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":"_"}},"right":{"name":{"identifier":"counter"}}},"right":{"name":{"identifier":"extension"}}}]}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"counter"}}}}]},"condition":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"file"}}}},{"expression":{"name":{"identifier":"file"}}}]}
/gui/treeviewer.java	fillTree	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tree"}},"right":{}},"thenStmt":{"statements":[{}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"childTree"},"type":{"name":{"identifier":"Tree"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreeNodeWrapper"}},"arguments":[{"name":{"identifier":"childTree"}},{"name":{"identifier":"viewer"}}]},"name":{"identifier":"childNode"},"type":{"name":{"identifier":"TreeNodeWrapper"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"node"}},"arguments":[{"name":{"identifier":"childNode"}}]}},{"expression":{"name":{"identifier":"fillTree"},"arguments":[{"name":{"identifier":"childNode"}},{"name":{"identifier":"childTree"}},{"name":{"identifier":"viewer"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"tree"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/gui/treeviewer.java	getScaledTreeSize	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"getBounds"},"scope":{"name":{"identifier":"getBounds"},"scope":{"name":{"identifier":"treeLayout"}}}}},"name":{"identifier":"scaledTreeSize"},"type":{"name":{"identifier":"Dimension"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scaledTreeSize"}},"value":{"type":{"name":{"identifier":"Dimension"}},"arguments":[{"expression":{"inner":{"operator":"MULTIPLY","left":{"name":{"identifier":"width"},"scope":{"name":{"identifier":"scaledTreeSize"}}},"right":{"name":{"identifier":"scale"}}}},"type":{"type":"INT"}},{"expression":{"inner":{"operator":"MULTIPLY","left":{"name":{"identifier":"height"},"scope":{"name":{"identifier":"scaledTreeSize"}}},"right":{"name":{"identifier":"scale"}}}},"type":{"type":"INT"}}]}}},{"expression":{"name":{"identifier":"scaledTreeSize"}}}]}
/gui/treeviewer.java	open	{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"viewer"},"type":{"name":{"identifier":"TreeViewer"}}}]}},{"expression":{"name":{"identifier":"setScale"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"value":"1.5"}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Callable"},"typeArguments":[{"name":{"identifier":"JFrame"}}]},"anonymousClassBody":[{"variables":[{"name":{"identifier":"result"},"type":{"name":{"identifier":"JFrame"}}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"invokeAndWait"},"scope":{"name":{"identifier":"SwingUtilities"}},"arguments":[{"type":{"name":{"identifier":"Runnable"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"showInDialog"},"arguments":[{"name":{"identifier":"viewer"}}]}}}]},"type":{},"name":{"identifier":"run"},"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"result"}}}]},"type":{"name":{"identifier":"JFrame"}},"name":{"identifier":"call"},"thrownExceptions":[{"name":{"identifier":"Exception"}}],"annotations":[{"name":{"identifier":"Override"}}]}]},"name":{"identifier":"callable"},"type":{"name":{"identifier":"Callable"},"typeArguments":[{"name":{"identifier":"JFrame"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newSingleThreadExecutor"},"scope":{"name":{"identifier":"Executors"}}},"name":{"identifier":"executor"},"type":{"name":{"identifier":"ExecutorService"}}}]}},{"finallyBlock":{"statements":[{"expression":{"name":{"identifier":"shutdown"},"scope":{"name":{"identifier":"executor"}}}}]},"tryBlock":{"statements":[{"expression":{"name":{"identifier":"submit"},"scope":{"name":{"identifier":"executor"}},"arguments":[{"name":{"identifier":"callable"}}]}}]}}]}
/gui/treeviewer.java	call	{"statements":[{"expression":{"name":{"identifier":"invokeAndWait"},"scope":{"name":{"identifier":"SwingUtilities"}},"arguments":[{"type":{"name":{"identifier":"Runnable"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"showInDialog"},"arguments":[{"name":{"identifier":"viewer"}}]}}}]},"type":{},"name":{"identifier":"run"},"annotations":[{"name":{"identifier":"Override"}}]}]}]}},{"expression":{"name":{"identifier":"result"}}}]}
/gui/treeviewer.java	run	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"showInDialog"},"arguments":[{"name":{"identifier":"viewer"}}]}}}]}
/gui/treeviewer.java	save	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"JFrame"}}},"name":{"identifier":"dialog"},"type":{"name":{"identifier":"JFrame"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getContentPane"},"scope":{"name":{"identifier":"dialog"}}},"name":{"identifier":"contentPane"},"type":{"name":{"identifier":"Container"}}}]}},{"expression":{"name":{"identifier":"setBorder"},"scope":{"inner":{"expression":{"name":{"identifier":"contentPane"}},"type":{"name":{"identifier":"JComponent"}}}},"arguments":[{"name":{"identifier":"createEmptyBorder"},"scope":{"name":{"identifier":"BorderFactory"}},"arguments":[{"value":"10"},{"value":"10"},{"value":"10"},{"value":"10"}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"contentPane"}},"arguments":[{}]}},{"expression":{"name":{"identifier":"setBackground"},"scope":{"name":{"identifier":"contentPane"}},"arguments":[{"name":{"identifier":"white"},"scope":{"name":{"identifier":"Color"}}}]}},{"expression":{"name":{"identifier":"pack"},"scope":{"name":{"identifier":"dialog"}}}},{"expression":{"name":{"identifier":"setLocationRelativeTo"},"scope":{"name":{"identifier":"dialog"}},"arguments":[{}]}},{"expression":{"name":{"identifier":"dispose"},"scope":{"name":{"identifier":"dialog"}}}},{"expression":{"name":{"identifier":"saveImage"},"scope":{"name":{"identifier":"GraphicsSupport"}},"arguments":[{},{"name":{"identifier":"fileName"}}]}}]}
/gui/treeviewer.java	getBoundsOfNode	{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getNodeBounds"},"scope":{"name":{"identifier":"treeLayout"}}},"arguments":[{"name":{"identifier":"node"}}]}}]}
/gui/treeviewer.java	getText	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"treeTextProvider"}},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s"}},"value":{"name":{"identifier":"escapeWhitespace"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"s"}},{"value":"true"}]}}},{"expression":{"name":{"identifier":"s"}}}]}
/gui/treeviewer.java	getTreeTextProvider	{"statements":[{"expression":{"name":{"identifier":"treeTextProvider"}}}]}
/gui/treeviewer.java	setTreeTextProvider	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"treeTextProvider"},"scope":{}},"value":{"name":{"identifier":"treeTextProvider"}}}}]}
/gui/treeviewer.java	setFontSize	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fontSize"}},"value":{"name":{"identifier":"sz"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"font"}},"value":{"type":{"name":{"identifier":"Font"}},"arguments":[{"name":{"identifier":"fontName"}},{"name":{"identifier":"fontStyle"}},{"name":{"identifier":"fontSize"}}]}}}]}
/gui/treeviewer.java	setFontName	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fontName"}},"value":{"name":{"identifier":"name"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"font"}},"value":{"type":{"name":{"identifier":"Font"}},"arguments":[{"name":{"identifier":"fontName"}},{"name":{"identifier":"fontStyle"}},{"name":{"identifier":"fontSize"}}]}}}]}
/gui/treeviewer.java	addHighlightedNodes	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"highlightedNodes"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Tree"}}]}}}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"highlightedNodes"}},"arguments":[{"name":{"identifier":"nodes"}}]}}]}
/gui/treeviewer.java	removeHighlightedNodes	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"highlightedNodes"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getHighlightedNodeIndex"},"arguments":[{"name":{"identifier":"t"}}]},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"highlightedNodes"}},"arguments":[{"name":{"identifier":"i"}}]}}}]},"iterable":{"name":{"identifier":"nodes"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"Tree"}}}]}}]}}]}
/gui/treeviewer.java	isHighlighted	{"statements":[{"expression":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"getHighlightedNodeIndex"},"arguments":[{"name":{"identifier":"node"}}]},"right":{"value":"0"}}}]}
/gui/treeviewer.java	getHighlightedNodeIndex	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"highlightedNodes"}},"right":{}},"thenStmt":{"expression":{"operator":"MINUS","expression":{"value":"1"}}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"highlightedNodes"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{"name":{"identifier":"node"}}},"thenStmt":{"expression":{"name":{"identifier":"i"}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"highlightedNodes"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"operator":"MINUS","expression":{"value":"1"}}}]}
/gui/treeviewer.java	getFont	{"statements":[{"expression":{"name":{"identifier":"font"}}}]}
/gui/treeviewer.java	setFont	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"font"},"scope":{}},"value":{"name":{"identifier":"font"}}}}]}
/gui/treeviewer.java	getArcSize	{"statements":[{"expression":{"name":{"identifier":"arcSize"}}}]}
/gui/treeviewer.java	setArcSize	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arcSize"},"scope":{}},"value":{"name":{"identifier":"arcSize"}}}}]}
/gui/treeviewer.java	getBoxColor	{"statements":[{"expression":{"name":{"identifier":"boxColor"}}}]}
/gui/treeviewer.java	setBoxColor	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"boxColor"},"scope":{}},"value":{"name":{"identifier":"boxColor"}}}}]}
/gui/treeviewer.java	getHighlightedBoxColor	{"statements":[{"expression":{"name":{"identifier":"highlightedBoxColor"}}}]}
/gui/treeviewer.java	setHighlightedBoxColor	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"highlightedBoxColor"},"scope":{}},"value":{"name":{"identifier":"highlightedBoxColor"}}}}]}
/gui/treeviewer.java	getBorderColor	{"statements":[{"expression":{"name":{"identifier":"borderColor"}}}]}
/gui/treeviewer.java	setBorderColor	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"borderColor"},"scope":{}},"value":{"name":{"identifier":"borderColor"}}}}]}
/gui/treeviewer.java	getTextColor	{"statements":[{"expression":{"name":{"identifier":"textColor"}}}]}
/gui/treeviewer.java	setTextColor	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"textColor"},"scope":{}},"value":{"name":{"identifier":"textColor"}}}}]}
/gui/treeviewer.java	getTree	{"statements":[{"expression":{"name":{"identifier":"getTree"},"scope":{"name":{"identifier":"treeLayout"}}}}]}
/gui/treeviewer.java	setTree	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"root"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"treeLayout"},"scope":{}},"value":{}}},{"expression":{"name":{"identifier":"repaint"}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"value":"true"},"name":{"identifier":"useIdentity"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"treeLayout"},"scope":{}},"value":{"type":{"name":{"identifier":"TreeLayout"},"typeArguments":[{"name":{"identifier":"Tree"}}]},"arguments":[{"name":{"identifier":"getTreeLayoutAdaptor"},"arguments":[{"name":{"identifier":"root"}}]},{"type":{"name":{"identifier":"VariableExtentProvide"},"scope":{"name":{"identifier":"TreeViewer"}}},"arguments":[{}]},{"type":{"name":{"identifier":"DefaultConfiguration"},"typeArguments":[{"name":{"identifier":"Tree"}}]},"arguments":[{"name":{"identifier":"gapBetweenLevels"}},{"name":{"identifier":"gapBetweenNodes"}}]},{"name":{"identifier":"useIdentity"}}]}}},{"expression":{"name":{"identifier":"updatePreferredSize"}}}]}}]}
/gui/treeviewer.java	getTreeLayoutAdaptor	{"statements":[{"expression":{"type":{"name":{"identifier":"TreeLayoutAdaptor"}},"arguments":[{"name":{"identifier":"root"}}]}}]}
/gui/treeviewer.java	getScale	{"statements":[{"expression":{"name":{"identifier":"scale"}}}]}
/gui/treeviewer.java	setScale	{"statements":[{"condition":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"scale"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scale"}},"value":{"value":"1"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"scale"},"scope":{}},"value":{"name":{"identifier":"scale"}}}},{"expression":{"name":{"identifier":"updatePreferredSize"}}}]}
/gui/treeviewer.java	setRuleNames	{"statements":[{"expression":{"name":{"identifier":"setTreeTextProvider"},"arguments":[{"type":{"name":{"identifier":"DefaultTreeTextProvider"}},"arguments":[{"name":{"identifier":"ruleNames"}}]}]}}]}
/gui/treeviewer.java	toString	{"statements":[{"expression":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"viewer"}},"arguments":[{"expression":{"name":{"identifier":"getUserObject"},"scope":{}},"type":{"name":{"identifier":"Tree"}}}]}}]}
/gui/treeviewer.java	getIconWidth	{"statements":[{"expression":{"value":"0"}}]}
/gui/treeviewer.java	getIconHeight	{"statements":[{"expression":{"value":"0"}}]}
/gui/treeviewer.java	paintIcon	{}
/gui/testrig.java	main	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TestRig"}},"arguments":[{"name":{"identifier":"args"}}]},"name":{"identifier":"testRig"},"type":{"name":{"identifier":"TestRig"}}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"args"}}},"right":{"value":"2"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"testRig"}}}}]}}]}
/gui/testrig.java	process	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"grammarName"}},"right":{"value":"Lexer"}},"name":{"identifier":"lexerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getContextClassLoader"},"scope":{"name":{"identifier":"currentThread"},"scope":{"name":{"identifier":"Thread"}}}},"name":{"identifier":"cl"},"type":{"name":{"identifier":"ClassLoader"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"lexerClass"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"Lexer"}}}]}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerClass"}},"value":{"name":{"identifier":"asSubclass"},"scope":{"name":{"identifier":"loadClass"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"lexerName"}}]},"arguments":[{"type":{"name":{"identifier":"Lexer"}}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerName"}},"value":{"name":{"identifier":"grammarName"}}}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerClass"}},"value":{"name":{"identifier":"asSubclass"},"scope":{"name":{"identifier":"loadClass"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"lexerName"}}]},"arguments":[{"type":{"name":{"identifier":"Lexer"}}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Can't load "},"right":{"name":{"identifier":"lexerName"}}},"right":{"value":" as lexer or parser"}}]}},{}]},"parameter":{"isVarArgs":"false","name":{"identifier":"cnfe2"},"type":{"name":{"identifier":"ClassNotFoundException"}}}}]}]},"parameter":{"isVarArgs":"false","name":{"identifier":"cnfe"},"type":{"name":{"identifier":"ClassNotFoundException"},"scope":{"name":{"identifier":"lang"},"scope":{"name":{"identifier":"java"}}}}}}]},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"lexerClass"}},"arguments":[{"type":{"name":{"identifier":"CharStream"}}}]},"name":{"identifier":"lexerCtor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"Lexer"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"lexerCtor"}},"arguments":[{"expression":{},"type":{"name":{"identifier":"CharStream"}}}]},"name":{"identifier":"lexer"},"type":{"name":{"identifier":"Lexer"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"parserClass"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"Parser"}}}]}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"parser"},"type":{"name":{"identifier":"Parser"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"startRuleName"}},"arguments":[{"name":{"identifier":"LEXER_START_RULE_NAME"}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"grammarName"}},"right":{"value":"Parser"}},"name":{"identifier":"parserName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parserClass"}},"value":{"name":{"identifier":"asSubclass"},"scope":{"name":{"identifier":"loadClass"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"parserName"}}]},"arguments":[{"type":{"name":{"identifier":"Parser"}}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"parserClass"}},"arguments":[{"type":{"name":{"identifier":"TokenStream"}}}]},"name":{"identifier":"parserCtor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"Parser"}}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parser"}},"value":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"parserCtor"}},"arguments":[{"expression":{},"type":{"name":{"identifier":"TokenStream"}}}]}}}]}},{"expression":{"variables":[{"initializer":{"inner":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"encoding"}},"right":{}},"elseExpr":{"name":{"identifier":"forName"},"scope":{"name":{"identifier":"Charset"}},"arguments":[{"name":{"identifier":"encoding"}}]},"thenExpr":{"name":{"identifier":"defaultCharset"},"scope":{"name":{"identifier":"Charset"}}}}},"name":{"identifier":"charset"},"type":{"name":{"identifier":"Charset"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"inputFiles"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"fromStream"},"scope":{"name":{"identifier":"CharStreams"}},"arguments":[{"name":{"identifier":"in"},"scope":{"name":{"identifier":"System"}}},{"name":{"identifier":"charset"}}]},"name":{"identifier":"charStream"},"type":{"name":{"identifier":"CharStream"}}}]}},{"expression":{"name":{"identifier":"process"},"arguments":[{"name":{"identifier":"lexer"}},{"name":{"identifier":"parserClass"}},{"name":{"identifier":"parser"}},{"name":{"identifier":"charStream"}}]}},{}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"fromPath"},"scope":{"name":{"identifier":"CharStreams"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"Paths"}},"arguments":[{"name":{"identifier":"inputFile"}}]},{"name":{"identifier":"charset"}}]},"name":{"identifier":"charStream"},"type":{"name":{"identifier":"CharStream"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"inputFiles"}}},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"inputFile"}}]}}]}},{"expression":{"name":{"identifier":"process"},"arguments":[{"name":{"identifier":"lexer"}},{"name":{"identifier":"parserClass"}},{"name":{"identifier":"parser"}},{"name":{"identifier":"charStream"}}]}}]},"iterable":{"name":{"identifier":"inputFiles"}},"variable":{"variables":[{"name":{"identifier":"inputFile"},"type":{"name":{"identifier":"String"}}}]}}]}
/gui/testrig.java	process	{"statements":[{"expression":{"name":{"identifier":"setInputStream"},"scope":{"name":{"identifier":"lexer"}},"arguments":[{"name":{"identifier":"input"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTokenStream"}},"arguments":[{"name":{"identifier":"lexer"}}]},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"CommonTokenStream"}}}]}},{"expression":{"name":{"identifier":"fill"},"scope":{"name":{"identifier":"tokens"}}}},{"condition":{"name":{"identifier":"showTokens"}},"thenStmt":{"statements":[{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"tok"}},"type":{"name":{"identifier":"CommonToken"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"tok"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"toString"},"scope":{"inner":{"expression":{"name":{"identifier":"tok"}},"type":{"name":{"identifier":"CommonToken"}}}},"arguments":[{"name":{"identifier":"lexer"}}]}]}}]}}]},"iterable":{"name":{"identifier":"getTokens"},"scope":{"name":{"identifier":"tokens"}}},"variable":{"variables":[{"name":{"identifier":"tok"},"type":{"name":{"identifier":"Token"}}}]}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"startRuleName"}},"arguments":[{"name":{"identifier":"LEXER_START_RULE_NAME"}}]},"thenStmt":{}},{"condition":{"name":{"identifier":"diagnostics"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addErrorListener"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"type":{"name":{"identifier":"DiagnosticErrorListener"}}}]}},{"expression":{"name":{"identifier":"setPredictionMode"},"scope":{"name":{"identifier":"getInterpreter"},"scope":{"name":{"identifier":"parser"}}},"arguments":[{"name":{"identifier":"LL_EXACT_AMBIG_DETECTION"},"scope":{"name":{"identifier":"PredictionMode"}}}]}}]}},{"condition":{"operator":"OR","left":{"operator":"OR","left":{"name":{"identifier":"printTree"}},"right":{"name":{"identifier":"gui"}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"psFile"}},"right":{}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setBuildParseTree"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"value":"true"}]}}]}},{"condition":{"name":{"identifier":"SLL"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setPredictionMode"},"scope":{"name":{"identifier":"getInterpreter"},"scope":{"name":{"identifier":"parser"}}},"arguments":[{"name":{"identifier":"SLL"},"scope":{"name":{"identifier":"PredictionMode"}}}]}}]}},{"expression":{"name":{"identifier":"setTokenStream"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"tokens"}}]}},{"expression":{"name":{"identifier":"setTrace"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"trace"}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMethod"},"scope":{"name":{"identifier":"parserClass"}},"arguments":[{"name":{"identifier":"startRuleName"}}]},"name":{"identifier":"startRule"},"type":{"name":{"identifier":"Method"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"invoke"},"scope":{"name":{"identifier":"startRule"}},"arguments":[{"name":{"identifier":"parser"}},{"expression":{},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"Object"}}}}]},"type":{"name":{"identifier":"ParserRuleContext"}}},"name":{"identifier":"tree"},"type":{"name":{"identifier":"ParserRuleContext"}}}]}},{"condition":{"name":{"identifier":"printTree"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"tree"}},"arguments":[{"name":{"identifier":"parser"}}]}]}}]}},{"condition":{"name":{"identifier":"gui"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"inspect"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"tree"}},{"name":{"identifier":"parser"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"psFile"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"save"},"scope":{"name":{"identifier":"Trees"}},"arguments":[{"name":{"identifier":"tree"}},{"name":{"identifier":"parser"}},{"name":{"identifier":"psFile"}}]}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"No method for rule "},"right":{"name":{"identifier":"startRuleName"}}},"right":{"value":" or it has arguments"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"nsme"},"type":{"name":{"identifier":"NoSuchMethodException"}}}}]}]}
/gui/trees.java	inspect	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreeViewer"}},"arguments":[{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"t"}}]},"name":{"identifier":"viewer"},"type":{"name":{"identifier":"TreeViewer"}}}]}},{"expression":{"name":{"identifier":"open"},"scope":{"name":{"identifier":"viewer"}}}}]}
/gui/trees.java	inspect	{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"parser"}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getRuleNames"},"scope":{"name":{"identifier":"parser"}}}]}},"name":{"identifier":"ruleNames"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"inspect"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}}]}}]}
/gui/trees.java	save	{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"parser"}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getRuleNames"},"scope":{"name":{"identifier":"parser"}}}]}},"name":{"identifier":"ruleNames"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"save"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"fileName"}}]}}]}
/gui/trees.java	save	{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"parser"}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"getRuleNames"},"scope":{"name":{"identifier":"parser"}}}]}},"name":{"identifier":"ruleNames"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"save"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"fontName"}},{"name":{"identifier":"fontSize"}}]}}]}
/gui/trees.java	save	{"statements":[{"expression":{"name":{"identifier":"writePS"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"fileName"}}]}}]}
/gui/trees.java	save	{"statements":[{"expression":{"name":{"identifier":"writePS"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"fontName"}},{"name":{"identifier":"fontSize"}}]}}]}
/gui/trees.java	getPS	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TreePostScriptGenerator"}},"arguments":[{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"t"}},{"name":{"identifier":"fontName"}},{"name":{"identifier":"fontSize"}}]},"name":{"identifier":"psgen"},"type":{"name":{"identifier":"TreePostScriptGenerator"}}}]}},{"expression":{"name":{"identifier":"getPS"},"scope":{"name":{"identifier":"psgen"}}}}]}
/gui/trees.java	getPS	{"statements":[{"expression":{"name":{"identifier":"getPS"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"value":"Helvetica"},{"value":"11"}]}}]}
/gui/trees.java	writePS	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPS"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"fontName"}},{"name":{"identifier":"fontSize"}}]},"name":{"identifier":"ps"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"FileWriter"}},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"f"},"type":{"name":{"identifier":"FileWriter"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BufferedWriter"}},"arguments":[{"name":{"identifier":"f"}}]},"name":{"identifier":"bw"},"type":{"name":{"identifier":"BufferedWriter"}}}]}},{"finallyBlock":{"statements":[{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"bw"}}}}]},"tryBlock":{"statements":[{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"bw"}},"arguments":[{"name":{"identifier":"ps"}}]}}]}}]}
/gui/trees.java	writePS	{"statements":[{"expression":{"name":{"identifier":"writePS"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"ruleNames"}},{"name":{"identifier":"fileName"}},{"value":"Helvetica"},{"value":"11"}]}}]}
/gui/trees.java	toStringTree	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"thenStmt":{"expression":{"value":"null"}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"escapeWhitespace"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nodeTextProvider"}},"arguments":[{"name":{"identifier":"t"}}]},{"value":"false"}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"t"}}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"s"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"("}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s"}},"value":{"name":{"identifier":"escapeWhitespace"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nodeTextProvider"}},"arguments":[{"name":{"identifier":"t"}}]},{"value":"false"}]}}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"s"}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":" "}]}},{"body":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":" "}]}}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"toStringTree"},"arguments":[{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"i"}}]},{"name":{"identifier":"nodeTextProvider"}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"t"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":")"}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/gui/graphicssupport.java	saveImage	{"statements":[{"condition":{"operator":"OR","left":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":".ps"}]},"right":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":".eps"}]}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBounds"},"scope":{"name":{"identifier":"comp"}}},"name":{"identifier":"rect"},"type":{"name":{"identifier":"Rectangle"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BufferedImage"}},"arguments":[{"name":{"identifier":"width"},"scope":{"name":{"identifier":"rect"}}},{"name":{"identifier":"height"},"scope":{"name":{"identifier":"rect"}}},{"name":{"identifier":"TYPE_INT_RGB"},"scope":{"name":{"identifier":"BufferedImage"}}}]},"name":{"identifier":"image"},"type":{"name":{"identifier":"BufferedImage"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getGraphics"},"scope":{"name":{"identifier":"image"}}},"type":{"name":{"identifier":"Graphics2D"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Graphics2D"}}}]}},{"expression":{"name":{"identifier":"setColor"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"WHITE"},"scope":{"name":{"identifier":"Color"}}}]}},{"expression":{"name":{"identifier":"fill"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"rect"}}]}},{"expression":{"name":{"identifier":"paint"},"scope":{"name":{"identifier":"comp"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":"."}]},"right":{"value":"1"}}]},"name":{"identifier":"extension"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"ImageIO"}},"arguments":[{"name":{"identifier":"image"}},{"name":{"identifier":"extension"}},{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"}}]}]},"name":{"identifier":"result"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"result"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"value":"Now imager for "},"right":{"name":{"identifier":"extension"}}}]}}]}},{"expression":{"name":{"identifier":"dispose"},"scope":{"name":{"identifier":"g"}}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"PRINTABLE"},"scope":{"name":{"identifier":"SERVICE_FORMATTED"},"scope":{"name":{"identifier":"DocFlavor"}}}},"name":{"identifier":"flavor"},"type":{"name":{"identifier":"DocFlavor"}}}]}},{"expression":{"variables":[{"initializer":{"value":"application/postscript"},"name":{"identifier":"mimeType"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"lookupStreamPrintServiceFactories"},"scope":{"name":{"identifier":"StreamPrintServiceFactory"}},"arguments":[{"name":{"identifier":"flavor"}},{"name":{"identifier":"mimeType"}}]},"name":{"identifier":"factories"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"StreamPrintServiceFactory"}}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"factories"}}]}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"factories"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"FileOutputStream"}},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"out"},"type":{"name":{"identifier":"FileOutputStream"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPrintService"},"scope":{"index":{"value":"0"},"name":{"name":{"identifier":"factories"}}},"arguments":[{"name":{"identifier":"out"}}]},"name":{"identifier":"service"},"type":{"name":{"identifier":"PrintService"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"SimpleDoc"}},"arguments":[{"type":{"name":{"identifier":"Printable"}},"anonymousClassBody":[{"body":{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"page"}},"right":{"value":"1"}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"Graphics2D"}}},"name":{"identifier":"g2"},"type":{"name":{"identifier":"Graphics2D"}}}]}},{"expression":{"name":{"identifier":"translate"},"scope":{"name":{"identifier":"g2"}},"arguments":[{"operator":"DIVIDE","left":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"pf"}}},"right":{"name":{"identifier":"getImageableWidth"},"scope":{"name":{"identifier":"pf"}}}}},"right":{"value":"2"}},{"operator":"DIVIDE","left":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"pf"}}},"right":{"name":{"identifier":"getImageableHeight"},"scope":{"name":{"identifier":"pf"}}}}},"right":{"value":"2"}}]}},{"condition":{"operator":"OR","left":{"operator":"GREATER","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"comp"}}},"right":{"name":{"identifier":"getImageableWidth"},"scope":{"name":{"identifier":"pf"}}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"comp"}}},"right":{"name":{"identifier":"getImageableHeight"},"scope":{"name":{"identifier":"pf"}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"DIVIDE","left":{"name":{"identifier":"getImageableWidth"},"scope":{"name":{"identifier":"pf"}}},"right":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"comp"}}},"right":{"value":"1"}}}},"name":{"identifier":"sf1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"operator":"DIVIDE","left":{"name":{"identifier":"getImageableHeight"},"scope":{"name":{"identifier":"pf"}}},"right":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"comp"}}},"right":{"value":"1"}}}},"name":{"identifier":"sf2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"sf1"}},{"name":{"identifier":"sf2"}}]},"name":{"identifier":"s"},"type":{"type":"DOUBLE"}}]}},{"expression":{"name":{"identifier":"scale"},"scope":{"name":{"identifier":"g2"}},"arguments":[{"name":{"identifier":"s"}},{"name":{"identifier":"s"}}]}}]}},{"expression":{"name":{"identifier":"paint"},"scope":{"name":{"identifier":"comp"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"PAGE_EXISTS"},"scope":{"name":{"identifier":"Printable"}}}}]},"thenStmt":{"expression":{"name":{"identifier":"NO_SUCH_PAGE"},"scope":{"name":{"identifier":"Printable"}}}}}]},"type":{"type":"INT"},"name":{"identifier":"print"},"parameters":[{"isVarArgs":"false","name":{"identifier":"g"},"type":{"name":{"identifier":"Graphics"}}},{"isVarArgs":"false","name":{"identifier":"pf"},"type":{"name":{"identifier":"PageFormat"}}},{"isVarArgs":"false","name":{"identifier":"page"},"type":{"type":"INT"}}],"annotations":[{"name":{"identifier":"Override"}}]}]},{"name":{"identifier":"flavor"}},{}]},"name":{"identifier":"doc"},"type":{"name":{"identifier":"SimpleDoc"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createPrintJob"},"scope":{"name":{"identifier":"service"}}},"name":{"identifier":"job"},"type":{"name":{"identifier":"DocPrintJob"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashPrintRequestAttributeSet"}}},"name":{"identifier":"attributes"},"type":{"name":{"identifier":"PrintRequestAttributeSet"}}}]}},{"expression":{"name":{"identifier":"print"},"scope":{"name":{"identifier":"job"}},"arguments":[{"name":{"identifier":"doc"}},{"name":{"identifier":"attributes"}}]}},{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"out"}}}}]}}]}}]}
/gui/graphicssupport.java	print	{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"page"}},"right":{"value":"1"}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"Graphics2D"}}},"name":{"identifier":"g2"},"type":{"name":{"identifier":"Graphics2D"}}}]}},{"expression":{"name":{"identifier":"translate"},"scope":{"name":{"identifier":"g2"}},"arguments":[{"operator":"DIVIDE","left":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"pf"}}},"right":{"name":{"identifier":"getImageableWidth"},"scope":{"name":{"identifier":"pf"}}}}},"right":{"value":"2"}},{"operator":"DIVIDE","left":{"inner":{"operator":"MINUS","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"pf"}}},"right":{"name":{"identifier":"getImageableHeight"},"scope":{"name":{"identifier":"pf"}}}}},"right":{"value":"2"}}]}},{"condition":{"operator":"OR","left":{"operator":"GREATER","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"comp"}}},"right":{"name":{"identifier":"getImageableWidth"},"scope":{"name":{"identifier":"pf"}}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"comp"}}},"right":{"name":{"identifier":"getImageableHeight"},"scope":{"name":{"identifier":"pf"}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"DIVIDE","left":{"name":{"identifier":"getImageableWidth"},"scope":{"name":{"identifier":"pf"}}},"right":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"comp"}}},"right":{"value":"1"}}}},"name":{"identifier":"sf1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"operator":"DIVIDE","left":{"name":{"identifier":"getImageableHeight"},"scope":{"name":{"identifier":"pf"}}},"right":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"getHeight"},"scope":{"name":{"identifier":"comp"}}},"right":{"value":"1"}}}},"name":{"identifier":"sf2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"sf1"}},{"name":{"identifier":"sf2"}}]},"name":{"identifier":"s"},"type":{"type":"DOUBLE"}}]}},{"expression":{"name":{"identifier":"scale"},"scope":{"name":{"identifier":"g2"}},"arguments":[{"name":{"identifier":"s"}},{"name":{"identifier":"s"}}]}}]}},{"expression":{"name":{"identifier":"paint"},"scope":{"name":{"identifier":"comp"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"name":{"identifier":"PAGE_EXISTS"},"scope":{"name":{"identifier":"Printable"}}}}]},"thenStmt":{"expression":{"name":{"identifier":"NO_SUCH_PAGE"},"scope":{"name":{"identifier":"Printable"}}}}}]}
/gui/postscriptdocument.java	getPS	{"statements":[{"expression":{"name":{"identifier":"close"}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"header"}},"right":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"ps"}}}}}]}
/gui/postscriptdocument.java	boundingBox	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"boundingBoxWidth"}},"value":{"name":{"identifier":"w"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"boundingBoxHeight"}},"value":{"name":{"identifier":"h"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"boundingBox"}},"value":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"US"},"scope":{"name":{"identifier":"Locale"}}},{"value":"%%%%BoundingBox: %d %d %d %d\n"},{"value":"0"},{"value":"0"},{"name":{"identifier":"boundingBoxWidth"}},{"name":{"identifier":"boundingBoxHeight"}}]}}}]}
/gui/postscriptdocument.java	close	{"statements":[{"condition":{"name":{"identifier":"closed"}},"thenStmt":{}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"value":"%%Trailer\n"}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"closed"}},"value":{"value":"true"}}}]}
/gui/postscriptdocument.java	header	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"b"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"b"}},"arguments":[{"value":"%!PS-Adobe-3.0 EPSF-3.0\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"b"}},"arguments":[{"name":{"identifier":"boundingBox"}}]},"arguments":[{"value":"\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"b"}},"arguments":[{"value":"0.3 setlinewidth\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"b"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"%% x y w h highlight\n"},"right":{"value":"/highlight {\n"}},"right":{"value":"        4 dict begin\n"}},"right":{"value":"        /h exch def\n"}},"right":{"value":"        /w exch def\n"}},"right":{"value":"        /y exch def\n"}},"right":{"value":"        /x exch def\n"}},"right":{"value":"        gsave\n"}},"right":{"value":"        newpath\n"}},"right":{"value":"        x y moveto\n"}},"right":{"value":"        0 h rlineto     % up to left corner\n"}},"right":{"value":"        w 0 rlineto     % to upper right corner\n"}},"right":{"value":"        0 h neg rlineto % to lower right corner\n"}},"right":{"value":"        w neg 0 rlineto % back home to lower left corner\n"}},"right":{"value":"        closepath\n"}},"right":{"value":"        .95 .83 .82 setrgbcolor\n"}},"right":{"value":"        fill\n"}},"right":{"value":"        grestore\n"}},"right":{"value":"        end\n"}},"right":{"value":"} def\n"}}]}},{"expression":{"name":{"identifier":"b"}}}]}
/gui/postscriptdocument.java	setFont	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fontMetrics"},"scope":{}},"value":{"type":{"name":{"identifier":"SystemFontMetrics"}},"arguments":[{"name":{"identifier":"fontName"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fontName"},"scope":{}},"value":{"name":{"identifier":"getPSName"},"scope":{"name":{"identifier":"getFont"},"scope":{"name":{"identifier":"fontMetrics"}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fontSize"},"scope":{}},"value":{"name":{"identifier":"fontSize"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"POSTSCRIPT_FONT_NAMES"}},"arguments":[{"name":{"identifier":"fontName"},"scope":{}}]},"name":{"identifier":"psname"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"psname"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"psname"}},"value":{"name":{"identifier":"fontName"},"scope":{}}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"US"},"scope":{"name":{"identifier":"Locale"}}},{"value":"/%s findfont %d scalefont setfont\n"},{"name":{"identifier":"psname"}},{"name":{"identifier":"fontSize"}}]}]}}]}
/gui/postscriptdocument.java	lineWidth	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lineWidth"}},"value":{"name":{"identifier":"w"}}}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"name":{"identifier":"w"}}]},"arguments":[{"value":" setlinewidth\n"}]}}]}
/gui/postscriptdocument.java	move	{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"US"},"scope":{"name":{"identifier":"Locale"}}},{"value":"%1.3f %1.3f moveto\n"},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}]}}]}
/gui/postscriptdocument.java	lineto	{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"US"},"scope":{"name":{"identifier":"Locale"}}},{"value":"%1.3f %1.3f lineto\n"},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}]}}]}
/gui/postscriptdocument.java	line	{"statements":[{"expression":{"name":{"identifier":"move"},"arguments":[{"name":{"identifier":"x1"}},{"name":{"identifier":"y1"}}]}},{"expression":{"name":{"identifier":"lineto"},"arguments":[{"name":{"identifier":"x2"}},{"name":{"identifier":"y2"}}]}}]}
/gui/postscriptdocument.java	rect	{"statements":[{"expression":{"name":{"identifier":"line"},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"y"}},{"name":{"identifier":"x"}},{"operator":"PLUS","left":{"name":{"identifier":"y"}},"right":{"name":{"identifier":"height"}}}]}},{"expression":{"name":{"identifier":"line"},"arguments":[{"name":{"identifier":"x"}},{"operator":"PLUS","left":{"name":{"identifier":"y"}},"right":{"name":{"identifier":"height"}}},{"operator":"PLUS","left":{"name":{"identifier":"x"}},"right":{"name":{"identifier":"width"}}},{"operator":"PLUS","left":{"name":{"identifier":"y"}},"right":{"name":{"identifier":"height"}}}]}},{"expression":{"name":{"identifier":"line"},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"x"}},"right":{"name":{"identifier":"width"}}},{"operator":"PLUS","left":{"name":{"identifier":"y"}},"right":{"name":{"identifier":"height"}}},{"operator":"PLUS","left":{"name":{"identifier":"x"}},"right":{"name":{"identifier":"width"}}},{"name":{"identifier":"y"}}]}},{"expression":{"name":{"identifier":"line"},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"x"}},"right":{"name":{"identifier":"width"}}},{"name":{"identifier":"y"}},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}}]}
/gui/postscriptdocument.java	highlight	{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"US"},"scope":{"name":{"identifier":"Locale"}}},{"value":"%1.3f %1.3f %1.3f %1.3f highlight\n"},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}},{"name":{"identifier":"width"}},{"name":{"identifier":"height"}}]}]}}]}
/gui/postscriptdocument.java	stroke	{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"value":"stroke\n"}]}}]}
/gui/postscriptdocument.java	text	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"selector":{"name":{"identifier":"c"}},"entries":[{"label":{"value":"\\"}},{"label":{"value":"("}},{"label":{"value":")"},"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\\"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"c"}}]}},{}]},{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"c"}}]}},{}]}]}]},"iterable":{"name":{"identifier":"toCharArray"},"scope":{"name":{"identifier":"s"}}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"type":"CHAR"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}},{"expression":{"name":{"identifier":"move"},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"ps"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"US"},"scope":{"name":{"identifier":"Locale"}}},{"value":"(%s) show\n"},{"name":{"identifier":"s"}}]}]}},{"expression":{"name":{"identifier":"stroke"}}}]}
/gui/postscriptdocument.java	getWidth	{"statements":[{"expression":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"fontMetrics"}},"arguments":[{"name":{"identifier":"c"}},{"name":{"identifier":"fontSize"}}]}}]}
/gui/postscriptdocument.java	getWidth	{"statements":[{"expression":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"fontMetrics"}},"arguments":[{"name":{"identifier":"s"}},{"name":{"identifier":"fontSize"}}]}}]}
/gui/postscriptdocument.java	getLineHeight	{"statements":[{"expression":{"name":{"identifier":"getLineHeight"},"scope":{"name":{"identifier":"fontMetrics"}},"arguments":[{"name":{"identifier":"fontSize"}}]}}]}
/gui/postscriptdocument.java	getFontSize	{"statements":[{"expression":{"name":{"identifier":"fontSize"}}}]}
/gui/jfilechooserconfirmoverwrite.java	approveSelection	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSelectedFile"}},"name":{"identifier":"selectedFile"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"selectedFile"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"showConfirmDialog"},"scope":{"name":{"identifier":"JOptionPane"}},"arguments":[{},{"value":"Overwrite existing file?"},{"value":"Overwrite?"},{"name":{"identifier":"YES_NO_OPTION"},"scope":{"name":{"identifier":"JOptionPane"}}}]},"name":{"identifier":"answer"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"answer"}},"right":{"name":{"identifier":"YES_OPTION"},"scope":{"name":{"identifier":"JOptionPane"}}}},"thenStmt":{"statements":[{}]}}]}},{"expression":{"name":{"identifier":"approveSelection"},"scope":{}}}]}
/gui/treepostscriptgenerator.java	getWidth	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"getWidth"},"scope":{"name":{"identifier":"doc"}},"arguments":[{"name":{"identifier":"s"}}]},"right":{"operator":"MULTIPLY","left":{"name":{"identifier":"nodeWidthPadding"}},"right":{"value":"2"}}}}]}
/gui/treepostscriptgenerator.java	getHeight	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getLineHeight"},"scope":{"name":{"identifier":"doc"}}},"right":{"name":{"identifier":"nodeHeightPaddingAbove"}}},"right":{"name":{"identifier":"nodeHeightPaddingBelow"}}},"name":{"identifier":"h"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"split"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"\n"}]},"name":{"identifier":"lines"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"operator":"MULTIPLY","left":{"name":{"identifier":"h"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"lines"}}}}}]}
/gui/treepostscriptgenerator.java	getTreeLayoutAdaptor	{"statements":[{"expression":{"type":{"name":{"identifier":"TreeLayoutAdaptor"}},"arguments":[{"name":{"identifier":"root"}}]}}]}
/gui/treepostscriptgenerator.java	getPS	{"statements":[{"expression":{"name":{"identifier":"generateEdges"},"arguments":[{"name":{"identifier":"getRoot"},"scope":{"name":{"identifier":"getTree"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"generateNode"},"arguments":[{"name":{"identifier":"node"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"getNodeBounds"},"scope":{"name":{"identifier":"treeLayout"}}}},"variable":{"variables":[{"name":{"identifier":"node"},"type":{"name":{"identifier":"Tree"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSize"},"scope":{"name":{"identifier":"getBounds"},"scope":{"name":{"identifier":"getBounds"},"scope":{"name":{"identifier":"treeLayout"}}}}},"name":{"identifier":"size"},"type":{"name":{"identifier":"Dimension"}}}]}},{"expression":{"name":{"identifier":"boundingBox"},"scope":{"name":{"identifier":"doc"}},"arguments":[{"name":{"identifier":"width"},"scope":{"name":{"identifier":"size"}}},{"name":{"identifier":"height"},"scope":{"name":{"identifier":"size"}}}]}},{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"doc"}}}},{"expression":{"name":{"identifier":"getPS"},"scope":{"name":{"identifier":"doc"}}}}]}
/gui/treepostscriptgenerator.java	generateEdges	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLeaf"},"scope":{"name":{"identifier":"getTree"}},"arguments":[{"name":{"identifier":"parent"}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"parent"}}]},"name":{"identifier":"parentBounds"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterX"},"scope":{"name":{"identifier":"parentBounds"}}},"name":{"identifier":"x1"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"parentBounds"}}},"name":{"identifier":"y1"},"type":{"type":"DOUBLE"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"child"}}]},"name":{"identifier":"childBounds"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCenterX"},"scope":{"name":{"identifier":"childBounds"}}},"name":{"identifier":"x2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMaxY"},"scope":{"name":{"identifier":"childBounds"}}},"name":{"identifier":"y2"},"type":{"type":"DOUBLE"}}]}},{"expression":{"name":{"identifier":"line"},"scope":{"name":{"identifier":"doc"}},"arguments":[{"name":{"identifier":"x1"}},{"name":{"identifier":"y1"}},{"name":{"identifier":"x2"}},{"name":{"identifier":"y2"}}]}},{"expression":{"name":{"identifier":"generateEdges"},"arguments":[{"name":{"identifier":"child"}}]}}]},"iterable":{"name":{"identifier":"getChildren"},"arguments":[{"name":{"identifier":"parent"}}]},"variable":{"variables":[{"name":{"identifier":"child"},"type":{"name":{"identifier":"Tree"}}}]}}]}}]}
/gui/treepostscriptgenerator.java	generateNode	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"split"},"scope":{"name":{"identifier":"getText"},"arguments":[{"name":{"identifier":"t"}}]},"arguments":[{"value":"\n"}]},"name":{"identifier":"lines"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getBoundsOfNode"},"arguments":[{"name":{"identifier":"t"}}]},"name":{"identifier":"box"},"type":{"name":{"identifier":"Double"},"scope":{"name":{"identifier":"Rectangle2D"}}}}]}},{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"ErrorNode"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"highlight"},"scope":{"name":{"identifier":"doc"}},"arguments":[{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}},{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}},{"name":{"identifier":"width"},"scope":{"name":{"identifier":"box"}}},{"name":{"identifier":"height"},"scope":{"name":{"identifier":"box"}}}]}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"x"},"scope":{"name":{"identifier":"box"}}},"right":{"name":{"identifier":"nodeWidthPadding"}}},"name":{"identifier":"x"},"type":{"type":"DOUBLE"}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"y"},"scope":{"name":{"identifier":"box"}}},"right":{"name":{"identifier":"nodeHeightPaddingBelow"}}},"name":{"identifier":"y"},"type":{"type":"DOUBLE"}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"text"},"scope":{"name":{"identifier":"doc"}},"arguments":[{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"lines"}}},{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"y"}},"value":{"name":{"identifier":"getLineHeight"},"scope":{"name":{"identifier":"doc"}}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"lines"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/gui/treepostscriptgenerator.java	getTree	{"statements":[{"expression":{"name":{"identifier":"getTree"},"scope":{"name":{"identifier":"treeLayout"}}}}]}
/gui/treepostscriptgenerator.java	getChildren	{"statements":[{"expression":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"getTree"}},"arguments":[{"name":{"identifier":"parent"}}]}}]}
/gui/treepostscriptgenerator.java	getBoundsOfNode	{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getNodeBounds"},"scope":{"name":{"identifier":"treeLayout"}}},"arguments":[{"name":{"identifier":"node"}}]}}]}
/gui/treepostscriptgenerator.java	getText	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"treeTextProvider"}},"arguments":[{"name":{"identifier":"tree"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s"}},"value":{"name":{"identifier":"escapeWhitespace"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"s"}},{"value":"false"}]}}},{"expression":{"name":{"identifier":"s"}}}]}
/gui/treepostscriptgenerator.java	getTreeTextProvider	{"statements":[{"expression":{"name":{"identifier":"treeTextProvider"}}}]}
/gui/treepostscriptgenerator.java	setTreeTextProvider	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"treeTextProvider"},"scope":{}},"value":{"name":{"identifier":"treeTextProvider"}}}}]}
/gui/basicfontmetrics.java	getWidth	{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"w"},"type":{"type":"DOUBLE"}}]}},{"body":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"w"}},"value":{"name":{"identifier":"getWidth"},"arguments":[{"name":{"identifier":"c"}},{"name":{"identifier":"fontSize"}}]}}}]},"iterable":{"name":{"identifier":"toCharArray"},"scope":{"name":{"identifier":"s"}}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"type":"CHAR"}}]}},{"expression":{"name":{"identifier":"w"}}}]}
/gui/basicfontmetrics.java	getWidth	{"statements":[{"condition":{"operator":"OR","left":{"operator":"GREATER","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"MAX_CHAR"}}},"right":{"operator":"EQUALS","left":{"index":{"name":{"identifier":"c"}},"name":{"name":{"identifier":"widths"}}},"right":{"value":"0"}}},"thenStmt":{"expression":{"operator":"DIVIDE","left":{"index":{"value":"m"},"name":{"name":{"identifier":"widths"}}},"right":{"value":"1000.0"}}}},{"expression":{"operator":"MULTIPLY","left":{"operator":"DIVIDE","left":{"index":{"name":{"identifier":"c"}},"name":{"name":{"identifier":"widths"}}},"right":{"value":"1000.0"}},"right":{"name":{"identifier":"fontSize"}}}}]}
/gui/basicfontmetrics.java	getLineHeight	{"statements":[{"expression":{"operator":"MULTIPLY","left":{"operator":"DIVIDE","left":{"name":{"identifier":"maxCharHeight"}},"right":{"value":"1000.0"}},"right":{"name":{"identifier":"fontSize"}}}}]}
/misc/charsupport.java	getANTLRCharLiteralForChar	{"statements":[{"expression":{"variables":[{"name":{"identifier":"result"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"LESS","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"MIN_CHAR_VALUE"},"scope":{"name":{"identifier":"Lexer"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"LESS","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"ANTLRLiteralCharValueEscape"}}}},"elseExpr":{},"thenExpr":{"index":{"name":{"identifier":"c"}},"name":{"name":{"identifier":"ANTLRLiteralCharValueEscape"}}}},"name":{"identifier":"charValueEscape"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charValueEscape"}},"right":{}},"elseStmt":{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"of"},"scope":{"name":{"identifier":"UnicodeBlock"},"scope":{"name":{"identifier":"Character"}}},"arguments":[{"expression":{"name":{"identifier":"c"}},"type":{"type":"CHAR"}}]},"right":{"name":{"identifier":"BASIC_LATIN"},"scope":{"name":{"identifier":"UnicodeBlock"},"scope":{"name":{"identifier":"Character"}}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isISOControl"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"expression":{"name":{"identifier":"c"}},"type":{"type":"CHAR"}}]}}},"elseStmt":{"condition":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"c"}},"right":{"value":"0xFFFF"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u{%06X}"},{"name":{"identifier":"c"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u%04X"},{"name":{"identifier":"c"}}]}}}]}},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"value":"\\"}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"value":"\'"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"expression":{"name":{"identifier":"c"}},"type":{"type":"CHAR"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"value":"\\'"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"value":"\\\\"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"charValueEscape"}}}}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"value":"<INVALID>"}}}]}},{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"\'"},"right":{"name":{"identifier":"result"}}},"right":{"value":"\'"}}}]}
/misc/charsupport.java	getCharValueFromGrammarCharLiteral	{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"literal"}},"right":{}},"right":{"operator":"LESS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"literal"}}},"right":{"value":"3"}}},"thenStmt":{"expression":{"operator":"MINUS","expression":{"value":"1"}}}},{"expression":{"name":{"identifier":"getCharValueFromCharInGrammarLiteral"},"arguments":[{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"value":"1"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"literal"}}},"right":{"value":"1"}}]}]}}]}
/misc/charsupport.java	getStringFromGrammarStringLiteral	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"literal"}}},"right":{"value":"1"}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}},"name":{"identifier":"end"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"name":{"identifier":"i"}}]},"right":{"value":"\\"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"end"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"2"}}}},{"condition":{"operator":"AND","left":{"operator":"LESS","left":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}},"right":{"name":{"identifier":"n"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}]},"right":{"value":"u"}}},"thenStmt":{"statements":[{"condition":{"operator":"AND","left":{"operator":"LESS","left":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"2"}},"right":{"name":{"identifier":"n"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"2"}}]},"right":{"value":"{"}}},"elseStmt":{"statements":[{"body":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"end"}},"right":{"name":{"identifier":"n"}}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"name":{"identifier":"end"}}]},"name":{"identifier":"charAt"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"}}]}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"a"}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"f"}}}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"A"}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"F"}}}}}},"thenStmt":{"statements":[{"expression":{}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"end"}},"right":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"6"}}},"initialization":[{"operator":"ASSIGN","target":{"name":{"identifier":"end"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"2"}}}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"end"}}}]}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"end"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"3"}}}},{"body":{"statements":[{"condition":{"operator":"GREATER","left":{"operator":"PLUS","left":{"name":{"identifier":"end"}},"right":{"value":"1"}},"right":{"name":{"identifier":"n"}}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"end"}}}]},"name":{"identifier":"charAt"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"}"}},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"}}]}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"a"}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"f"}}}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"A"}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"charAt"}},"right":{"value":"F"}}}}}},"thenStmt":{"statements":[{"expression":{}}]}}]},"condition":{"value":"true"}}]}}]}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"end"}},"right":{"name":{"identifier":"n"}}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"literal"}},"arguments":[{"name":{"identifier":"i"}},{"name":{"identifier":"end"}}]},"name":{"identifier":"esc"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCharValueFromCharInGrammarLiteral"},"arguments":[{"name":{"identifier":"esc"}}]},"name":{"identifier":"c"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"expression":{"name":{"identifier":"appendCodePoint"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"c"}}]}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"i"}},"value":{"name":{"identifier":"end"}}}}]},"condition":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/misc/charsupport.java	getCharValueFromCharInGrammarLiteral	{"statements":[{"selector":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"cstr"}}},"entries":[{"label":{"value":"1"},"statements":[{"expression":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"0"}]}}]},{"label":{"value":"2"},"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"0"}]},"right":{"value":"\\"}},"thenStmt":{"expression":{"operator":"MINUS","expression":{"value":"1"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"1"}]},"name":{"identifier":"escChar"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"escChar"}},"right":{"value":"\'"}},"thenStmt":{"expression":{"name":{"identifier":"escChar"}}}},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"escChar"}},"name":{"name":{"identifier":"ANTLRLiteralEscapedCharValue"}}},"name":{"identifier":"charVal"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charVal"}},"right":{"value":"0"}},"thenStmt":{"expression":{"operator":"MINUS","expression":{"value":"1"}}}},{"expression":{"name":{"identifier":"charVal"}}}]},{"label":{"value":"6"},"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"\\u"}]}},"thenStmt":{"expression":{"operator":"MINUS","expression":{"value":"1"}}}},{"expression":{"variables":[{"name":{"identifier":"startOff"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"name":{"identifier":"endOff"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"2"}]},"right":{"value":"{"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"startOff"}},"value":{"value":"2"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"endOff"}},"value":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"cstr"}}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"startOff"}},"value":{"value":"3"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"endOff"}},"value":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"}"}]}}}]}},{"expression":{"name":{"identifier":"parseHexValue"},"arguments":[{"name":{"identifier":"cstr"}},{"name":{"identifier":"startOff"}},{"name":{"identifier":"endOff"}}]}}]},{"statements":[{"condition":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"\\u{"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"parseHexValue"},"arguments":[{"name":{"identifier":"cstr"}},{"value":"3"},{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"value":"}"}]}]}}]}},{"expression":{"operator":"MINUS","expression":{"value":"1"}}}]}]}]}
/misc/charsupport.java	parseHexValue	{"statements":[{"condition":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"startOff"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"endOff"}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"operator":"MINUS","expression":{"value":"1"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"cstr"}},"arguments":[{"name":{"identifier":"startOff"}},{"name":{"identifier":"endOff"}}]},"name":{"identifier":"unicodeChars"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","expression":{"value":"1"}},"name":{"identifier":"result"},"type":{"type":"INT"}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"parseInt"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"unicodeChars"}},{"value":"16"}]}}}]},"catchClauses":[{"body":{},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"NumberFormatException"}}}}]},{"expression":{"name":{"identifier":"result"}}}]}
/misc/charsupport.java	capitalize	{"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toUpperCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"0"}]}]},"right":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"1"}]}}}]}
/misc/charsupport.java	getIntervalSetEscapedString	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"iterator"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"intervalSet"}}}},"name":{"identifier":"iter"},"type":{"name":{"identifier":"Iterator"},"typeArguments":[{"name":{"identifier":"Interval"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"next"},"scope":{"name":{"identifier":"iter"}}},"name":{"identifier":"interval"},"type":{"name":{"identifier":"Interval"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"getRangeEscapedString"},"arguments":[{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}},{"name":{"identifier":"b"},"scope":{"name":{"identifier":"interval"}}}]}]}},{"condition":{"name":{"identifier":"hasNext"},"scope":{"name":{"identifier":"iter"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":" | "}]}}]}}]},"condition":{"name":{"identifier":"hasNext"},"scope":{"name":{"identifier":"iter"}}}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/misc/charsupport.java	getRangeEscapedString	{"statements":[{"expression":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"codePointStart"}},"right":{"name":{"identifier":"codePointEnd"}}},"elseExpr":{"name":{"identifier":"getANTLRCharLiteralForChar"},"arguments":[{"name":{"identifier":"codePointStart"}}]},"thenExpr":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getANTLRCharLiteralForChar"},"arguments":[{"name":{"identifier":"codePointStart"}}]},"right":{"value":".."}},"right":{"name":{"identifier":"getANTLRCharLiteralForChar"},"arguments":[{"name":{"identifier":"codePointEnd"}}]}}}}]}
/misc/mutableint.java	equals	{"statements":[{"condition":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"Number"}}},"thenStmt":{"expression":{"operator":"EQUALS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"intValue"},"scope":{"inner":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"Number"}}}}}}}},{"expression":{"value":"false"}}]}
/misc/mutableint.java	hashCode	{"statements":[{"expression":{"name":{"identifier":"v"}}}]}
/misc/mutableint.java	compareTo	{"statements":[{"expression":{"operator":"MINUS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"intValue"},"scope":{"name":{"identifier":"o"}}}}}]}
/misc/mutableint.java	intValue	{"statements":[{"expression":{"name":{"identifier":"v"}}}]}
/misc/mutableint.java	longValue	{"statements":[{"expression":{"name":{"identifier":"v"}}}]}
/misc/mutableint.java	floatValue	{"statements":[{"expression":{"name":{"identifier":"v"}}}]}
/misc/mutableint.java	doubleValue	{"statements":[{"expression":{"name":{"identifier":"v"}}}]}
/misc/mutableint.java	toString	{"statements":[{"expression":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"v"}}]}}]}
/misc/escapesequenceparsing.java	toString	{"statements":[{"expression":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"%s type=%s codePoint=%d propertyIntervalSet=%s parseLength=%d"},{"name":{"identifier":"toString"},"scope":{}},{"name":{"identifier":"type"}},{"name":{"identifier":"codePoint"}},{"name":{"identifier":"propertyIntervalSet"}},{"name":{"identifier":"parseLength"}}]}}]}
/misc/escapesequenceparsing.java	equals	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"other"}},"type":{"name":{"identifier":"Result"}}}}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"other"}},"type":{"name":{"identifier":"Result"}}},"name":{"identifier":"that"},"type":{"name":{"identifier":"Result"}}}]}},{"condition":{"operator":"EQUALS","left":{},"right":{"name":{"identifier":"that"}}},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}},{"expression":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"type"},"scope":{}},{"name":{"identifier":"type"},"scope":{"name":{"identifier":"that"}}}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"codePoint"},"scope":{}},{"name":{"identifier":"codePoint"},"scope":{"name":{"identifier":"that"}}}]}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"propertyIntervalSet"},"scope":{}},{"name":{"identifier":"propertyIntervalSet"},"scope":{"name":{"identifier":"that"}}}]}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"parseLength"},"scope":{}},{"name":{"identifier":"parseLength"},"scope":{"name":{"identifier":"that"}}}]}}}]}
/misc/escapesequenceparsing.java	hashCode	{"statements":[{"expression":{"name":{"identifier":"hash"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"type"}},{"name":{"identifier":"codePoint"}},{"name":{"identifier":"propertyIntervalSet"}},{"name":{"identifier":"parseLength"}}]}}]}
/misc/escapesequenceparsing.java	parseEscape	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"startOff"}},"name":{"identifier":"offset"},"type":{"type":"INT"}}]}},{"condition":{"operator":"OR","left":{"operator":"GREATER","left":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"value":"2"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"offset"}}]},"right":{"value":"\\"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"offset"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"offset"}}]},"name":{"identifier":"escaped"},"type":{"type":"INT"}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"offset"}},"value":{"name":{"identifier":"charCount"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"escaped"}}]}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"escaped"}},"right":{"value":"u"}},"elseStmt":{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"escaped"}},"right":{"value":"p"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"escaped"}},"right":{"value":"P"}}},"elseStmt":{"condition":{"operator":"LESS","left":{"name":{"identifier":"escaped"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"ANTLRLiteralEscapedCharValue"},"scope":{"name":{"identifier":"CharSupport"}}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"escaped"}},"name":{"name":{"identifier":"ANTLRLiteralEscapedCharValue"},"scope":{"name":{"identifier":"CharSupport"}}}},"name":{"identifier":"codePoint"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"escaped"}},"right":{"value":"]"}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"escaped"}},"right":{"value":"-"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"codePoint"}},"value":{"name":{"identifier":"escaped"}}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"PLUS","left":{"name":{"identifier":"startOff"}},"right":{"value":"1"}}]}}]}}]}},{"expression":{"type":{"name":{"identifier":"Result"}},"arguments":[{"name":{"identifier":"CODE_POINT"},"scope":{"name":{"identifier":"Type"},"scope":{"name":{"identifier":"Result"}}}},{"name":{"identifier":"codePoint"}},{"name":{"identifier":"EMPTY_SET"},"scope":{"name":{"identifier":"IntervalSet"}}},{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"offset"}},"right":{"name":{"identifier":"startOff"}}}]}}]}},"thenStmt":{"statements":[{"condition":{"operator":"GREATER","left":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"value":"3"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"offset"}}]},"right":{"value":"{"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"name":{"identifier":"offset"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"offset"}},"name":{"identifier":"openBraceOffset"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"}"},{"name":{"identifier":"openBraceOffset"}}]},"name":{"identifier":"closeBraceOffset"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"closeBraceOffset"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"s"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"openBraceOffset"}},"right":{"value":"1"}},{"name":{"identifier":"closeBraceOffset"}}]},"name":{"identifier":"propertyName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getPropertyCodePoints"},"scope":{"name":{"identifier":"UnicodeData"}},"arguments":[{"name":{"identifier":"propertyName"}}]},"name":{"identifier":"propertyIntervalSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"propertyIntervalSet"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"name":{"identifier":"closeBraceOffset"}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"offset"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"closeBraceOffset"}},"right":{"value":"1"}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"escaped"}},"right":{"value":"P"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"propertyIntervalSet"}},"value":{"name":{"identifier":"complement"},"scope":{"name":{"identifier":"propertyIntervalSet"}},"arguments":[{"name":{"identifier":"COMPLETE_CHAR_SET"},"scope":{"name":{"identifier":"IntervalSet"}}}]}}}]}},{"expression":{"type":{"name":{"identifier":"Result"}},"arguments":[{"name":{"identifier":"PROPERTY"},"scope":{"name":{"identifier":"Type"},"scope":{"name":{"identifier":"Result"}}}},{"operator":"MINUS","expression":{"value":"1"}},{"name":{"identifier":"propertyIntervalSet"}},{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"offset"}},"right":{"name":{"identifier":"startOff"}}}]}}]}},"thenStmt":{"statements":[{"condition":{"operator":"GREATER","left":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"value":"3"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]}},{"expression":{"variables":[{"name":{"identifier":"hexStartOffset"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"name":{"identifier":"hexEndOffset"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"offset"}}]},"right":{"value":"{"}},"elseStmt":{"statements":[{"condition":{"operator":"GREATER","left":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"value":"4"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hexStartOffset"}},"value":{"name":{"identifier":"offset"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hexEndOffset"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"value":"4"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"offset"}},"value":{"name":{"identifier":"hexEndOffset"}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hexStartOffset"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"value":"1"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hexEndOffset"}},"value":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"}"},{"name":{"identifier":"hexStartOffset"}}]}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"hexEndOffset"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"offset"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"hexEndOffset"}},"right":{"value":"1"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseHexValue"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"s"}},{"name":{"identifier":"hexStartOffset"}},{"name":{"identifier":"hexEndOffset"}}]},"name":{"identifier":"codePointValue"},"type":{"type":"INT"}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"codePointValue"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"codePointValue"}},"right":{"name":{"identifier":"MAX_CODE_POINT"},"scope":{"name":{"identifier":"Character"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"invalid"},"arguments":[{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"operator":"PLUS","left":{"name":{"identifier":"startOff"}},"right":{"value":"6"}},"right":{"value":"1"}}]}}]}},{"expression":{"type":{"name":{"identifier":"Result"}},"arguments":[{"name":{"identifier":"CODE_POINT"},"scope":{"name":{"identifier":"Type"},"scope":{"name":{"identifier":"Result"}}}},{"name":{"identifier":"codePointValue"}},{"name":{"identifier":"EMPTY_SET"},"scope":{"name":{"identifier":"IntervalSet"}}},{"name":{"identifier":"startOff"}},{"operator":"MINUS","left":{"name":{"identifier":"offset"}},"right":{"name":{"identifier":"startOff"}}}]}}]}}]}
/misc/escapesequenceparsing.java	invalid	{"statements":[{"expression":{"type":{"name":{"identifier":"Result"}},"arguments":[{"name":{"identifier":"INVALID"},"scope":{"name":{"identifier":"Type"},"scope":{"name":{"identifier":"Result"}}}},{"value":"0"},{"name":{"identifier":"EMPTY_SET"},"scope":{"name":{"identifier":"IntervalSet"}}},{"name":{"identifier":"start"}},{"operator":"PLUS","left":{"operator":"MINUS","left":{"name":{"identifier":"stop"}},"right":{"name":{"identifier":"start"}}},"right":{"value":"1"}}]}}]}
/misc/orderedhashmap.java	getKey	{"statements":[{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"elements"}},"arguments":[{"name":{"identifier":"i"}}]}}]}
/misc/orderedhashmap.java	getElement	{"statements":[{"expression":{"name":{"identifier":"get"},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"elements"}},"arguments":[{"name":{"identifier":"i"}}]}]}}]}
/misc/orderedhashmap.java	put	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"elements"}},"arguments":[{"name":{"identifier":"key"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{},"arguments":[{"name":{"identifier":"key"}},{"name":{"identifier":"value"}}]}}]}
/misc/orderedhashmap.java	putAll	{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"put"},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}},{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"m"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"extendedType":{"name":{"identifier":"K"}}},{"extendedType":{"name":{"identifier":"V"}}}]}}]}}]}
/misc/orderedhashmap.java	remove	{"statements":[{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"elements"}},"arguments":[{"name":{"identifier":"key"}}]}},{"expression":{"name":{"identifier":"remove"},"scope":{},"arguments":[{"name":{"identifier":"key"}}]}}]}
/misc/orderedhashmap.java	clear	{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"elements"}}}},{"expression":{"name":{"identifier":"clear"},"scope":{}}}]}
/misc/graph.java	addEdge	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"edges"}},"right":{"name":{"identifier":"EMPTY_LIST"},"scope":{"name":{"identifier":"Collections"}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"edges"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}]}}}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"edges"}},"arguments":[{"name":{"identifier":"n"}}]}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"edges"}},"arguments":[{"name":{"identifier":"n"}}]}}}]}
/misc/graph.java	toString	{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"payload"}}}}]}
/misc/graph.java	addEdge	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNode"},"arguments":[{"name":{"identifier":"a"}}]},"name":{"identifier":"a_node"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNode"},"arguments":[{"name":{"identifier":"b"}}]},"name":{"identifier":"b_node"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"expression":{"name":{"identifier":"addEdge"},"scope":{"name":{"identifier":"a_node"}},"arguments":[{"name":{"identifier":"b_node"}}]}}]}
/misc/graph.java	getNode	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"name":{"identifier":"a"}}]},"name":{"identifier":"existing"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"existing"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"existing"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]},"arguments":[{"name":{"identifier":"a"}}]},"name":{"identifier":"n"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"nodes"}},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"n"}}]}},{"expression":{"name":{"identifier":"n"}}}]}
/misc/graph.java	sort	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"OrderedHashSet"},"typeArguments":[{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}]}},"name":{"identifier":"visited"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"T"}}]}},"name":{"identifier":"sorted"},"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"n"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"n"}},"value":{"name":{"identifier":"tNode"}}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"n"}}]}},"thenStmt":{}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"nodes"}}},"variable":{"variables":[{"name":{"identifier":"tNode"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"n"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"DFS"},"arguments":[{"name":{"identifier":"n"}},{"name":{"identifier":"visited"}},{"name":{"identifier":"sorted"}}]}}]}}]},"condition":{"operator":"LESS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"visited"}}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"nodes"}}}}},{"expression":{"name":{"identifier":"sorted"}}}]}
/misc/graph.java	DFS	{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"n"}}]},"thenStmt":{}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"n"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"edges"},"scope":{"name":{"identifier":"n"}}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"DFS"},"arguments":[{"name":{"identifier":"target"}},{"name":{"identifier":"visited"}},{"name":{"identifier":"sorted"}}]}}]},"iterable":{"name":{"identifier":"edges"},"scope":{"name":{"identifier":"n"}}},"variable":{"variables":[{"name":{"identifier":"target"},"type":{"name":{"identifier":"Node"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"sorted"}},"arguments":[{"name":{"identifier":"payload"},"scope":{"name":{"identifier":"n"}}}]}}]}
/misc/frequencyset.java	count	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"arguments":[{"name":{"identifier":"key"}}]},"name":{"identifier":"value"},"type":{"name":{"identifier":"MutableInt"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"value"}},"right":{}},"thenStmt":{"expression":{"value":"0"}}},{"expression":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"value"}}}}]}
/misc/frequencyset.java	add	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"arguments":[{"name":{"identifier":"key"}}]},"name":{"identifier":"value"},"type":{"name":{"identifier":"MutableInt"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"value"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"value"}}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"value"}},"value":{"type":{"name":{"identifier":"MutableInt"}},"arguments":[{"value":"1"}]}}},{"expression":{"name":{"identifier":"put"},"arguments":[{"name":{"identifier":"key"}},{"name":{"identifier":"value"}}]}}]}}]}
/misc/utils.java	select	[]
/misc/utils.java	exec	[]
/misc/utils.java	exec	[]
/misc/utils.java	stripFileExtension	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"name"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"name"}},"arguments":[{"value":"."}]},"name":{"identifier":"lastDot"},"type":{"type":"INT"}}]}},{"condition":{"operator":"LESS","left":{"name":{"identifier":"lastDot"}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"name"}}}},{"expression":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"name"}},"arguments":[{"value":"0"},{"name":{"identifier":"lastDot"}}]}}]}
/misc/utils.java	join	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"a"}}},"name":{"identifier":"o"},"type":{"name":{"identifier":"Object"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"o"}}}]}},{"condition":{"operator":"LESS","left":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"a"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"separator"}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"a"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/misc/utils.java	sortLinesInString	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"split"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"\n"}]},"name":{"identifier":"lines"},"type":{"origin":"NAME","componentType":{"name":{"identifier":"String"}}}}]}},{"expression":{"name":{"identifier":"sort"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"lines"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"lines"}}]},"name":{"identifier":"linesL"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"l"}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\n"}]}}]},"iterable":{"name":{"identifier":"linesL"}},"variable":{"variables":[{"name":{"identifier":"l"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/misc/utils.java	nodesToStrings	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"nodes"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"a"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"a"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}]}},"iterable":{"name":{"identifier":"nodes"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"T"}}}]}},{"expression":{"name":{"identifier":"a"}}}]}
/misc/utils.java	capitalize	{"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toUpperCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"0"}]}]},"right":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"1"}]}}}]}
/misc/utils.java	decapitalize	{"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"0"}]}]},"right":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"s"}},"arguments":[{"value":"1"}]}}}]}
/misc/utils.java	select	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"list"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"To"}}]}},"name":{"identifier":"b"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"To"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"b"}},"arguments":[{"name":{"identifier":"exec"},"scope":{"name":{"identifier":"selector"}},"arguments":[{"name":{"identifier":"f"}}]}]}}]},"iterable":{"name":{"identifier":"list"}},"variable":{"variables":[{"name":{"identifier":"f"},"type":{"name":{"identifier":"From"}}}]}},{"expression":{"name":{"identifier":"b"}}}]}
/misc/utils.java	find	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"isInstance"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"o"}}]},"thenStmt":{"expression":{"name":{"identifier":"cast"},"scope":{"name":{"identifier":"cl"}},"arguments":[{"name":{"identifier":"o"}}]}}}]},"iterable":{"name":{"identifier":"ops"}},"variable":{"variables":[{"name":{"identifier":"o"},"type":{"name":{"identifier":"Object"}}}]}},{"expression":{}}]}
/misc/utils.java	indexOf	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"select"},"scope":{"name":{"identifier":"filter"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"elems"}},"arguments":[{"name":{"identifier":"i"}}]}]},"thenStmt":{"expression":{"name":{"identifier":"i"}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"elems"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"operator":"MINUS","expression":{"value":"1"}}}]}
/misc/utils.java	lastIndexOf	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"select"},"scope":{"name":{"identifier":"filter"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"elems"}},"arguments":[{"name":{"identifier":"i"}}]}]},"thenStmt":{"expression":{"name":{"identifier":"i"}}}}]},"compare":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"initialization":[{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"elems"}}},"right":{"value":"1"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"operator":"MINUS","expression":{"value":"1"}}}]}
/misc/utils.java	setSize	{"statements":[{"condition":{"operator":"LESS","left":{"name":{"identifier":"size"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"list"}}}},"elseStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"list"}},"arguments":[{}]}}]},"condition":{"operator":"GREATER","left":{"name":{"identifier":"size"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"list"}}}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"subList"},"scope":{"name":{"identifier":"list"}},"arguments":[{"name":{"identifier":"size"}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"list"}}}]}}}]}}]}
/codegen/target.java	getCodeGenerator	{"statements":[{"expression":{"name":{"identifier":"gen"}}}]}
/codegen/target.java	getLanguage	{"statements":[{"expression":{"name":{"identifier":"language"}}}]}
/codegen/target.java	getVersion	[]
/codegen/target.java	getTemplates	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"templates"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getVersion"}},"name":{"identifier":"version"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"version"}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getMajorMinorVersion"},"scope":{"name":{"identifier":"RuntimeMetaData"}},"arguments":[{"name":{"identifier":"version"}}]},"arguments":[{"name":{"identifier":"getMajorMinorVersion"},"scope":{"name":{"identifier":"RuntimeMetaData"}},"arguments":[{"name":{"identifier":"VERSION"},"scope":{"name":{"identifier":"Tool"}}}]}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"name":{"identifier":"INCOMPATIBLE_TOOL_AND_TEMPLATES"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"version"}},{"name":{"identifier":"VERSION"},"scope":{"name":{"identifier":"Tool"}}},{"name":{"identifier":"language"}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"templates"}},"value":{"name":{"identifier":"loadTemplates"}}}}]}},{"expression":{"name":{"identifier":"templates"}}}]}
/codegen/target.java	genFile	{"statements":[{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"getCodeGenerator"}},"arguments":[{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"fileName"}}]}}]}
/codegen/target.java	getTokenTypeAsTargetLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenName"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ttype"}}]},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"INVALID_TOKEN_NAME"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]}},{"expression":{"name":{"identifier":"name"}}}]}
/codegen/target.java	getTokenTypesAsTargetLabels	{"statements":[{"expression":{"variables":[{"initializer":{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"ttypes"}}}}]},"name":{"identifier":"labels"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"labels"}}},"value":{"name":{"identifier":"getTokenTypeAsTargetLabel"},"arguments":[{"name":{"identifier":"g"}},{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"ttypes"}}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"ttypes"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"labels"}}}]}
/codegen/target.java	getTargetStringLiteralFromString	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"condition":{"name":{"identifier":"quoted"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\""}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"c"},"type":{"type":"INT"}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"c"}},"right":{"value":"\'"}},"right":{"operator":"LESS","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"targetCharValueEscape"}}}}},"right":{"operator":"NOT_EQUALS","left":{"index":{"name":{"identifier":"c"}},"name":{"name":{"identifier":"targetCharValueEscape"}}},"right":{}}},"elseStmt":{"condition":{"name":{"identifier":"shouldUseUnicodeEscapeForCodePointInDoubleQuotedString"},"arguments":[{"name":{"identifier":"c"}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"appendCodePoint"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"c"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"appendUnicodeEscapedCodePoint"},"arguments":[{"name":{"identifier":"i"}},{"name":{"identifier":"buf"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"index":{"name":{"identifier":"c"}},"name":{"name":{"identifier":"targetCharValueEscape"}}}]}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"i"}},"value":{"name":{"identifier":"charCount"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"c"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}]},{"condition":{"name":{"identifier":"quoted"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"\""}]}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/codegen/target.java	appendUnicodeEscapedCodePoint	[]
/codegen/target.java	getTargetStringLiteralFromString	{"statements":[{"expression":{"name":{"identifier":"getTargetStringLiteralFromString"},"arguments":[{"name":{"identifier":"s"}},{"value":"true"}]}}]}
/codegen/target.java	getTargetStringLiteralFromANTLRStringLiteral	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"sb"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"literal"}},"name":{"identifier":"is"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"addQuotes"}},"thenStmt":{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"value":"\""}]}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"is"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"codePoint"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charCount"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"codePoint"}}]},"name":{"identifier":"toAdvance"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"\\"}},"elseStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0x22"}},"elseStmt":{"condition":{"name":{"identifier":"shouldUseUnicodeEscapeForCodePointInDoubleQuotedString"},"arguments":[{"name":{"identifier":"codePoint"}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"appendCodePoint"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"codePoint"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"appendUnicodeEscapedCodePoint"},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"value":"\\\\""}]}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"is"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"toAdvance"}}}]},"name":{"identifier":"escapedCodePoint"},"type":{"type":"INT"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"toAdvance"}}}},{"selector":{"name":{"identifier":"escapedCodePoint"}},"entries":[{"label":{"value":"n"}},{"label":{"value":"r"}},{"label":{"value":"t"}},{"label":{"value":"b"}},{"label":{"value":"f"}},{"label":{"value":"\\"},"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"value":"\\"}]}},{"expression":{"name":{"identifier":"appendCodePoint"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"escapedCodePoint"}}]}},{}]},{"label":{"value":"u"},"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"is"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"toAdvance"}}}]},"right":{"value":"{"}},"elseStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"toAdvance"}},"value":{"value":"4"}}}]},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"toAdvance"}}}}]},"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"is"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"toAdvance"}}}]},"right":{"value":"}"}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"toAdvance"}}}}]}},{"condition":{"operator":"LESS_EQUALS","left":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"toAdvance"}}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"is"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"is"}},"arguments":[{"name":{"identifier":"i"}},{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"toAdvance"}}}]},"name":{"identifier":"fullEscape"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"appendUnicodeEscapedCodePoint"},"arguments":[{"name":{"identifier":"getCharValueFromCharInGrammarLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"fullEscape"}}]},{"name":{"identifier":"sb"}}]}}]}},{}]},{"statements":[{"condition":{"name":{"identifier":"shouldUseUnicodeEscapeForCodePointInDoubleQuotedString"},"arguments":[{"name":{"identifier":"escapedCodePoint"}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"appendCodePoint"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"escapedCodePoint"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"appendUnicodeEscapedCodePoint"},"arguments":[{"name":{"identifier":"escapedCodePoint"}},{"name":{"identifier":"sb"}}]}}]}},{}]}]}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"i"}},"value":{"name":{"identifier":"toAdvance"}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"is"}}},"right":{"value":"1"}}},"initialization":[{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}]},{"condition":{"name":{"identifier":"addQuotes"}},"thenStmt":{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"value":"\""}]}}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"sb"}}}}]}
/codegen/target.java	shouldUseUnicodeEscapeForCodePointInDoubleQuotedString	{"statements":[{"check":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0x0A"}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0x22"}}}},{"expression":{"operator":"OR","left":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0x20"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0x5C"}}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"codePoint"}},"right":{"value":"0x7F"}}}}]}
/codegen/target.java	encodeIntAsCharEscape	{"statements":[{"condition":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"MIN_VALUE"},"scope":{"name":{"identifier":"Character"}}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Character"}}}}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalArgumentException"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"Cannot encode the specified value: %d"},{"name":{"identifier":"v"}}]}]}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"targetCharValueEscape"}}}}},"right":{"operator":"NOT_EQUALS","left":{"index":{"name":{"identifier":"v"}},"name":{"name":{"identifier":"targetCharValueEscape"}}},"right":{}}},"thenStmt":{"statements":[{"expression":{"index":{"name":{"identifier":"v"}},"name":{"name":{"identifier":"targetCharValueEscape"}}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0x20"}},"right":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"value":"127"}}},"right":{"inner":{"operator":"OR","left":{"operator":"OR","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"v"}}]}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"8"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"9"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"expression":{"name":{"identifier":"v"}},"type":{"type":"CHAR"}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0"}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"127"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"toOctalString"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"v"}}]},"name":{"identifier":"oct"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"value":"\\"},"right":{"name":{"identifier":"oct"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"toHexString"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"operator":"BINARY_OR","left":{"name":{"identifier":"v"}},"right":{"value":"0x10000"}}]},"arguments":[{"value":"1"},{"value":"5"}]},"name":{"identifier":"hex"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"value":"\\u"},"right":{"name":{"identifier":"hex"}}}}]}
/codegen/target.java	getLoopLabel	{"statements":[{"expression":{"operator":"PLUS","left":{"value":"loop"},"right":{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ast"}}}}}}]}
/codegen/target.java	getLoopCounter	{"statements":[{"expression":{"operator":"PLUS","left":{"value":"cnt"},"right":{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ast"}}}}}}]}
/codegen/target.java	getListLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"ListLabelName"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"label"},{"name":{"identifier":"label"}}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"st"}}}}]}
/codegen/target.java	getRuleFunctionContextStructName	{"statements":[{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"LexerRuleContext"}]}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"RuleContextNameSuffix"}]}}}}]}
/codegen/target.java	getAltLabelContextStructName	{"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"label"}}]},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"RuleContextNameSuffix"}]}}}}]}
/codegen/target.java	getRuleFunctionContextStructName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"rule"},"scope":{"name":{"identifier":"function"}}},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"LexerRuleContext"}]}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"RuleContextNameSuffix"}]}}}}]}
/codegen/target.java	getImplicitTokenLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"ImplicitTokenLabel"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"getCodeGenerator"}}},"arguments":[{"name":{"identifier":"tokenName"}}]},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"condition":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"tokenName"}},"arguments":[{"value":"'"}]},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"ttype"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenTypeAsTargetLabel"},"arguments":[{"name":{"identifier":"g"},"scope":{"name":{"identifier":"getCodeGenerator"}}},{"name":{"identifier":"ttype"}}]},"name":{"identifier":"text"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"tokenName"},{"name":{"identifier":"text"}}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"st"}}}}]}
/codegen/target.java	getImplicitSetLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"ImplicitSetLabel"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"id"},{"name":{"identifier":"id"}}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"st"}}}}]}
/codegen/target.java	getImplicitRuleLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"ImplicitRuleLabel"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"ruleName"},{"name":{"identifier":"ruleName"}}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"st"}}}}]}
/codegen/target.java	getElementListName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"ElementListName"}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"value":"elemName"},{"name":{"identifier":"getElementName"},"arguments":[{"name":{"identifier":"name"}}]}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"st"}}}}]}
/codegen/target.java	getElementName	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"."},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"statements":[{"expression":{"value":"_wild"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"getCodeGenerator"}}},"arguments":[{"name":{"identifier":"name"}}]},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"name"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"getCodeGenerator"}}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"expression":{"name":{"identifier":"name"}}}},{"expression":{"name":{"identifier":"getTokenTypeAsTargetLabel"},"arguments":[{"name":{"identifier":"g"},"scope":{"name":{"identifier":"getCodeGenerator"}}},{"name":{"identifier":"ttype"}}]}}]}
/codegen/target.java	getRecognizerFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRecognizerName"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"name":{"identifier":"recognizerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"recognizerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target.java	getListenerFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"Listener"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target.java	getVisitorFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"Visitor"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target.java	getBaseListenerFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"BaseListener"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target.java	getBaseVisitorFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"BaseVisitor"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Integer"}}}}]}
/codegen/target.java	getInlineTestSetWordSize	{"statements":[{"expression":{"value":"64"}}]}
/codegen/target.java	grammarSymbolCausesIssueInGeneratedCode	{"statements":[{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"idNode"}}}},"entries":[{"label":{"name":{"identifier":"ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"idNode"}}}}},"entries":[{"label":{"name":{"identifier":"ELEMENT_OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}}},{"label":{"name":{"identifier":"OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"false"}}]},{"statements":[{}]}]},{}]},{"label":{"name":{"identifier":"AT"},"scope":{"name":{"identifier":"ANTLRParser"}}}},{"label":{"name":{"identifier":"ELEMENT_OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"value":"false"}}]},{"label":{"name":{"identifier":"LEXER_ACTION_CALL"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildIndex"},"scope":{"name":{"identifier":"idNode"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{}]},{"statements":[{}]}]},{"expression":{"name":{"identifier":"visibleGrammarSymbolCausesIssueInGeneratedCode"},"arguments":[{"name":{"identifier":"idNode"}}]}}]}
/codegen/target.java	visibleGrammarSymbolCausesIssueInGeneratedCode	[]
/codegen/target.java	templatesExist	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"TEMPLATE_ROOT"},"scope":{"name":{"identifier":"CodeGenerator"}}},"right":{"value":"/"}},"right":{"name":{"identifier":"getLanguage"}}},"right":{"value":"/"}},"right":{"name":{"identifier":"getLanguage"}}},"right":{"name":{"identifier":"GROUP_FILE_EXTENSION"},"scope":{"name":{"identifier":"STGroup"}}}},"name":{"identifier":"groupFileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"type":{"name":{"identifier":"STGroupFile"}},"arguments":[{"name":{"identifier":"groupFileName"}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"iae"},"type":{"name":{"identifier":"IllegalArgumentException"}}}}]},{"expression":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"result"}},"right":{}}}]}
/codegen/target.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"TEMPLATE_ROOT"},"scope":{"name":{"identifier":"CodeGenerator"}}},"right":{"value":"/"}},"right":{"name":{"identifier":"getLanguage"}}},"right":{"value":"/"}},"right":{"name":{"identifier":"getLanguage"}}},"right":{"name":{"identifier":"GROUP_FILE_EXTENSION"},"scope":{"name":{"identifier":"STGroup"}}}},"name":{"identifier":"groupFileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"type":{"name":{"identifier":"STGroupFile"}},"arguments":[{"name":{"identifier":"groupFileName"}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"name":{"identifier":"MISSING_CODE_GEN_TEMPLATES"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"iae"}},{"name":{"identifier":"language"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"iae"},"type":{"name":{"identifier":"IllegalArgumentException"}}}}]},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"result"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"Integer"}}},{"type":{"name":{"identifier":"NumberRenderer"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"StringRenderer"}}}]}},{"expression":{"name":{"identifier":"setListener"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"STErrorListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"compileTimeError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"runTimeError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"IOError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"internalError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}}},"arguments":[{"name":{"identifier":"STRING_TEMPLATE_WARNING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"cause"},"scope":{"name":{"identifier":"msg"}}},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"msg"}}}]}}]},"type":{},"name":{"identifier":"reportError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}]}]}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target.java	compileTimeError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target.java	runTimeError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target.java	IOError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target.java	internalError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target.java	reportError	{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}}},"arguments":[{"name":{"identifier":"STRING_TEMPLATE_WARNING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"cause"},"scope":{"name":{"identifier":"msg"}}},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"msg"}}}]}}]}
/codegen/target.java	wantsBaseListener	{"statements":[{"expression":{"value":"true"}}]}
/codegen/target.java	wantsBaseVisitor	{"statements":[{"expression":{"value":"true"}}]}
/codegen/target.java	supportsOverloadedMethods	{"statements":[{"expression":{"value":"true"}}]}
/codegen/target.java	needsHeader	{"statements":[{"expression":{"value":"false"}}]}
/codegen/outputmodelwalker.java	walk	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getClass"},"scope":{"name":{"identifier":"omo"}}},"name":{"identifier":"cl"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"OutputModelObject"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSimpleName"},"scope":{"name":{"identifier":"cl"}}},"name":{"identifier":"templateName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"templateName"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"NO_MODEL_TO_TEMPLATE_MAPPING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"getSimpleName"},"scope":{"name":{"identifier":"cl"}}}]}},{"expression":{"type":{"name":{"identifier":"ST"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"["},"right":{"name":{"identifier":"templateName"}}},"right":{"value":" invalid]"}}]}}]}},{"condition":{"name":{"identifier":"header"}},"thenStmt":{"expression":{"operator":"PLUS","target":{"name":{"identifier":"templateName"}},"value":{"value":"Header"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"templates"}},"arguments":[{"name":{"identifier":"templateName"}}]},"name":{"identifier":"st"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"st"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CODE_GEN_TEMPLATES_INCOMPLETE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"templateName"}}]}},{"expression":{"type":{"name":{"identifier":"ST"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"["},"right":{"name":{"identifier":"templateName"}}},"right":{"value":" invalid]"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"st"}}}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CODE_TEMPLATE_ARG_ISSUE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"templateName"}},{"value":"<none>"}]}},{"expression":{"name":{"identifier":"st"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"st"}}}},"name":{"identifier":"formalArgs"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"FormalArgument"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"formalArgs"}}},"name":{"identifier":"argNames"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"iterator"},"scope":{"name":{"identifier":"argNames"}}},"name":{"identifier":"arg_it"},"type":{"name":{"identifier":"Iterator"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"next"},"scope":{"name":{"identifier":"arg_it"}}},"name":{"identifier":"modelArgName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"name":{"identifier":"modelArgName"}},{"name":{"identifier":"omo"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"usedFieldNames"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getFields"},"scope":{"name":{"identifier":"cl"}}},"name":{"identifier":"fields"},"type":{"origin":"NAME","componentType":{"name":{"identifier":"Field"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAnnotation"},"scope":{"name":{"identifier":"fi"}},"arguments":[{"type":{"name":{"identifier":"ModelElement"}}}]},"name":{"identifier":"annotation"},"type":{"name":{"identifier":"ModelElement"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"annotation"}},"right":{}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"fi"}}},"name":{"identifier":"fieldName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"usedFieldNames"}},"arguments":[{"name":{"identifier":"fieldName"}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Model object "},"right":{"name":{"identifier":"getSimpleName"},"scope":{"name":{"identifier":"getClass"},"scope":{"name":{"identifier":"omo"}}}}},"right":{"value":" has multiple fields named '"}},"right":{"name":{"identifier":"fieldName"}}},"right":{"value":"'"}}]}},{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"formalArgs"}},"arguments":[{"name":{"identifier":"fieldName"}}]},"right":{}},"thenStmt":{}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"fi"}},"arguments":[{"name":{"identifier":"omo"}}]},"name":{"identifier":"o"},"type":{"name":{"identifier":"Object"}}}]}},{"condition":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"OutputModelObject"}}},"elseStmt":{"condition":{"operator":"OR","left":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"Collection"}}},"right":{"expression":{"name":{"identifier":"o"}},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"OutputModelObject"}}}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"Map"}}},"elseStmt":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"o"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"operator":"PLUS","left":{"value":"not recognized nested model element: "},"right":{"name":{"identifier":"fieldName"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"Map"},"typeArguments":[{},{}]}},"name":{"identifier":"nestedOmoMap"},"type":{"name":{"identifier":"Map"},"typeArguments":[{},{}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"Object"}},{"name":{"identifier":"ST"}}]}},"name":{"identifier":"m"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"Object"}},{"name":{"identifier":"ST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"walk"},"arguments":[{"expression":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"type":{"name":{"identifier":"OutputModelObject"}}},{"name":{"identifier":"header"}}]},"name":{"identifier":"nestedST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"m"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}},{"name":{"identifier":"nestedST"}}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"nestedOmoMap"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{},{}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"name":{"identifier":"fieldName"}},{"name":{"identifier":"m"}}]}}]}},"thenStmt":{"statements":[{"condition":{"expression":{"name":{"identifier":"o"}},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"OutputModelObject"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"o"}},"value":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"expression":{"name":{"identifier":"o"}},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"OutputModelObject"}}}}]}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"Collection"},"typeArguments":[{}]}},"name":{"identifier":"nestedOmos"},"type":{"name":{"identifier":"Collection"},"typeArguments":[{}]}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"nestedOmo"}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"walk"},"arguments":[{"expression":{"name":{"identifier":"nestedOmo"}},"type":{"name":{"identifier":"OutputModelObject"}}},{"name":{"identifier":"header"}}]},"name":{"identifier":"nestedST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"name":{"identifier":"fieldName"}},{"name":{"identifier":"nestedST"}}]}}]},"iterable":{"name":{"identifier":"nestedOmos"}},"variable":{"variables":[{"name":{"identifier":"nestedOmo"},"type":{"name":{"identifier":"Object"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"OutputModelObject"}}},"name":{"identifier":"nestedOmo"},"type":{"name":{"identifier":"OutputModelObject"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"nestedOmo"}},{"name":{"identifier":"header"}}]},"name":{"identifier":"nestedST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"st"}},"arguments":[{"name":{"identifier":"fieldName"}},{"name":{"identifier":"nestedST"}}]}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CODE_TEMPLATE_ARG_ISSUE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"templateName"}},{"name":{"identifier":"fieldName"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"iae"},"type":{"name":{"identifier":"IllegalAccessException"}}}}]}]},"iterable":{"name":{"identifier":"fields"}},"variable":{"variables":[{"name":{"identifier":"fi"},"type":{"name":{"identifier":"Field"}}}]}},{"expression":{"name":{"identifier":"st"}}}]}
/codegen/target/csharptarget.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/csharptarget.java	encodeIntAsCharEscape	{"statements":[{"condition":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"MIN_VALUE"},"scope":{"name":{"identifier":"Character"}}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Character"}}}}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalArgumentException"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"Cannot encode the specified value: %d"},{"name":{"identifier":"v"}}]}]}}]}},{"expression":{"variables":[{"name":{"identifier":"formatted"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"targetCharValueEscape"}}}}},"right":{"operator":"NOT_EQUALS","left":{"index":{"name":{"identifier":"v"}},"name":{"name":{"identifier":"targetCharValueEscape"}}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0x20"}},"right":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"value":"127"}}},"right":{"inner":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"value":"0"}},"right":{"operator":"GREATER","left":{"name":{"identifier":"v"}},"right":{"value":"9"}}}}},"right":{"inner":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"value":"a"}},"right":{"operator":"GREATER","left":{"name":{"identifier":"v"}},"right":{"value":"f"}}}}},"right":{"inner":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"value":"A"}},"right":{"operator":"GREATER","left":{"name":{"identifier":"v"}},"right":{"value":"F"}}}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"formatted"}},"value":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\x%X"},{"operator":"BINARY_AND","left":{"name":{"identifier":"v"}},"right":{"value":"0xFFFF"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"formatted"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"expression":{"name":{"identifier":"v"}},"type":{"type":"CHAR"}}]}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"formatted"}},"value":{"index":{"name":{"identifier":"v"}},"name":{"name":{"identifier":"targetCharValueEscape"}}}}}]}},{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"'"},"right":{"name":{"identifier":"formatted"}}},"right":{"value":"'"}}}]}
/codegen/target/csharptarget.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/csharptarget.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"STGroupFile"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"TEMPLATE_ROOT"},"scope":{"name":{"identifier":"CodeGenerator"}}},"right":{"value":"/CSharp/"}},"right":{"name":{"identifier":"getLanguage"}}},"right":{"name":{"identifier":"GROUP_FILE_EXTENSION"},"scope":{"name":{"identifier":"STGroup"}}}}]},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"Integer"}}},{"type":{"name":{"identifier":"NumberRenderer"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"StringRenderer"}}}]}},{"expression":{"name":{"identifier":"setListener"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"STErrorListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"compileTimeError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"runTimeError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"IOError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"internalError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}}},"arguments":[{"name":{"identifier":"STRING_TEMPLATE_WARNING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"cause"},"scope":{"name":{"identifier":"msg"}}},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"msg"}}}]}}]},"type":{},"name":{"identifier":"reportError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}]}]}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/csharptarget.java	compileTimeError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/csharptarget.java	runTimeError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/csharptarget.java	IOError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/csharptarget.java	internalError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/csharptarget.java	reportError	{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}}},"arguments":[{"name":{"identifier":"STRING_TEMPLATE_WARNING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"cause"},"scope":{"name":{"identifier":"msg"}}},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"msg"}}}]}}]}
/codegen/target/csharptarget.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendPythonStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/swifttarget.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/swifttarget.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/swifttarget.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"swiftKeywords"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}}]}
/codegen/target/swifttarget.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"operator":"DIVIDE","left":{"value":"65535"},"right":{"value":"3"}}}]}
/codegen/target/swifttarget.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/swifttarget.java	genFile	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"fileName"}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"lexerAtnJSON"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"parserAtnJSON"}},"right":{}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}},"right":{}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parserAtnJSON"}},"value":{"name":{"identifier":"getLexerOrParserATNJson"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"fileName"}}]}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerAtnJSON"}},"value":{"name":{"identifier":"getLexerOrParserATNJson"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"fileName"}}]}}}]}},{"condition":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":"0"},{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}]}]},"name":{"identifier":"jsonFileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"lexerAtnJSON"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"jsonFileName"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"jsonFileName"}},"right":{"value":"ATN.swift"}}}},{"expression":{"name":{"identifier":"writeFile"},"arguments":[{"name":{"identifier":"lexerAtnJSON"}},{"name":{"identifier":"g"}},{"name":{"identifier":"jsonFileName"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"parserAtnJSON"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"jsonFileName"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"jsonFileName"}},"right":{"value":"ParserATN.swift"}}}},{"expression":{"name":{"identifier":"writeFile"},"arguments":[{"name":{"identifier":"parserAtnJSON"}},{"name":{"identifier":"g"}},{"name":{"identifier":"jsonFileName"}}]}}]}}]}}]}
/codegen/target/swifttarget.java	getLexerOrParserATNJson	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"codeFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":"0"},{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}]}]},"name":{"identifier":"className"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"class "},"right":{"name":{"identifier":"className"}}},"right":{"value":"ATN {\n"}},"right":{"value":"    let jsonString: String = \\""}},"right":{"name":{"identifier":"replaceAll"},"scope":{"name":{"identifier":"serializeTojson"},"arguments":[{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}]},"arguments":[{"value":"\\""},{"value":"\\\\\\""}]}},"right":{"value":"\\"\n}"}},"name":{"identifier":"JSON"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"JSON"}}}]}
/codegen/target/swifttarget.java	writeFile	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutputFileWriter"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"},"scope":{}}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"fileName"}}]},"name":{"identifier":"w"},"type":{"name":{"identifier":"Writer"}}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"w"}},"arguments":[{"name":{"identifier":"content"}}]}},{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"w"}}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"},"scope":{}}}},"arguments":[{"name":{"identifier":"CANNOT_WRITE_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}},{"name":{"identifier":"fileName"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]}]}
/codegen/target/swifttarget.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"targetTemplates"}}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"result"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"loadTemplates"},"scope":{}}}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"SwiftStringRenderer"}}},{"value":"true"}]}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"targetTemplates"}},"arguments":[{"name":{"identifier":"result"}}]}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/swifttarget.java	serializeTojson	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"builder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"version"},{"name":{"identifier":"SERIALIZED_VERSION"},"scope":{"name":{"identifier":"ATNDeserializer"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"uuid"},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"SERIALIZED_UUID"},"scope":{"name":{"identifier":"ATNDeserializer"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"grammarType"},{"name":{"identifier":"ordinal"},"scope":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"atn"}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"maxTokenType"},{"name":{"identifier":"maxTokenType"},"scope":{"name":{"identifier":"atn"}}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"nedges"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"IntervalSet"}},{"name":{"identifier":"Integer"}}]}},"name":{"identifier":"setIndices"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"IntervalSet"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"IntervalSet"}}]}},"name":{"identifier":"sets"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"IntervalSet"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"statesBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntegerList"}}},"name":{"identifier":"nonGreedyStates"},"type":{"name":{"identifier":"IntegerList"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntegerList"}}},"name":{"identifier":"precedenceStates"},"type":{"name":{"identifier":"IntegerList"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"stateBuilder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addNull"},"scope":{"name":{"identifier":"statesBuilder"}}}},{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"stateType"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stateBuilder"}},"arguments":[{"value":"stateType"},{"name":{"identifier":"stateType"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stateBuilder"}},"arguments":[{"value":"ruleIndex"},{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"s"}}}]}},{"condition":{"operator":"AND","left":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"DecisionState"}}},"right":{"name":{"identifier":"nonGreedy"},"scope":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"DecisionState"}}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nonGreedyStates"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}]}}]}},{"condition":{"operator":"AND","left":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStartState"}}},"right":{"name":{"identifier":"isLeftRecursiveRule"},"scope":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStartState"}}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"precedenceStates"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"s"}}},"right":{"name":{"identifier":"LOOP_END"},"scope":{"name":{"identifier":"ATNState"}}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"BlockStartState"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stateBuilder"}},"arguments":[{"value":"detailStateNumber"},{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"endState"},"scope":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"BlockStartState"}}}}}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stateBuilder"}},"arguments":[{"value":"detailStateNumber"},{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"loopBackState"},"scope":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"LoopEndState"}}}}}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"s"}}},"right":{"name":{"identifier":"RULE_STOP"},"scope":{"name":{"identifier":"ATNState"}}}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"nedges"}},"value":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Transition"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"serializationTypes"},"scope":{"name":{"identifier":"Transition"}}},"arguments":[{"name":{"identifier":"getClass"},"scope":{"name":{"identifier":"t"}}}]},"name":{"identifier":"edgeType"},"type":{"type":"INT"}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"edgeType"}},"right":{"name":{"identifier":"SET"},"scope":{"name":{"identifier":"Transition"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"edgeType"}},"right":{"name":{"identifier":"NOT_SET"},"scope":{"name":{"identifier":"Transition"}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"SetTransition"}}},"name":{"identifier":"st"},"type":{"name":{"identifier":"SetTransition"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"setIndices"}},"arguments":[{"name":{"identifier":"set"},"scope":{"name":{"identifier":"st"}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"sets"}},"arguments":[{"name":{"identifier":"set"},"scope":{"name":{"identifier":"st"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"setIndices"}},"arguments":[{"name":{"identifier":"set"},"scope":{"name":{"identifier":"st"}}},{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"sets"}}},"right":{"value":"1"}}]}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"statesBuilder"}},"arguments":[{"name":{"identifier":"stateBuilder"}}]}}]},"iterable":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"states"},{"name":{"identifier":"statesBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"nonGreedyStatesBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nonGreedyStatesBuilder"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"nonGreedyStates"}},"arguments":[{"name":{"identifier":"i"}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"nonGreedyStates"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"nonGreedyStates"},{"name":{"identifier":"nonGreedyStatesBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"precedenceStatesBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"precedenceStatesBuilder"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"precedenceStates"}},"arguments":[{"name":{"identifier":"i"}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"precedenceStates"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"precedenceStates"},{"name":{"identifier":"precedenceStatesBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"ruleToStartStateBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"nrules"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"stateBuilder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"r"}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"ruleStartState"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stateBuilder"}},"arguments":[{"value":"stateNumber"},{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"ruleStartState"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"atn"}}},"right":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ATNType"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"stateBuilder"}},"arguments":[{"value":"ruleToTokenType"},{"index":{"name":{"identifier":"r"}},"name":{"name":{"identifier":"ruleToTokenType"},"scope":{"name":{"identifier":"atn"}}}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleToStartStateBuilder"}},"arguments":[{"name":{"identifier":"stateBuilder"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"r"}},"right":{"name":{"identifier":"nrules"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"r"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"r"}}}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"ruleToStartState"},{"name":{"identifier":"ruleToStartStateBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"modeToStartStateBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"modeToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"nmodes"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"nmodes"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"modeToStartStateBuilder"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"modeStartState"}}}]}}]},"iterable":{"name":{"identifier":"modeToStartState"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"modeStartState"},"type":{"name":{"identifier":"ATNState"}}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"modeToStartState"},{"name":{"identifier":"modeToStartStateBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"nsetsBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"sets"}}},"name":{"identifier":"nsets"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"nsets"},{"name":{"identifier":"nsets"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"setBuilder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}]},"name":{"identifier":"containsEof"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"containsEof"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}},"arguments":[{"value":"0"}]}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"setBuilder"}},"arguments":[{"value":"size"},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"setBuilder"}},"arguments":[{"value":"size"},{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}}},"right":{"value":"1"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"setBuilder"}},"arguments":[{"value":"containsEof"},{"condition":{"name":{"identifier":"containsEof"}},"elseExpr":{"value":"0"},"thenExpr":{"value":"1"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"IntervalsBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"IntervalBuilder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"I"}}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"IntervalBuilder"}},"arguments":[{"value":"a"},{"name":{"identifier":"a"},"scope":{"name":{"identifier":"I"}}}]}}]},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"I"}}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"IntervalBuilder"}},"arguments":[{"value":"a"},{"value":"0"}]}}]},"thenStmt":{"statements":[{}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"IntervalBuilder"}},"arguments":[{"value":"b"},{"name":{"identifier":"b"},"scope":{"name":{"identifier":"I"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"IntervalsBuilder"}},"arguments":[{"name":{"identifier":"IntervalBuilder"}}]}}]},"iterable":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}},"variable":{"variables":[{"name":{"identifier":"I"},"type":{"name":{"identifier":"Interval"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"setBuilder"}},"arguments":[{"value":"Intervals"},{"name":{"identifier":"IntervalsBuilder"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nsetsBuilder"}},"arguments":[{"name":{"identifier":"setBuilder"}}]}}]},"iterable":{"name":{"identifier":"sets"}},"variable":{"variables":[{"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"IntervalSet"},{"name":{"identifier":"nsetsBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"allTransitionsBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"s"}}},"right":{"name":{"identifier":"RULE_STOP"},"scope":{"name":{"identifier":"ATNState"}}}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"transitionsBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"transitionBuilder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalStateException"}},"arguments":[{"value":"Cannot serialize a transition to a removed state."}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"src"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}},"name":{"identifier":"trg"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"serializationTypes"},"scope":{"name":{"identifier":"Transition"}}},"arguments":[{"name":{"identifier":"getClass"},"scope":{"name":{"identifier":"t"}}}]},"name":{"identifier":"edgeType"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"arg1"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"arg2"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"arg3"},"type":{"type":"INT"}}]}},{"selector":{"name":{"identifier":"edgeType"}},"entries":[{"label":{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"trg"}},"value":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"followState"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"target"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg2"}},"value":{"name":{"identifier":"ruleIndex"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg3"}},"value":{"name":{"identifier":"precedence"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}}}}}},{}]},{"label":{"name":{"identifier":"PRECEDENCE"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"PrecedencePredicateTransition"}}},"name":{"identifier":"ppt"},"type":{"name":{"identifier":"PrecedencePredicateTransition"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"precedence"},"scope":{"name":{"identifier":"ppt"}}}}},{}]},{"label":{"name":{"identifier":"PREDICATE"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"PredicateTransition"}}},"name":{"identifier":"pt"},"type":{"name":{"identifier":"PredicateTransition"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"pt"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg2"}},"value":{"name":{"identifier":"predIndex"},"scope":{"name":{"identifier":"pt"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg3"}},"value":{"condition":{"name":{"identifier":"isCtxDependent"},"scope":{"name":{"identifier":"pt"}}},"elseExpr":{"value":"0"},"thenExpr":{"value":"1"}}}},{}]},{"label":{"name":{"identifier":"RANGE"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"from"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RangeTransition"}}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg2"}},"value":{"name":{"identifier":"to"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RangeTransition"}}}}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"arg1"}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"value":"0"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg3"}},"value":{"value":"1"}}}]}},{}]},{"label":{"name":{"identifier":"ATOM"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"label"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"AtomTransition"}}}}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"arg1"}},"right":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"value":"0"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg3"}},"value":{"value":"1"}}}]}},{}]},{"label":{"name":{"identifier":"ACTION"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"ActionTransition"}}},"name":{"identifier":"at"},"type":{"name":{"identifier":"ActionTransition"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"at"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg2"}},"value":{"name":{"identifier":"actionIndex"},"scope":{"name":{"identifier":"at"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg3"}},"value":{"condition":{"name":{"identifier":"isCtxDependent"},"scope":{"name":{"identifier":"at"}}},"elseExpr":{"value":"0"},"thenExpr":{"value":"1"}}}},{}]},{"label":{"name":{"identifier":"SET"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"setIndices"}},"arguments":[{"name":{"identifier":"set"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"SetTransition"}}}}}]}}},{}]},{"label":{"name":{"identifier":"NOT_SET"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"arg1"}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"setIndices"}},"arguments":[{"name":{"identifier":"set"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"SetTransition"}}}}}]}}},{}]},{"label":{"name":{"identifier":"WILDCARD"},"scope":{"name":{"identifier":"Transition"}}},"statements":[{}]}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionBuilder"}},"arguments":[{"value":"src"},{"name":{"identifier":"src"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionBuilder"}},"arguments":[{"value":"trg"},{"name":{"identifier":"trg"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionBuilder"}},"arguments":[{"value":"edgeType"},{"name":{"identifier":"edgeType"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionBuilder"}},"arguments":[{"value":"arg1"},{"name":{"identifier":"arg1"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionBuilder"}},"arguments":[{"value":"arg2"},{"name":{"identifier":"arg2"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionBuilder"}},"arguments":[{"value":"arg3"},{"name":{"identifier":"arg3"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"transitionsBuilder"}},"arguments":[{"name":{"identifier":"transitionBuilder"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"allTransitionsBuilder"}},"arguments":[{"name":{"identifier":"transitionsBuilder"}}]}}]},"iterable":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"allTransitionsBuilder"},{"name":{"identifier":"allTransitionsBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"decisionToState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"ndecisions"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"decisionToStateBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decisionToStateBuilder"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"decStartState"}}}]}}]},"iterable":{"name":{"identifier":"decisionToState"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"decStartState"},"type":{"name":{"identifier":"DecisionState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"decisionToState"},{"name":{"identifier":"decisionToStateBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createArrayBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"lexerActionsBuilder"},"type":{"name":{"identifier":"JsonArrayBuilder"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"atn"}}},"right":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ATNType"}}}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createObjectBuilder"},"scope":{"name":{"identifier":"Json"}}},"name":{"identifier":"lexerActionBuilder"},"type":{"name":{"identifier":"JsonObjectBuilder"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"actionType"},{"name":{"identifier":"ordinal"},"scope":{"name":{"identifier":"getActionType"},"scope":{"name":{"identifier":"action"}}}}]}},{"selector":{"name":{"identifier":"getActionType"},"scope":{"name":{"identifier":"action"}}},"entries":[{"label":{"name":{"identifier":"CHANNEL"}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChannel"},"scope":{"inner":{"expression":{"name":{"identifier":"action"}},"type":{"name":{"identifier":"LexerChannelAction"}}}}},"name":{"identifier":"channel"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"name":{"identifier":"channel"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"label":{"name":{"identifier":"CUSTOM"}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRuleIndex"},"scope":{"inner":{"expression":{"name":{"identifier":"action"}},"type":{"name":{"identifier":"LexerCustomAction"}}}}},"name":{"identifier":"ruleIndex"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getActionIndex"},"scope":{"inner":{"expression":{"name":{"identifier":"action"}},"type":{"name":{"identifier":"LexerCustomAction"}}}}},"name":{"identifier":"actionIndex"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"name":{"identifier":"ruleIndex"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"name":{"identifier":"actionIndex"}}]}},{}]},{"label":{"name":{"identifier":"MODE"}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getMode"},"scope":{"inner":{"expression":{"name":{"identifier":"action"}},"type":{"name":{"identifier":"LexerModeAction"}}}}},"name":{"identifier":"mode"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"name":{"identifier":"mode"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"label":{"name":{"identifier":"MORE"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"value":"0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"label":{"name":{"identifier":"POP_MODE"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"value":"0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"label":{"name":{"identifier":"PUSH_MODE"}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"mode"}},"value":{"name":{"identifier":"getMode"},"scope":{"inner":{"expression":{"name":{"identifier":"action"}},"type":{"name":{"identifier":"LexerPushModeAction"}}}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"name":{"identifier":"mode"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"label":{"name":{"identifier":"SKIP"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"value":"0"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"label":{"name":{"identifier":"TYPE"}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getType"},"scope":{"inner":{"expression":{"name":{"identifier":"action"}},"type":{"name":{"identifier":"LexerTypeAction"}}}}},"name":{"identifier":"type"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"a"},{"name":{"identifier":"type"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionBuilder"}},"arguments":[{"value":"b"},{"value":"0"}]}},{}]},{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"getDefault"},"scope":{"name":{"identifier":"Locale"}}},{"value":"The specified lexer action type %s is not valid."},{"name":{"identifier":"getActionType"},"scope":{"name":{"identifier":"action"}}}]},"name":{"identifier":"message"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"type":{"name":{"identifier":"IllegalArgumentException"}},"arguments":[{"name":{"identifier":"message"}}]}}]}]},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"lexerActionsBuilder"}},"arguments":[{"name":{"identifier":"lexerActionBuilder"}}]}}]},"iterable":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"action"},"type":{"name":{"identifier":"LexerAction"}}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"builder"}},"arguments":[{"value":"lexerActions"},{"name":{"identifier":"lexerActionsBuilder"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"build"},"scope":{"name":{"identifier":"builder"}}},"name":{"identifier":"data"},"type":{"name":{"identifier":"JsonObject"}}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"data"}}}}]}
/codegen/target/swifttarget.java	toString	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"java-escape"},"arguments":[{"name":{"identifier":"formatString"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"replace"},"scope":{"inner":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"String"}}}},"arguments":[{"value":"\\u"},{"value":"\\u005Cu"}]}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{},"arguments":[{"name":{"identifier":"o"}},{"name":{"identifier":"formatString"}},{"name":{"identifier":"locale"}}]}}]}
/codegen/target/swifttarget.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendSwiftStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/cpptarget.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/cpptarget.java	needsHeader	{"statements":[{"expression":{"value":"true"}}]}
/codegen/target/cpptarget.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/cpptarget.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"cppKeywords"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}}]}
/codegen/target/cpptarget.java	encodeIntAsCharEscape	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"0x"},"right":{"name":{"identifier":"toHexString"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"v"}}]}},"right":{"value":", "}}}]}
/codegen/target/cpptarget.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"operator":"DIVIDE","left":{"value":"65535"},"right":{"value":"3"}}}]}
/codegen/target/cpptarget.java	getRecognizerFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"condition":{"name":{"identifier":"header"}},"elseExpr":{"value":"codeFileExtension"},"thenExpr":{"value":"headerFileExtension"}}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRecognizerName"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"name":{"identifier":"recognizerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"recognizerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target/cpptarget.java	getListenerFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"condition":{"name":{"identifier":"header"}},"elseExpr":{"value":"codeFileExtension"},"thenExpr":{"value":"headerFileExtension"}}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"Listener"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target/cpptarget.java	getVisitorFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"condition":{"name":{"identifier":"header"}},"elseExpr":{"value":"codeFileExtension"},"thenExpr":{"value":"headerFileExtension"}}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"Visitor"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target/cpptarget.java	getBaseListenerFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"condition":{"name":{"identifier":"header"}},"elseExpr":{"value":"codeFileExtension"},"thenExpr":{"value":"headerFileExtension"}}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"BaseListener"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target/cpptarget.java	getBaseVisitorFileName	{"statements":[{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"condition":{"name":{"identifier":"header"}},"elseExpr":{"value":"codeFileExtension"},"thenExpr":{"value":"headerFileExtension"}}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"right":{"value":"BaseVisitor"}},"name":{"identifier":"listenerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"listenerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/target/cpptarget.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/cpptarget.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"loadTemplates"},"scope":{}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"Integer"}}},{"type":{"name":{"identifier":"NumberRenderer"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"StringRenderer"}}}]}},{"expression":{"name":{"identifier":"setListener"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"STErrorListener"}},"anonymousClassBody":[{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"compileTimeError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"runTimeError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"IOError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]},"type":{},"name":{"identifier":"internalError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}}},"arguments":[{"name":{"identifier":"STRING_TEMPLATE_WARNING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"cause"},"scope":{"name":{"identifier":"msg"}}},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"msg"}}}]}}]},"type":{},"name":{"identifier":"reportError"},"parameters":[{"isVarArgs":"false","name":{"identifier":"msg"},"type":{"name":{"identifier":"STMessage"}}}]}]}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/cpptarget.java	compileTimeError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/cpptarget.java	runTimeError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/cpptarget.java	IOError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/cpptarget.java	internalError	{"statements":[{"expression":{"name":{"identifier":"reportError"},"arguments":[{"name":{"identifier":"msg"}}]}}]}
/codegen/target/cpptarget.java	reportError	{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}}},"arguments":[{"name":{"identifier":"STRING_TEMPLATE_WARNING"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"cause"},"scope":{"name":{"identifier":"msg"}}},{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"msg"}}}]}}]}
/codegen/target/cpptarget.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendPythonStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/gotarget.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/gotarget.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/gotarget.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"goKeywords"}}]}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"goPredeclaredIdentifiers"}}]}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"goRuleContextInterfaceMethods"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"action"}]}}]}
/codegen/target/gotarget.java	genFile	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"fileName"}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"DO_GOFMT"}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":"."}]}}},"right":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"fileName"}},"arguments":[{"value":".go"}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"gofmt"},"arguments":[{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"getOutputDirectory"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getCodeGenerator"}}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]},{"name":{"identifier":"fileName"}}]}]}}]}}]}
/codegen/target/gotarget.java	gofmt	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ProcessBuilder"}},"arguments":[{"value":"gofmt"},{"value":"-w"},{"value":"-s"},{"name":{"identifier":"getPath"},"scope":{"name":{"identifier":"fileName"}}}]},"name":{"identifier":"gofmtBuilder"},"type":{"name":{"identifier":"ProcessBuilder"}}}]}},{"expression":{"name":{"identifier":"redirectErrorStream"},"scope":{"name":{"identifier":"gofmtBuilder"}},"arguments":[{"value":"true"}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"start"},"scope":{"name":{"identifier":"gofmtBuilder"}}},"name":{"identifier":"gofmt"},"type":{"name":{"identifier":"Process"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"gofmt"}}},"name":{"identifier":"stdout"},"type":{"name":{"identifier":"InputStream"}}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"type":"BYTE"},"levels":[{"dimension":{"operator":"LEFT_SHIFT","left":{"value":"1"},"right":{"value":"10"}}}]},"name":{"identifier":"buf"},"type":{"origin":"TYPE","componentType":{"type":"BYTE"}}}]}},{"body":{},"compare":{"operator":"GREATER","left":{"name":{"identifier":"l"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"l"},"type":{"type":"INT"}}]}],"update":[{"operator":"ASSIGN","target":{"name":{"identifier":"l"}},"value":{"name":{"identifier":"read"},"scope":{"name":{"identifier":"stdout"}},"arguments":[{"name":{"identifier":"buf"}}]}}]},{"expression":{"name":{"identifier":"waitFor"},"scope":{"name":{"identifier":"gofmt"}}}}]},"catchClauses":[{"body":{},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"IOException"}}}},{"body":{"statements":[{"expression":{"name":{"identifier":"interrupt"},"scope":{"name":{"identifier":"currentThread"},"scope":{"name":{"identifier":"Thread"}}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"forward"},"type":{"name":{"identifier":"InterruptedException"}}}}]}]}
/codegen/target/gotarget.java	encodeIntAsCharEscape	{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"v"}}]}}]}
/codegen/target/gotarget.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"operator":"XOR","left":{"value":"2"},"right":{"value":"31"}}}]}
/codegen/target/gotarget.java	getInlineTestSetWordSize	{"statements":[{"expression":{"value":"32"}}]}
/codegen/target/gotarget.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/gotarget.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"loadTemplates"},"scope":{}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"JavaStringRenderer"}}},{"value":"true"}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/gotarget.java	getRecognizerFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCodeGenerator"}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"g"}},"right":{}}},{"expression":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"g"}}},"entries":[{"label":{"name":{"identifier":"PARSER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"condition":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"Parser"}]},"elseExpr":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"thenExpr":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"0"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"6"}}]}}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"}}},"right":{"value":"_parser.go"}}}]},{"label":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"}},"value":{"condition":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"Lexer"}]},"elseExpr":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"thenExpr":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"0"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"5"}}]}}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"}}},"right":{"value":"_lexer.go"}}}]},{"label":{"name":{"identifier":"COMBINED"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"_parser.go"}}}]},{"statements":[{"expression":{"value":"INVALID_FILE_NAME"}}]}]}]}
/codegen/target/gotarget.java	getListenerFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCodeGenerator"}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"_listener.go"}}}]}
/codegen/target/gotarget.java	getVisitorFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCodeGenerator"}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"_visitor.go"}}}]}
/codegen/target/gotarget.java	getBaseListenerFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCodeGenerator"}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"_base_listener.go"}}}]}
/codegen/target/gotarget.java	getBaseVisitorFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCodeGenerator"}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"toLowerCase"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"_base_visitor.go"}}}]}
/codegen/target/gotarget.java	toString	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"java-escape"},"arguments":[{"name":{"identifier":"formatString"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"replace"},"scope":{"inner":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"String"}}}},"arguments":[{"value":"\\u"},{"value":"\\u005Cu"}]}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{},"arguments":[{"name":{"identifier":"o"}},{"name":{"identifier":"formatString"}},{"name":{"identifier":"locale"}}]}}]}
/codegen/target/gotarget.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendPythonStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/javatarget.java	getVersion	{"statements":[{"expression":{"name":{"identifier":"VERSION"},"scope":{"name":{"identifier":"Tool"}}}}]}
/codegen/target/javatarget.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/javatarget.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"javaKeywords"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}}]}
/codegen/target/javatarget.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"operator":"DIVIDE","left":{"value":"65535"},"right":{"value":"3"}}}]}
/codegen/target/javatarget.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/javatarget.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"targetTemplates"}}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"result"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"loadTemplates"},"scope":{}}}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"JavaStringRenderer"}}},{"value":"true"}]}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"targetTemplates"}},"arguments":[{"name":{"identifier":"result"}}]}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/javatarget.java	toString	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"java-escape"},"arguments":[{"name":{"identifier":"formatString"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"replace"},"scope":{"inner":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"String"}}}},"arguments":[{"value":"\\u"},{"value":"\\u005Cu"}]}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{},"arguments":[{"name":{"identifier":"o"}},{"name":{"identifier":"formatString"}},{"name":{"identifier":"locale"}}]}}]}
/codegen/target/javatarget.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendJavaStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/python3target.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Integer"}}}}]}
/codegen/target/python3target.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/python3target.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"loadTemplates"},"scope":{}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"PythonStringRenderer"}}},{"value":"true"}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/python3target.java	toString	{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{},"arguments":[{"name":{"identifier":"o"}},{"name":{"identifier":"formatString"}},{"name":{"identifier":"locale"}}]}}]}
/codegen/target/python3target.java	wantsBaseListener	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/python3target.java	wantsBaseVisitor	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/python3target.java	supportsOverloadedMethods	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/python3target.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/python3target.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/python3target.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"python3Keywords"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}}]}
/codegen/target/python3target.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendPythonStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/python2target.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/python2target.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"loadTemplates"},"scope":{}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"PythonStringRenderer"}}},{"value":"true"}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/python2target.java	toString	{"statements":[{"expression":{"name":{"identifier":"toString"},"scope":{},"arguments":[{"name":{"identifier":"o"}},{"name":{"identifier":"formatString"}},{"name":{"identifier":"locale"}}]}}]}
/codegen/target/python2target.java	wantsBaseListener	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/python2target.java	wantsBaseVisitor	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/python2target.java	supportsOverloadedMethods	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/python2target.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/python2target.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/python2target.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"python2Keywords"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}}]}
/codegen/target/python2target.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendPythonStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/target/javascripttarget.java	getVersion	{"statements":[{"expression":{"value":"4.7.1"}}]}
/codegen/target/javascripttarget.java	getBadWords	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"badWords"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addBadWords"}}}]}},{"expression":{"name":{"identifier":"badWords"}}}]}
/codegen/target/javascripttarget.java	addBadWords	{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"javaScriptKeywords"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"rule"}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"badWords"}},"arguments":[{"value":"parserRule"}]}}]}
/codegen/target/javascripttarget.java	encodeIntAsCharEscape	{"statements":[{"condition":{"operator":"OR","left":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"MIN_VALUE"},"scope":{"name":{"identifier":"Character"}}}},"right":{"operator":"GREATER","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Character"}}}}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IllegalArgumentException"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"Cannot encode the specified value: %d"},{"name":{"identifier":"v"}}]}]}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0"}},"right":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"targetCharValueEscape"}}}}},"right":{"operator":"NOT_EQUALS","left":{"index":{"name":{"identifier":"v"}},"name":{"name":{"identifier":"targetCharValueEscape"}}},"right":{}}},"thenStmt":{"statements":[{"expression":{"index":{"name":{"identifier":"v"}},"name":{"name":{"identifier":"targetCharValueEscape"}}}}]}},{"condition":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"v"}},"right":{"value":"0x20"}},"right":{"operator":"LESS","left":{"name":{"identifier":"v"}},"right":{"value":"127"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"expression":{"name":{"identifier":"v"}},"type":{"type":"CHAR"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"toHexString"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"operator":"BINARY_OR","left":{"name":{"identifier":"v"}},"right":{"value":"0x10000"}}]},"arguments":[{"value":"1"},{"value":"5"}]},"name":{"identifier":"hex"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"value":"\\u"},"right":{"name":{"identifier":"hex"}}}}]}
/codegen/target/javascripttarget.java	getSerializedATNSegmentLimit	{"statements":[{"expression":{"operator":"XOR","left":{"value":"2"},"right":{"value":"31"}}}]}
/codegen/target/javascripttarget.java	getInlineTestSetWordSize	{"statements":[{"expression":{"value":"32"}}]}
/codegen/target/javascripttarget.java	visibleGrammarSymbolCausesIssueInGeneratedCode	{"statements":[{"expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"getBadWords"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}
/codegen/target/javascripttarget.java	loadTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"loadTemplates"},"scope":{}},"name":{"identifier":"result"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"name":{"identifier":"registerRenderer"},"scope":{"name":{"identifier":"result"}},"arguments":[{"type":{"name":{"identifier":"String"}}},{"type":{"name":{"identifier":"JavaStringRenderer"}}},{"value":"true"}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/target/javascripttarget.java	toString	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"java-escape"},"arguments":[{"name":{"identifier":"formatString"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"replace"},"scope":{"inner":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"String"}}}},"arguments":[{"value":"\\u"},{"value":"\\u005Cu"}]}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{},"arguments":[{"name":{"identifier":"o"}},{"name":{"identifier":"formatString"}},{"name":{"identifier":"locale"}}]}}]}
/codegen/target/javascripttarget.java	wantsBaseListener	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/javascripttarget.java	wantsBaseVisitor	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/javascripttarget.java	supportsOverloadedMethods	{"statements":[{"expression":{"value":"false"}}]}
/codegen/target/javascripttarget.java	appendUnicodeEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"appendJavaStyleEscapedCodePoint"},"scope":{"name":{"identifier":"UnicodeEscapes"}},"arguments":[{"name":{"identifier":"codePoint"}},{"name":{"identifier":"sb"}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	getMinFrequencies	{"statements":[{"check":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"minFrequencies"}}},"right":{"value":"1"}}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}},"right":{"name":{"identifier":"SENTINEL"}}}},{"check":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"SENTINEL"}}}},{"expression":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}}}]}
/codegen/model/elementfrequenciesvisitor.java	getErrorManager	{"statements":[{"expression":{"name":{"identifier":"getErrorManager"},"scope":{}}}]}
/codegen/model/elementfrequenciesvisitor.java	combineMax	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"b"}},{"value":"1"}]},"name":{"identifier":"result"},"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"result"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]}},"value":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"a"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"result"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]},"name":{"identifier":"slot"},"type":{"name":{"identifier":"MutableInt"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"slot"}}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"v"},"scope":{"name":{"identifier":"slot"}}},{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}}]}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"b"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/model/elementfrequenciesvisitor.java	combineMin	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"b"}},"right":{"name":{"identifier":"SENTINEL"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"a"}}}]}},{"check":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{"name":{"identifier":"SENTINEL"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"b"}},{"name":{"identifier":"MAX_VALUE"},"scope":{"name":{"identifier":"Integer"}}}]},"name":{"identifier":"result"},"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}},"value":{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"count"},"scope":{"name":{"identifier":"a"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]},{"name":{"identifier":"count"},"scope":{"name":{"identifier":"b"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]}]}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"result"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/model/elementfrequenciesvisitor.java	combineAndClip	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"result"},"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"result"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"a"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"body":{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"result"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"b"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}},"value":{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}},{"name":{"identifier":"clip"}}]}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"result"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/codegen/model/elementfrequenciesvisitor.java	tokenRef	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"frequencies"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	ruleRef	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"frequencies"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	enterAlternative	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitAlternative	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"name":{"identifier":"combineMax"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}}]}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"name":{"identifier":"combineMin"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}}]}]}}]}
/codegen/model/elementfrequenciesvisitor.java	enterElement	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitElement	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"value":"2"}]}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"value":"2"}]}]}}]}
/codegen/model/elementfrequenciesvisitor.java	enterBlockSet	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitBlockSet	{"statements":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}},"value":{"value":"1"}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"frequencies"}}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}}},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}}}}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"value":"2"}]}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"value":"2"}]}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitSubrule	{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"CLOSURE"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"POSITIVE_CLOSURE"}}}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}},"value":{"value":"2"}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"frequencies"}}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"CLOSURE"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"OPTIONAL"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}}}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	enterLexerAlternative	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitLexerAlternative	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"name":{"identifier":"combineMax"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}}]}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"name":{"identifier":"combineMin"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}}]}]}}]}
/codegen/model/elementfrequenciesvisitor.java	enterLexerElement	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitLexerElement	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"frequencies"}},"arguments":[{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"frequencies"}}},{"value":"2"}]}]}},{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"minFrequencies"}},"arguments":[{"name":{"identifier":"combineAndClip"},"arguments":[{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"minFrequencies"}}},{"value":"2"}]}]}}]}
/codegen/model/elementfrequenciesvisitor.java	exitLexerSubrule	{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"CLOSURE"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"POSITIVE_CLOSURE"}}}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"v"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}},"value":{"value":"2"}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"frequencies"}}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"MutableInt"}}]}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tree"}}},"right":{"name":{"identifier":"CLOSURE"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"minFrequencies"}}}}}]}}]}
/codegen/model/decl/contextgetterdecl.java	getArgType	{"statements":[{"expression":{"value":""}}]}
/codegen/model/decl/contextgetterdecl.java	hashCode	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"initialize"},"scope":{"name":{"identifier":"MurmurHash"}}},"name":{"identifier":"hash"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hash"}},"value":{"name":{"identifier":"update"},"scope":{"name":{"identifier":"MurmurHash"}},"arguments":[{"name":{"identifier":"hash"}},{"name":{"identifier":"name"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hash"}},"value":{"name":{"identifier":"update"},"scope":{"name":{"identifier":"MurmurHash"}},"arguments":[{"name":{"identifier":"hash"}},{"name":{"identifier":"getArgType"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hash"}},"value":{"name":{"identifier":"finish"},"scope":{"name":{"identifier":"MurmurHash"}},"arguments":[{"name":{"identifier":"hash"}},{"value":"2"}]}}},{"expression":{"name":{"identifier":"hash"}}}]}
/codegen/model/decl/contextgetterdecl.java	equals	{"statements":[{"condition":{"operator":"EQUALS","left":{},"right":{"name":{"identifier":"obj"}}},"thenStmt":{"expression":{"value":"true"}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"ContextGetterDecl"}}}}},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"}},"arguments":[{"name":{"identifier":"name"},"scope":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"Decl"}}}}}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getArgType"}},"arguments":[{"name":{"identifier":"getArgType"},"scope":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"ContextGetterDecl"}}}}}]}}}]}
/codegen/model/decl/codeblock.java	addLocalDecl	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"locals"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"locals"}},"value":{"type":{"name":{"identifier":"OrderedHashSet"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"locals"}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isLocal"},"scope":{"name":{"identifier":"d"}}},"value":{"value":"true"}}}]}
/codegen/model/decl/codeblock.java	addPreambleOp	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"preamble"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"preamble"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"preamble"}},"arguments":[{"name":{"identifier":"op"}}]}}]}
/codegen/model/decl/codeblock.java	addOp	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ops"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ops"}},"arguments":[{"name":{"identifier":"op"}}]}}]}
/codegen/model/decl/codeblock.java	insertOp	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ops"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ops"}},"arguments":[{"name":{"identifier":"i"}},{"name":{"identifier":"op"}}]}}]}
/codegen/model/decl/codeblock.java	addOps	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ops"},"scope":{}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"},"scope":{}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}}}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"ops"},"scope":{}},"arguments":[{"name":{"identifier":"ops"}}]}}]}
/codegen/model/decl/altlabelstructdecl.java	addDispatchMethods	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"dispatchMethods"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"DispatchMethod"}}]}}}},{"condition":{"name":{"identifier":"gen_listener"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dispatchMethods"}},"arguments":[{"type":{"name":{"identifier":"ListenerDispatchMethod"}},"arguments":[{"name":{"identifier":"factory"}},{"value":"true"}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dispatchMethods"}},"arguments":[{"type":{"name":{"identifier":"ListenerDispatchMethod"}},"arguments":[{"name":{"identifier":"factory"}},{"value":"false"}]}]}}]}},{"condition":{"name":{"identifier":"gen_visitor"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dispatchMethods"}},"arguments":[{"type":{"name":{"identifier":"VisitorDispatchMethod"}},"arguments":[{"name":{"identifier":"factory"}}]}]}}]}}]}
/codegen/model/decl/altlabelstructdecl.java	hashCode	{"statements":[{"expression":{"name":{"identifier":"hashCode"},"scope":{"name":{"identifier":"name"}}}}]}
/codegen/model/decl/altlabelstructdecl.java	equals	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"obj"}},"right":{}},"thenStmt":{"expression":{"value":"true"}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"AltLabelStructDecl"}}}}},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"}},"arguments":[{"name":{"identifier":"name"},"scope":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"AltLabelStructDecl"}}}}}]}}]}
/codegen/model/decl/contextrulelistindexedgetterdecl.java	getArgType	{"statements":[{"expression":{"value":"int"}}]}
/codegen/model/decl/contexttokenlistindexedgetterdecl.java	getArgType	{"statements":[{"expression":{"value":"int"}}]}
/codegen/model/decl/decl.java	hashCode	{"statements":[{"expression":{"name":{"identifier":"hashCode"},"scope":{"name":{"identifier":"name"}}}}]}
/codegen/model/decl/decl.java	equals	{"statements":[{"condition":{"operator":"EQUALS","left":{},"right":{"name":{"identifier":"obj"}}},"thenStmt":{"expression":{"value":"true"}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"Decl"}}}}},"thenStmt":{"expression":{"value":"false"}}},{"condition":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"ContextGetterDecl"}}},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"}},"arguments":[{"name":{"identifier":"name"},"scope":{"inner":{"expression":{"name":{"identifier":"obj"}},"type":{"name":{"identifier":"Decl"}}}}}]}}]}
/codegen/model/decl/structdecl.java	addDispatchMethods	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"dispatchMethods"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"DispatchMethod"}}]}}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasAltSpecificContexts"},"scope":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"gen_listener"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dispatchMethods"}},"arguments":[{"type":{"name":{"identifier":"ListenerDispatchMethod"}},"arguments":[{"name":{"identifier":"factory"}},{"value":"true"}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dispatchMethods"}},"arguments":[{"type":{"name":{"identifier":"ListenerDispatchMethod"}},"arguments":[{"name":{"identifier":"factory"}},{"value":"false"}]}]}}]}},{"condition":{"name":{"identifier":"gen_visitor"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dispatchMethods"}},"arguments":[{"type":{"name":{"identifier":"VisitorDispatchMethod"}},"arguments":[{"name":{"identifier":"factory"}}]}]}}]}}]}}]}
/codegen/model/decl/structdecl.java	addDecl	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ctx"},"scope":{"name":{"identifier":"d"}}},"value":{}}},{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"ContextGetterDecl"}}},"elseStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"attrs"}},"arguments":[{"name":{"identifier":"d"}}]}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"getters"}},"arguments":[{"name":{"identifier":"d"}}]}}},{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"TokenTypeDecl"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"TokenListDecl"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"TokenDecl"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"RuleContextListDecl"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"RuleContextDecl"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"AttributeDecl"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"attributeDecls"}},"arguments":[{"name":{"identifier":"d"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleContextDecls"}},"arguments":[{"name":{"identifier":"d"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleContextListDecls"}},"arguments":[{"name":{"identifier":"d"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"tokenDecls"}},"arguments":[{"name":{"identifier":"d"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"tokenListDecls"}},"arguments":[{"name":{"identifier":"d"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"tokenTypeDecls"}},"arguments":[{"name":{"identifier":"d"}}]}}]}}]}
/codegen/model/decl/structdecl.java	addDecl	{"statements":[{"expression":{"name":{"identifier":"addDecl"},"arguments":[{"type":{"name":{"identifier":"AttributeDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"a"}}]}]}}]}
/codegen/model/decl/structdecl.java	addDecls	{"statements":[{"body":{"expression":{"name":{"identifier":"addDecl"},"arguments":[{"name":{"identifier":"a"}}]}},"iterable":{"name":{"identifier":"attrList"}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}}]}
/codegen/model/decl/structdecl.java	implementInterface	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"interfaces"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"interfaces"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"OutputModelObject"}}]}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"interfaces"}},"arguments":[{"name":{"identifier":"value"}}]}}]}
/codegen/model/decl/structdecl.java	addExtensionMember	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"extensionMembers"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"extensionMembers"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"OutputModelObject"}}]}}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"extensionMembers"}},"arguments":[{"name":{"identifier":"member"}}]}}]}
/codegen/model/decl/structdecl.java	isEmpty	{"statements":[{"expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"attrs"}}}}]}
/codegen/model/choice.java	addPreambleOp	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"preamble"}},"arguments":[{"name":{"identifier":"op"}}]}}]}
/codegen/model/choice.java	getAltLookaheadAsStringLists	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}]}},"name":{"identifier":"altLook"},"type":{"name":{"identifier":"List"},"typeArguments":[{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altLook"}},"arguments":[{"name":{"identifier":"getTokenTypesAsTargetLabels"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}},"arguments":[{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"s"}}}]}]}}]},"iterable":{"name":{"identifier":"altLookSets"}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"altLook"}}}]}
/codegen/model/choice.java	addCodeForLookaheadTempVar	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getLL1Test"},"scope":{"name":{"identifier":"factory"}},"arguments":[{"name":{"identifier":"look"}},{"name":{"identifier":"ast"}}]},"name":{"identifier":"testOps"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"find"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"testOps"}},{"type":{"name":{"identifier":"TestSetInline"}}}]},"name":{"identifier":"expr"},"type":{"name":{"identifier":"TestSetInline"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"expr"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TokenTypeDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"varName"},"scope":{"name":{"identifier":"expr"}}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"expression":{"name":{"identifier":"addLocalDecl"},"scope":{"name":{"identifier":"getCurrentRuleFunction"},"scope":{"name":{"identifier":"factory"}}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CaptureNextTokenType"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"varName"},"scope":{"name":{"identifier":"expr"}}}]},"name":{"identifier":"nextType"},"type":{"name":{"identifier":"CaptureNextTokenType"}}}]}},{"expression":{"name":{"identifier":"addPreambleOp"},"arguments":[{"name":{"identifier":"nextType"}}]}}]}},{"expression":{"name":{"identifier":"expr"}}}]}
/codegen/model/choice.java	getThrowNoViableAlt	{"statements":[{"expression":{"type":{"name":{"identifier":"ThrowNoViableAlt"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"expecting"}}]}}]}
/codegen/model/rulefunction.java	addContextGetters	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getUnlabeledAltASTs"},"scope":{"name":{"identifier":"r"}}},"name":{"identifier":"altsNoLabels"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altsNoLabels"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDeclsForAllElements"},"arguments":[{"name":{"identifier":"altsNoLabels"}}]},"name":{"identifier":"decls"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}]}},{"body":{"expression":{"name":{"identifier":"addDecl"},"scope":{"name":{"identifier":"ruleCtx"}},"arguments":[{"name":{"identifier":"d"}}]}},"iterable":{"name":{"identifier":"decls"}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altLabelCtxs"}},"value":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"AltLabelStructDecl"}}]}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAltLabels"},"scope":{"name":{"identifier":"r"}}},"name":{"identifier":"labels"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labels"}},"right":{}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}},"name":{"identifier":"alts"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"AltAST"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"name":{"identifier":"b"},"scope":{"name":{"identifier":"pair"}}}]}}]},"iterable":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDeclsForAllElements"},"arguments":[{"name":{"identifier":"alts"}}]},"name":{"identifier":"decls"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"altNum"},"type":{"name":{"identifier":"Integer"}}}]}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"altNum"}},"name":{"name":{"identifier":"altToContext"}}},"value":{"type":{"name":{"identifier":"AltLabelStructDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"r"}},{"name":{"identifier":"altNum"}},{"name":{"identifier":"label"}}]}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"altLabelCtxs"}},"arguments":[{"name":{"identifier":"label"}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"altLabelCtxs"}},"arguments":[{"name":{"identifier":"label"}},{"index":{"name":{"identifier":"altNum"}},"name":{"name":{"identifier":"altToContext"}}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"addDecl"},"scope":{"index":{"name":{"identifier":"altNum"}},"name":{"name":{"identifier":"altToContext"}}},"arguments":[{"name":{"identifier":"d"}}]}}]},"iterable":{"name":{"identifier":"decls"}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}}]},"iterable":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"labels"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"AltAST"}}]}]}]}}]}}]}}]}
/codegen/model/rulefunction.java	fillNamedActions	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"finallyAction"},"scope":{"name":{"identifier":"r"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"finallyAction"}},"value":{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"finallyAction"},"scope":{"name":{"identifier":"r"}}}]}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"namedActions"}},"value":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Action"}}]}}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"ast"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"name"}},{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"ast"}}]}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"r"}}}},"variable":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}}]}
/codegen/model/rulefunction.java	getDeclsForAllElements	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"needsList"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"nonOptional"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}},"name":{"identifier":"allRefs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"variables":[{"initializer":{"value":"true"},"name":{"identifier":"firstAlt"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}},"arguments":[{"name":{"identifier":"RULE_REF"}},{"name":{"identifier":"TOKEN_REF"}}]},"name":{"identifier":"reftypes"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"reftypes"}}]},"name":{"identifier":"refs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"allRefs"}},"arguments":[{"name":{"identifier":"refs"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getElementFrequenciesForAlt"},"arguments":[{"name":{"identifier":"ast"}}]},"name":{"identifier":"minAndAltFreq"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]},{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"minAndAltFreq"}}},"name":{"identifier":"minFreq"},"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"minAndAltFreq"}}},"name":{"identifier":"altFreq"},"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}},"name":{"identifier":"refLabelName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"count"},"scope":{"name":{"identifier":"altFreq"}},"arguments":[{"name":{"identifier":"refLabelName"}}]},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"needsList"}},"arguments":[{"name":{"identifier":"refLabelName"}}]}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"firstAlt"}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"count"},"scope":{"name":{"identifier":"minFreq"}},"arguments":[{"name":{"identifier":"refLabelName"}}]},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"nonOptional"}},"arguments":[{"name":{"identifier":"refLabelName"}}]}}]}}]},"iterable":{"name":{"identifier":"refs"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"count"},"scope":{"name":{"identifier":"minFreq"}},"arguments":[{"name":{"identifier":"ref"}}]},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"nonOptional"}},"arguments":[{"name":{"identifier":"ref"}}]}}]}}]},"iterable":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"nonOptional"}},"arguments":[{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"nonOptional"}}}}]}]},"variable":{"variables":[{"name":{"identifier":"ref"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstAlt"}},"value":{"value":"false"}}}]},"iterable":{"name":{"identifier":"altASTs"}},"variable":{"variables":[{"name":{"identifier":"ast"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashSet"},"typeArguments":[{"name":{"identifier":"Decl"}}]}},"name":{"identifier":"decls"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}},"name":{"identifier":"refLabelName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDeclForAltElement"},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"refLabelName"}},{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"needsList"}},"arguments":[{"name":{"identifier":"refLabelName"}}]},{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"nonOptional"}},"arguments":[{"name":{"identifier":"refLabelName"}}]}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"name":{"identifier":"d"}}]}}]},"iterable":{"name":{"identifier":"allRefs"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"decls"}}}]}
/codegen/model/rulefunction.java	getElementFrequenciesForAlt	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ElementFrequenciesVisitor"}},"arguments":[{"type":{"name":{"identifier":"CommonTreeNodeStream"}},"arguments":[{"type":{"name":{"identifier":"GrammarASTAdaptor"}}},{"name":{"identifier":"ast"}}]}]},"name":{"identifier":"visitor"},"type":{"name":{"identifier":"ElementFrequenciesVisitor"}}}]}},{"expression":{"name":{"identifier":"outerAlternative"},"scope":{"name":{"identifier":"visitor"}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"frequencies"},"scope":{"name":{"identifier":"visitor"}}}},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"type":{"name":{"identifier":"Pair"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}},{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]}},{"expression":{"type":{"name":{"identifier":"Pair"}},"arguments":[{"name":{"identifier":"getMinFrequencies"},"scope":{"name":{"identifier":"visitor"}}},{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"frequencies"},"scope":{"name":{"identifier":"visitor"}}}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ex"}}]}},{"expression":{"type":{"name":{"identifier":"Pair"}},"arguments":[{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}},{"type":{"name":{"identifier":"FrequencySet"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"RecognitionException"}}}}]}]}
/codegen/model/rulefunction.java	getDeclForAltElement	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Decl"}}]}},"name":{"identifier":"decls"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"RULE_REF"}}},"elseStmt":{"statements":[{"condition":{"name":{"identifier":"needList"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"type":{"name":{"identifier":"ContextTokenGetterDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"refLabelName"}},{"name":{"identifier":"optional"}}]}]}}]},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"supportsOverloadedMethods"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"type":{"name":{"identifier":"ContextTokenListGetterDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"refLabelName"}}]}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"type":{"name":{"identifier":"ContextTokenListIndexedGetterDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"refLabelName"}}]}]}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}]},"name":{"identifier":"rref"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRuleFunctionContextStructName"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}},"arguments":[{"name":{"identifier":"rref"}}]},"name":{"identifier":"ctxName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"needList"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"type":{"name":{"identifier":"ContextRuleGetterDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"refLabelName"}},{"name":{"identifier":"ctxName"}},{"name":{"identifier":"optional"}}]}]}}]},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"supportsOverloadedMethods"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"type":{"name":{"identifier":"ContextRuleListGetterDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"refLabelName"}},{"name":{"identifier":"ctxName"}}]}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"decls"}},"arguments":[{"type":{"name":{"identifier":"ContextRuleListIndexedGetterDecl"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"refLabelName"}},{"name":{"identifier":"ctxName"}}]}]}}]}}]}},{"expression":{"name":{"identifier":"decls"}}}]}
/codegen/model/rulefunction.java	addLocalDecl	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"locals"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"locals"}},"value":{"type":{"name":{"identifier":"OrderedHashSet"},"typeArguments":[{"name":{"identifier":"Decl"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"locals"}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isLocal"},"scope":{"name":{"identifier":"d"}}},"value":{"value":"true"}}}]}
/codegen/model/rulefunction.java	addContextDecl	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOuterMostAltCodeBlock"},"scope":{"name":{"identifier":"d"}}},"name":{"identifier":"alt"},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alt"}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabelCtxs"}},"right":{}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altLabelCtxs"}},"arguments":[{"name":{"identifier":"altLabel"}}]},"name":{"identifier":"altCtx"},"type":{"name":{"identifier":"AltLabelStructDecl"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altCtx"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addDecl"},"scope":{"name":{"identifier":"altCtx"}},"arguments":[{"name":{"identifier":"d"}}]}},{}]}}]}},{"expression":{"name":{"identifier":"addDecl"},"scope":{"name":{"identifier":"ruleCtx"}},"arguments":[{"name":{"identifier":"d"}}]}}]}
/codegen/model/ll1loop.java	addIterationOp	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"iteration"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"iteration"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"iteration"}},"arguments":[{"name":{"identifier":"op"}}]}}]}
/codegen/model/ll1loop.java	addCodeForLoopLookaheadTempVar	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"addCodeForLookaheadTempVar"},"arguments":[{"name":{"identifier":"look"}}]},"name":{"identifier":"expr"},"type":{"name":{"identifier":"TestSetInline"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"expr"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CaptureNextTokenType"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"varName"},"scope":{"name":{"identifier":"expr"}}}]},"name":{"identifier":"nextType"},"type":{"name":{"identifier":"CaptureNextTokenType"}}}]}},{"expression":{"name":{"identifier":"addIterationOp"},"arguments":[{"name":{"identifier":"nextType"}}]}}]}},{"expression":{"name":{"identifier":"expr"}}}]}
/codegen/model/testsetinline.java	createBitsets	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Bitset"}}]}},"name":{"identifier":"bitsetList"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Bitset"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"bitsetList"}}}},"elseExpr":{},"thenExpr":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"bitsetList"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"bitsetList"}}},"right":{"value":"1"}}]}},"name":{"identifier":"current"},"type":{"name":{"identifier":"Bitset"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"current"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"ttype"}},"right":{"inner":{"operator":"MINUS","left":{"operator":"PLUS","left":{"name":{"identifier":"shift"},"scope":{"name":{"identifier":"current"}}},"right":{"name":{"identifier":"wordSize"}}},"right":{"value":"1"}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"current"}},"value":{"type":{"name":{"identifier":"Bitset"}}}}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"useZeroOffset"}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ttype"}},"right":{"value":"0"}}},"right":{"operator":"LESS","left":{"name":{"identifier":"ttype"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"wordSize"}},"right":{"value":"1"}}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"shift"},"scope":{"name":{"identifier":"current"}}},"value":{"name":{"identifier":"ttype"}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"shift"},"scope":{"name":{"identifier":"current"}}},"value":{"value":"0"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"bitsetList"}},"arguments":[{"name":{"identifier":"current"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ttypes"},"scope":{"name":{"identifier":"current"}}},"arguments":[{"name":{"identifier":"getTokenTypeAsTargetLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}},"arguments":[{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},{"name":{"identifier":"ttype"}}]}]}}]},"iterable":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"set"}}},"variable":{"variables":[{"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"bitsetList"}},"arguments":[{"elementType":{"name":{"identifier":"Bitset"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"bitsetList"}}}}]}]}}]}
/codegen/model/loop.java	addIterationOp	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"iteration"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"iteration"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"iteration"}},"arguments":[{"name":{"identifier":"op"}}]}}]}
/codegen/model/outputfile.java	buildNamedActions	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Action"}}]}},"name":{"identifier":"namedActions"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Action"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"ast"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"namedActions"}},"arguments":[{"name":{"identifier":"name"}},{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"ast"}}]}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"namedActions"}}}]}
/codegen/model/srcop.java	getOuterMostAltCodeBlock	{"statements":[{"condition":{"expression":{},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}},"thenStmt":{"statements":[{"expression":{"expression":{},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"enclosingBlock"}},"name":{"identifier":"p"},"type":{"name":{"identifier":"CodeBlock"}}}]}},{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"p"}},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}},"thenStmt":{"statements":[{"expression":{"expression":{"name":{"identifier":"p"}},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"enclosingBlock"},"scope":{"name":{"identifier":"p"}}}}}]},"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"p"}},"right":{}}},{"expression":{}}]}
/codegen/model/srcop.java	getContextName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOuterMostAltCodeBlock"}},"name":{"identifier":"alt"},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"alt"}},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"alt"}}},"right":{}}},"thenStmt":{"expression":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"alt"}}}}},{"expression":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"enclosingRuleRunction"}}}}]}
/codegen/model/matchtoken.java	getLabels	{"statements":[{"expression":{"name":{"identifier":"labels"}}}]}
/codegen/model/recognizer.java	translateTokenStringsToTarget	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"clone"},"scope":{"name":{"identifier":"tokenStrings"}}},"name":{"identifier":"result"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"result"}}},"value":{"name":{"identifier":"translateTokenStringToTarget"},"arguments":[{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"tokenStrings"}}},{"name":{"identifier":"gen"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"tokenStrings"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"result"}}},"right":{"value":"1"}},"name":{"identifier":"lastTrueEntry"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"lastTrueEntry"}}}}]},"condition":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"lastTrueEntry"}},"right":{"value":"0"}},"right":{"operator":"EQUALS","left":{"index":{"name":{"identifier":"lastTrueEntry"}},"name":{"name":{"identifier":"result"}}},"right":{}}}},{"condition":{"operator":"LESS","left":{"name":{"identifier":"lastTrueEntry"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"result"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"name":{"identifier":"copyOf"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"result"}},{"operator":"PLUS","left":{"name":{"identifier":"lastTrueEntry"}},"right":{"value":"1"}}]}}}]}},{"expression":{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"result"}}]}}]}
/codegen/model/recognizer.java	translateTokenStringToTarget	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tokenName"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"tokenName"}},"arguments":[{"value":"0"}]},"right":{"value":"\'"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"getTargetStringLiteralFromString"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"tokenName"}},{"value":"true"}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"addQuotes"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTargetStringLiteralFromANTLRStringLiteral"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"gen"}},{"name":{"identifier":"tokenName"}},{"name":{"identifier":"addQuotes"}}]},"name":{"identifier":"targetString"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"\\"'"},"right":{"name":{"identifier":"targetString"}}},"right":{"value":"'\\""}}}]}}]}
/codegen/model/labeledop.java	getLabels	[]
/codegen/model/invokerule.java	getLabels	{"statements":[{"expression":{"name":{"identifier":"elements"},"scope":{"name":{"identifier":"labels"}}}}]}
/codegen/model/serializedatn.java	getSegments	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}]}},"name":{"identifier":"segments"},"type":{"name":{"identifier":"List"},"typeArguments":[{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSerializedATNSegmentLimit"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}}},"name":{"identifier":"segmentLimit"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"subList"},"scope":{"name":{"identifier":"serialized"}},"arguments":[{"name":{"identifier":"i"}},{"name":{"identifier":"min"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"segmentLimit"}}},{"name":{"identifier":"size"},"scope":{"name":{"identifier":"serialized"}}}]}]},"name":{"identifier":"currentSegment"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"segments"}},"arguments":[{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"currentSegment"}},"arguments":[{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"currentSegment"}}}}]}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"serialized"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"PLUS","target":{"name":{"identifier":"i"}},"value":{"name":{"identifier":"segmentLimit"}}}]},{"expression":{"name":{"identifier":"toArray"},"scope":{"name":{"identifier":"segments"}},"arguments":[{"elementType":{"name":{"identifier":"String"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"segments"}}}},{}]}]}}]}
/codegen/parserfactory.java	parserFile	{"statements":[{"expression":{"type":{"name":{"identifier":"ParserFile"}},"arguments":[{},{"name":{"identifier":"fileName"}}]}}]}
/codegen/parserfactory.java	parser	{"statements":[{"expression":{"type":{"name":{"identifier":"Parser"}},"arguments":[{},{"name":{"identifier":"file"}}]}}]}
/codegen/parserfactory.java	rule	{"statements":[{"condition":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"RuleFunction"}},"arguments":[{},{"name":{"identifier":"r"}}]},"name":{"identifier":"rf"},"type":{"name":{"identifier":"RuleFunction"}}}]}},{"expression":{"name":{"identifier":"rf"}}}]},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"LeftRecursiveRuleFunction"}},"arguments":[{},{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}}]}}]}}]}
/codegen/parserfactory.java	epsilon	{"statements":[{"expression":{"name":{"identifier":"alternative"},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"outerMost"}}]}}]}
/codegen/parserfactory.java	alternative	{"statements":[{"condition":{"name":{"identifier":"outerMost"}},"thenStmt":{"expression":{"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}},"arguments":[{},{"name":{"identifier":"alt"}}]}}},{"expression":{"type":{"name":{"identifier":"CodeBlockForAlt"}},"arguments":[{}]}}]}
/codegen/parserfactory.java	finishAlternative	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"},"scope":{"name":{"identifier":"blk"}}},"value":{"name":{"identifier":"ops"}}}},{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/parserfactory.java	action	{"statements":[{"expression":{"name":{"identifier":"list"},"arguments":[{"type":{"name":{"identifier":"Action"}},"arguments":[{},{"name":{"identifier":"ast"}}]}]}}]}
/codegen/parserfactory.java	sempred	{"statements":[{"expression":{"name":{"identifier":"list"},"arguments":[{"type":{"name":{"identifier":"SemPred"}},"arguments":[{},{"name":{"identifier":"ast"}}]}]}}]}
/codegen/parserfactory.java	ruleRef	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"InvokeRule"}},"arguments":[{},{"name":{"identifier":"ID"}},{"name":{"identifier":"label"}}]},"name":{"identifier":"invokeOp"},"type":{"name":{"identifier":"InvokeRule"}}}]}},{"condition":{"name":{"identifier":"needsImplicitLabel"},"scope":{"name":{"identifier":"controller"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"invokeOp"}}]},"thenStmt":{"expression":{"name":{"identifier":"defineImplicitLabel"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"invokeOp"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAddToListOpIfListLabelPresent"},"arguments":[{"name":{"identifier":"invokeOp"}},{"name":{"identifier":"label"}}]},"name":{"identifier":"listLabelOp"},"type":{"name":{"identifier":"AddToLabelList"}}}]}},{"expression":{"name":{"identifier":"list"},"arguments":[{"name":{"identifier":"invokeOp"}},{"name":{"identifier":"listLabelOp"}}]}}]}
/codegen/parserfactory.java	tokenRef	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"MatchToken"}},"arguments":[{},{"expression":{"name":{"identifier":"ID"}},"type":{"name":{"identifier":"TerminalAST"}}}]},"name":{"identifier":"matchOp"},"type":{"name":{"identifier":"MatchToken"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labelAST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"labelAST"}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCurrentRuleFunction"}},"name":{"identifier":"rf"},"type":{"name":{"identifier":"RuleFunction"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"labelAST"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"labels"},"scope":{"name":{"identifier":"matchOp"}}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"rf"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"d"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineImplicitLabel"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"matchOp"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenListLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"l"},"type":{"name":{"identifier":"TokenListDecl"}}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"rf"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"l"}}]}}]}}]}},{"condition":{"name":{"identifier":"needsImplicitLabel"},"scope":{"name":{"identifier":"controller"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"matchOp"}}]},"thenStmt":{"expression":{"name":{"identifier":"defineImplicitLabel"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"matchOp"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAddToListOpIfListLabelPresent"},"arguments":[{"name":{"identifier":"matchOp"}},{"name":{"identifier":"labelAST"}}]},"name":{"identifier":"listLabelOp"},"type":{"name":{"identifier":"AddToLabelList"}}}]}},{"expression":{"name":{"identifier":"list"},"arguments":[{"name":{"identifier":"matchOp"}},{"name":{"identifier":"listLabelOp"}}]}}]}
/codegen/parserfactory.java	getTokenLabelDecl	{"statements":[{"expression":{"type":{"name":{"identifier":"TokenDecl"}},"arguments":[{},{"name":{"identifier":"label"}}]}}]}
/codegen/parserfactory.java	getTokenListLabelDecl	{"statements":[{"expression":{"type":{"name":{"identifier":"TokenListDecl"}},"arguments":[{},{"name":{"identifier":"getListLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"label"}}]}]}}]}
/codegen/parserfactory.java	set	{"statements":[{"expression":{"variables":[{"name":{"identifier":"matchOp"},"type":{"name":{"identifier":"MatchSet"}}}]}},{"condition":{"name":{"identifier":"invert"}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"matchOp"}},"value":{"type":{"name":{"identifier":"MatchSet"}},"arguments":[{},{"name":{"identifier":"setAST"}}]}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"matchOp"}},"value":{"type":{"name":{"identifier":"MatchNotSet"}},"arguments":[{},{"name":{"identifier":"setAST"}}]}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labelAST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"labelAST"}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCurrentRuleFunction"}},"name":{"identifier":"rf"},"type":{"name":{"identifier":"RuleFunction"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"labelAST"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"labels"},"scope":{"name":{"identifier":"matchOp"}}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"rf"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"setAST"}}},{"name":{"identifier":"d"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"defineImplicitLabel"},"arguments":[{"name":{"identifier":"setAST"}},{"name":{"identifier":"matchOp"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenListLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"l"},"type":{"name":{"identifier":"TokenListDecl"}}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"rf"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"setAST"}}},{"name":{"identifier":"l"}}]}}]}}]}},{"condition":{"name":{"identifier":"needsImplicitLabel"},"scope":{"name":{"identifier":"controller"}},"arguments":[{"name":{"identifier":"setAST"}},{"name":{"identifier":"matchOp"}}]},"thenStmt":{"expression":{"name":{"identifier":"defineImplicitLabel"},"arguments":[{"name":{"identifier":"setAST"}},{"name":{"identifier":"matchOp"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAddToListOpIfListLabelPresent"},"arguments":[{"name":{"identifier":"matchOp"}},{"name":{"identifier":"labelAST"}}]},"name":{"identifier":"listLabelOp"},"type":{"name":{"identifier":"AddToLabelList"}}}]}},{"expression":{"name":{"identifier":"list"},"arguments":[{"name":{"identifier":"matchOp"}},{"name":{"identifier":"listLabelOp"}}]}}]}
/codegen/parserfactory.java	wildcard	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Wildcard"}},"arguments":[{},{"name":{"identifier":"ast"}}]},"name":{"identifier":"wild"},"type":{"name":{"identifier":"Wildcard"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labelAST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"labelAST"}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"labels"},"scope":{"name":{"identifier":"wild"}}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"getCurrentRuleFunction"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"ast"}}},{"name":{"identifier":"d"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"labelAST"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenListLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"l"},"type":{"name":{"identifier":"TokenListDecl"}}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"getCurrentRuleFunction"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"ast"}}},{"name":{"identifier":"l"}}]}}]}}]}},{"condition":{"name":{"identifier":"needsImplicitLabel"},"scope":{"name":{"identifier":"controller"}},"arguments":[{"name":{"identifier":"ast"}},{"name":{"identifier":"wild"}}]},"thenStmt":{"expression":{"name":{"identifier":"defineImplicitLabel"},"arguments":[{"name":{"identifier":"ast"}},{"name":{"identifier":"wild"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAddToListOpIfListLabelPresent"},"arguments":[{"name":{"identifier":"wild"}},{"name":{"identifier":"labelAST"}}]},"name":{"identifier":"listLabelOp"},"type":{"name":{"identifier":"AddToLabelList"}}}]}},{"expression":{"name":{"identifier":"list"},"arguments":[{"name":{"identifier":"wild"}},{"name":{"identifier":"listLabelOp"}}]}}]}
/codegen/parserfactory.java	getChoiceBlock	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"decision"},"scope":{"inner":{"expression":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"blkAST"}}},"type":{"name":{"identifier":"DecisionState"}}}}},"name":{"identifier":"decision"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"name":{"identifier":"c"},"type":{"name":{"identifier":"Choice"}}}]}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"force_atn"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"disjoint"},"scope":{"name":{"identifier":"AnalysisPipeline"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"decisionLOOK"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"decision"}}]}]}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"name":{"identifier":"getComplexChoiceBlock"},"arguments":[{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"name":{"identifier":"getLL1ChoiceBlock"},"arguments":[{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"labelAST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"labelAST"}}},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenLabelDecl"},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"c"}}},"value":{"name":{"identifier":"d"}}}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"getCurrentRuleFunction"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"labelAST"}}},{"name":{"identifier":"d"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"labelAST"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getListLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"label"}}]},"name":{"identifier":"listLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TokenListDecl"}},"arguments":[{},{"name":{"identifier":"listLabel"}}]},"name":{"identifier":"l"},"type":{"name":{"identifier":"TokenListDecl"}}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"getCurrentRuleFunction"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"labelAST"}}},{"name":{"identifier":"l"}}]}}]}}]}},{"expression":{"name":{"identifier":"c"}}}]}
/codegen/parserfactory.java	getEBNFBlock	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"force_atn"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"name":{"identifier":"decision"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ebnfRoot"}}},"right":{"name":{"identifier":"POSITIVE_CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ebnfRoot"}}},"right":{"name":{"identifier":"CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"decision"}},"value":{"name":{"identifier":"decision"},"scope":{"inner":{"expression":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"ebnfRoot"}}},"type":{"name":{"identifier":"DecisionState"}}}}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"decision"}},"value":{"name":{"identifier":"decision"},"scope":{"inner":{"expression":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"ebnfRoot"}}},"type":{"name":{"identifier":"StarLoopEntryState"}}}}}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"decision"}},"value":{"name":{"identifier":"decision"},"scope":{"inner":{"expression":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"ebnfRoot"}}},"type":{"name":{"identifier":"PlusLoopbackState"}}}}}}}]}},{"condition":{"name":{"identifier":"disjoint"},"scope":{"name":{"identifier":"AnalysisPipeline"}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"decisionLOOK"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"decision"}}]}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getLL1EBNFBlock"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}]}}]}},{"expression":{"name":{"identifier":"getComplexEBNFBlock"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}]}
/codegen/parserfactory.java	getLL1ChoiceBlock	{"statements":[{"expression":{"type":{"name":{"identifier":"LL1AltBlock"}},"arguments":[{},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}]}
/codegen/parserfactory.java	getComplexChoiceBlock	{"statements":[{"expression":{"type":{"name":{"identifier":"AltBlock"}},"arguments":[{},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}]}
/codegen/parserfactory.java	getLL1EBNFBlock	{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"ebnf"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ebnfRoot"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ebnf"}},"value":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ebnfRoot"}}}}}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"c"},"type":{"name":{"identifier":"Choice"}}}]}},{"selector":{"name":{"identifier":"ebnf"}},"entries":[{"label":{"name":{"identifier":"OPTIONAL"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"LL1OptionalBlock"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"LL1OptionalBlockSingleAlt"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}}},{}]},{"label":{"name":{"identifier":"CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"name":{"identifier":"getComplexEBNFBlock"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"LL1StarBlockSingleAlt"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}}},{}]},{"label":{"name":{"identifier":"POSITIVE_CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"name":{"identifier":"getComplexEBNFBlock"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"LL1PlusBlockSingleAlt"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}}},{}]}]},{"expression":{"name":{"identifier":"c"}}}]}
/codegen/parserfactory.java	getComplexEBNFBlock	{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"ebnf"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ebnfRoot"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ebnf"}},"value":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ebnfRoot"}}}}}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"c"},"type":{"name":{"identifier":"Choice"}}}]}},{"selector":{"name":{"identifier":"ebnf"}},"entries":[{"label":{"name":{"identifier":"OPTIONAL"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"OptionalBlock"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}},{}]},{"label":{"name":{"identifier":"CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"StarBlock"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}},{}]},{"label":{"name":{"identifier":"POSITIVE_CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"type":{"name":{"identifier":"PlusBlock"}},"arguments":[{},{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]}}},{}]}]},{"expression":{"name":{"identifier":"c"}}}]}
/codegen/parserfactory.java	getLL1Test	{"statements":[{"expression":{"name":{"identifier":"list"},"arguments":[{"type":{"name":{"identifier":"TestSetInline"}},"arguments":[{},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"look"}},{"name":{"identifier":"getInlineTestSetWordSize"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}}]}]}}]}
/codegen/parserfactory.java	needsImplicitLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCurrentOuterMostAlt"}},"name":{"identifier":"currentOuterMostAlt"},"type":{"name":{"identifier":"Alternative"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"tokenRefsInActions"},"scope":{"name":{"identifier":"currentOuterMostAlt"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]},"name":{"identifier":"actionRefsAsToken"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"ruleRefsInActions"},"scope":{"name":{"identifier":"currentOuterMostAlt"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]},"name":{"identifier":"actionRefsAsRule"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"operator":"AND","left":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"getLabels"},"scope":{"name":{"identifier":"op"}}}},"right":{"inner":{"operator":"OR","left":{"name":{"identifier":"actionRefsAsToken"}},"right":{"name":{"identifier":"actionRefsAsRule"}}}}}}]}
/codegen/parserfactory.java	defineImplicitLabel	{"statements":[{"expression":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ast"}}},"right":{"name":{"identifier":"SET"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ast"}}},"right":{"name":{"identifier":"WILDCARD"},"scope":{"name":{"identifier":"ANTLRParser"}}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ast"}}},"right":{"name":{"identifier":"RULE_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImplicitTokenLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ast"}}}]},"name":{"identifier":"implLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"d"}},"value":{"name":{"identifier":"getTokenLabelDecl"},"arguments":[{"name":{"identifier":"implLabel"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isImplicit"},"scope":{"inner":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"TokenDecl"}}}}},"value":{"value":"true"}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ast"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImplicitRuleLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ast"}}}]},"name":{"identifier":"implLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRuleFunctionContextStructName"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"ctxName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"d"}},"value":{"type":{"name":{"identifier":"RuleContextDecl"}},"arguments":[{},{"name":{"identifier":"implLabel"}},{"name":{"identifier":"ctxName"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isImplicit"},"scope":{"inner":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"RuleContextDecl"}}}}},"value":{"value":"true"}}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImplicitSetLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"String"}},"arguments":[{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ast"}}}}]}]},"name":{"identifier":"implLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"d"}},"value":{"name":{"identifier":"getTokenLabelDecl"},"arguments":[{"name":{"identifier":"implLabel"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isImplicit"},"scope":{"inner":{"expression":{"name":{"identifier":"d"}},"type":{"name":{"identifier":"TokenDecl"}}}}},"value":{"value":"true"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"getLabels"},"scope":{"name":{"identifier":"op"}}},"arguments":[{"name":{"identifier":"d"}}]}},{"expression":{"name":{"identifier":"addContextDecl"},"scope":{"name":{"identifier":"getCurrentRuleFunction"}},"arguments":[{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"ast"}}},{"name":{"identifier":"d"}}]}}]}
/codegen/parserfactory.java	getAddToListOpIfListLabelPresent	{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"labelOp"},"type":{"name":{"identifier":"AddToLabelList"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"label"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"label"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getListLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"label"}}}]},"name":{"identifier":"listLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"labelOp"}},"value":{"type":{"name":{"identifier":"AddToLabelList"}},"arguments":[{},{"name":{"identifier":"listLabel"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getLabels"},"scope":{"name":{"identifier":"op"}}},"arguments":[{"value":"0"}]}]}}}]}},{"expression":{"name":{"identifier":"labelOp"}}}]}
/codegen/unicodeescapes.java	appendJavaStyleEscapedCodePoint	{"statements":[{"condition":{"name":{"identifier":"isSupplementaryCodePoint"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"codePoint"}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u%04X"},{"name":{"identifier":"codePoint"}}]}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u%04X"},{"expression":{"name":{"identifier":"highSurrogate"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"codePoint"}}]},"type":{"type":"INT"}}]}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u%04X"},{"expression":{"name":{"identifier":"lowSurrogate"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"codePoint"}}]},"type":{"type":"INT"}}]}]}}]}}]}
/codegen/unicodeescapes.java	appendPythonStyleEscapedCodePoint	{"statements":[{"condition":{"name":{"identifier":"isSupplementaryCodePoint"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"codePoint"}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u%04X"},{"name":{"identifier":"codePoint"}}]}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\U%08X"},{"name":{"identifier":"codePoint"}}]}]}}]}}]}
/codegen/unicodeescapes.java	appendSwiftStyleEscapedCodePoint	{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"\\u{%04X}"},{"name":{"identifier":"codePoint"}}]}]}}]}
/codegen/codegeneratorextension.java	parserFile	{"statements":[{"expression":{"name":{"identifier":"f"}}}]}
/codegen/codegeneratorextension.java	parser	{"statements":[{"expression":{"name":{"identifier":"p"}}}]}
/codegen/codegeneratorextension.java	lexerFile	{"statements":[{"expression":{"name":{"identifier":"f"}}}]}
/codegen/codegeneratorextension.java	lexer	{"statements":[{"expression":{"name":{"identifier":"l"}}}]}
/codegen/codegeneratorextension.java	rule	{"statements":[{"expression":{"name":{"identifier":"rf"}}}]}
/codegen/codegeneratorextension.java	rulePostamble	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	alternative	{"statements":[{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/codegeneratorextension.java	finishAlternative	{"statements":[{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/codegeneratorextension.java	epsilon	{"statements":[{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/codegeneratorextension.java	ruleRef	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	tokenRef	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	set	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	stringRef	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	wildcard	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	action	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	sempred	{"statements":[{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/codegeneratorextension.java	getChoiceBlock	{"statements":[{"expression":{"name":{"identifier":"c"}}}]}
/codegen/codegeneratorextension.java	getEBNFBlock	{"statements":[{"expression":{"name":{"identifier":"c"}}}]}
/codegen/codegeneratorextension.java	needsImplicitLabel	{"statements":[{"expression":{"value":"false"}}]}
/codegen/outputmodelcontroller.java	addExtension	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"extensions"}},"arguments":[{"name":{"identifier":"ext"}}]}}]}
/codegen/outputmodelcontroller.java	buildParserOutputModel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parserFile"},"arguments":[{"name":{"identifier":"getRecognizerFileName"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"header"}}]}]},"name":{"identifier":"file"},"type":{"name":{"identifier":"ParserFile"}}}]}},{"expression":{"name":{"identifier":"setRoot"},"arguments":[{"name":{"identifier":"file"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"parser"},"scope":{"name":{"identifier":"file"}}},"value":{"name":{"identifier":"parser"},"arguments":[{"name":{"identifier":"file"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"buildRuleFunction"},"arguments":[{"name":{"identifier":"parser"},"scope":{"name":{"identifier":"file"}}},{"name":{"identifier":"r"}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"file"}}}]}
/codegen/outputmodelcontroller.java	buildLexerOutputModel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"lexerFile"},"arguments":[{"name":{"identifier":"getRecognizerFileName"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"header"}}]}]},"name":{"identifier":"file"},"type":{"name":{"identifier":"LexerFile"}}}]}},{"expression":{"name":{"identifier":"setRoot"},"arguments":[{"name":{"identifier":"file"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexer"},"scope":{"name":{"identifier":"file"}}},"value":{"name":{"identifier":"lexer"},"arguments":[{"name":{"identifier":"file"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"buildLexerRuleActions"},"arguments":[{"name":{"identifier":"lexer"},"scope":{"name":{"identifier":"file"}}},{"name":{"identifier":"r"}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"file"}}}]}
/codegen/outputmodelcontroller.java	buildListenerOutputModel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"type":{"name":{"identifier":"ListenerFile"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"getListenerFileName"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/outputmodelcontroller.java	buildBaseListenerOutputModel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"type":{"name":{"identifier":"BaseListenerFile"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"getBaseListenerFileName"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/outputmodelcontroller.java	buildVisitorOutputModel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"type":{"name":{"identifier":"VisitorFile"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"getVisitorFileName"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/outputmodelcontroller.java	buildBaseVisitorOutputModel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"type":{"name":{"identifier":"BaseVisitorFile"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"getBaseVisitorFileName"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/outputmodelcontroller.java	parserFile	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parserFile"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"f"},"type":{"name":{"identifier":"ParserFile"}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"f"}},"value":{"name":{"identifier":"parserFile"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"f"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"f"}}}]}
/codegen/outputmodelcontroller.java	parser	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parser"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"file"}}]},"name":{"identifier":"p"},"type":{"name":{"identifier":"Parser"}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"parser"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"p"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"p"}}}]}
/codegen/outputmodelcontroller.java	lexerFile	{"statements":[{"expression":{"type":{"name":{"identifier":"LexerFile"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"fileName"}}]}}]}
/codegen/outputmodelcontroller.java	lexer	{"statements":[{"expression":{"type":{"name":{"identifier":"Lexer"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"file"}}]}}]}
/codegen/outputmodelcontroller.java	buildRuleFunction	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"rule"},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"function"},"type":{"name":{"identifier":"RuleFunction"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"funcs"},"scope":{"name":{"identifier":"parser"}}},"arguments":[{"name":{"identifier":"function"}}]}},{"expression":{"name":{"identifier":"pushCurrentRule"},"arguments":[{"name":{"identifier":"function"}}]}},{"expression":{"name":{"identifier":"fillNamedActions"},"scope":{"name":{"identifier":"function"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"r"}}]}},{"condition":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"buildNormalRuleFunction"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"function"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"buildLeftRecursiveRuleFunction"},"arguments":[{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},{"expression":{"name":{"identifier":"function"}},"type":{"name":{"identifier":"LeftRecursiveRuleFunction"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammar"}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"PredAST"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"PredAST"}}},"name":{"identifier":"p"},"type":{"name":{"identifier":"PredAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempredFuncs"},"scope":{"name":{"identifier":"parser"}}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"rsf"},"type":{"name":{"identifier":"RuleSempredFunction"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"rsf"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rsf"}},"value":{"type":{"name":{"identifier":"RuleSempredFunction"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"r"}},{"name":{"identifier":"ctxType"},"scope":{"name":{"identifier":"function"}}}]}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"sempredFuncs"},"scope":{"name":{"identifier":"parser"}}},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"rsf"}}]}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"rsf"}}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempreds"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"p"}}]},{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"p"}}]}]}}]}}]},"iterable":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"r"}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"name":{"identifier":"popCurrentRule"}}}]}
/codegen/outputmodelcontroller.java	buildLeftRecursiveRuleFunction	{"statements":[{"expression":{"name":{"identifier":"buildNormalRuleFunction"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"function"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"codegenTemplates"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"code"},"scope":{"name":{"identifier":"function"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}},"name":{"identifier":"outerAlt"},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"CodeBlockForAlt"}}]}},"name":{"identifier":"primaryAltsCode"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"CodeBlockForAlt"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ops"},"scope":{"name":{"identifier":"outerAlt"}}},"arguments":[{"value":"0"}]},"name":{"identifier":"primaryStuff"},"type":{"name":{"identifier":"SrcOp"}}}]}},{"condition":{"expression":{"name":{"identifier":"primaryStuff"}},"type":{"name":{"identifier":"Choice"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"primaryAltsCode"}},"arguments":[{"expression":{"name":{"identifier":"primaryStuff"}},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"primaryStuff"}},"type":{"name":{"identifier":"Choice"}}},"name":{"identifier":"primaryAltBlock"},"type":{"name":{"identifier":"Choice"}}}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"primaryAltsCode"}},"arguments":[{"name":{"identifier":"alts"},"scope":{"name":{"identifier":"primaryAltBlock"}}}]}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ops"},"scope":{"name":{"identifier":"outerAlt"}}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"StarBlock"}}},"name":{"identifier":"opAltStarBlock"},"type":{"name":{"identifier":"StarBlock"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"alts"},"scope":{"name":{"identifier":"opAltStarBlock"}}},"arguments":[{"value":"0"}]},"name":{"identifier":"altForOpAltBlock"},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"CodeBlockForAlt"}}]}},"name":{"identifier":"opAltsCode"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"CodeBlockForAlt"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ops"},"scope":{"name":{"identifier":"altForOpAltBlock"}}},"arguments":[{"value":"0"}]},"name":{"identifier":"opStuff"},"type":{"name":{"identifier":"SrcOp"}}}]}},{"condition":{"expression":{"name":{"identifier":"opStuff"}},"type":{"name":{"identifier":"AltBlock"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"opAltsCode"}},"arguments":[{"expression":{"name":{"identifier":"opStuff"}},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"opStuff"}},"type":{"name":{"identifier":"AltBlock"}}},"name":{"identifier":"opAltBlock"},"type":{"name":{"identifier":"AltBlock"}}}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"opAltsCode"}},"arguments":[{"name":{"identifier":"alts"},"scope":{"name":{"identifier":"opAltBlock"}}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"recPrimaryAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},"right":{}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleReplaceContext"}]},"name":{"identifier":"altActionST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altActionST"}},"arguments":[{"value":"ctxName"},{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}}]}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altLabelCtxs"},"scope":{"name":{"identifier":"function"}}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}}]},{"name":{"identifier":"altActionST"}}]},"name":{"identifier":"altAction"},"type":{"name":{"identifier":"Action"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"primaryAltsCode"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"alt"},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}},{"expression":{"name":{"identifier":"insertOp"},"scope":{"name":{"identifier":"alt"}},"arguments":[{"value":"0"},{"name":{"identifier":"altAction"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"primaryAltsCode"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleSetStopToken"}]},"name":{"identifier":"setStopTokenAST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"ruleCtx"},"scope":{"name":{"identifier":"function"}}},{"name":{"identifier":"setStopTokenAST"}}]},"name":{"identifier":"setStopTokenAction"},"type":{"name":{"identifier":"Action"}}}]}},{"expression":{"name":{"identifier":"insertOp"},"scope":{"name":{"identifier":"outerAlt"}},"arguments":[{"value":"1"},{"name":{"identifier":"setStopTokenAction"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleSetPrevCtx"}]},"name":{"identifier":"setPrevCtx"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"ruleCtx"},"scope":{"name":{"identifier":"function"}}},{"name":{"identifier":"setPrevCtx"}}]},"name":{"identifier":"setPrevCtxAction"},"type":{"name":{"identifier":"Action"}}}]}},{"expression":{"name":{"identifier":"addIterationOp"},"scope":{"name":{"identifier":"opAltStarBlock"}},"arguments":[{"name":{"identifier":"setPrevCtxAction"}}]}},{"body":{"statements":[{"expression":{"variables":[{"name":{"identifier":"altActionST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getElement"},"scope":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"variables":[{"name":{"identifier":"templateName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"templateName"}},"value":{"value":"recRuleAltStartAction"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altActionST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"name":{"identifier":"templateName"}}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altActionST"}},"arguments":[{"value":"ctxName"},{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"templateName"}},"value":{"value":"recRuleLabeledAltStartAction"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altActionST"}},"value":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"name":{"identifier":"templateName"}}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altActionST"}},"arguments":[{"value":"currentAltLabel"},{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altActionST"}},"arguments":[{"value":"ruleName"},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altActionST"}},"arguments":[{"value":"label"},{"name":{"identifier":"leftRecursiveRuleRefLabel"},"scope":{"name":{"identifier":"altInfo"}}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"altActionST"}}}},"arguments":[{"value":"isListLabel"}]},"elseStmt":{"condition":{"name":{"identifier":"isListLabel"},"scope":{"name":{"identifier":"altInfo"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}}}},"arguments":[{"name":{"identifier":"CODE_TEMPLATE_ARG_ISSUE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"templateName"}},{"value":"isListLabel"}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altActionST"}},"arguments":[{"value":"isListLabel"},{"name":{"identifier":"isListLabel"},"scope":{"name":{"identifier":"altInfo"}}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altLabelCtxs"},"scope":{"name":{"identifier":"function"}}},"arguments":[{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altInfo"}}}]},{"name":{"identifier":"altActionST"}}]},"name":{"identifier":"altAction"},"type":{"name":{"identifier":"Action"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"opAltsCode"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"alt"},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}},{"expression":{"name":{"identifier":"insertOp"},"scope":{"name":{"identifier":"alt"}},"arguments":[{"value":"0"},{"name":{"identifier":"altAction"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"opAltsCode"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/codegen/outputmodelcontroller.java	buildNormalRuleFunction	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}}}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"blk"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTreeNodeStream"}},"arguments":[{"name":{"identifier":"adaptor"}},{"name":{"identifier":"blk"}}]},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"CommonTreeNodeStream"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"walker"}},"value":{"type":{"name":{"identifier":"SourceGenTriggers"}},"arguments":[{"name":{"identifier":"nodes"}},{}]}}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"code"},"scope":{"name":{"identifier":"function"}}},"value":{"name":{"identifier":"list"},"scope":{"name":{"identifier":"DefaultOutputModelFactory"}},"arguments":[{"name":{"identifier":"block"},"scope":{"name":{"identifier":"walker"}},"arguments":[{},{}]}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hasLookaheadBlock"},"scope":{"name":{"identifier":"function"}}},"value":{"name":{"identifier":"hasLookaheadBlock"},"scope":{"name":{"identifier":"walker"}}}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"printStackTrace"},"scope":{"name":{"identifier":"e"}},"arguments":[{"name":{"identifier":"err"},"scope":{"name":{"identifier":"System"}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"RecognitionException"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}]},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ctxType"},"scope":{"name":{"identifier":"function"}}},"value":{"name":{"identifier":"getRuleFunctionContextStructName"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"function"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"postamble"},"scope":{"name":{"identifier":"function"}}},"value":{"name":{"identifier":"rulePostamble"},"arguments":[{"name":{"identifier":"function"}},{"name":{"identifier":"r"}}]}}}]}
/codegen/outputmodelcontroller.java	buildLexerRuleActions	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"delegate"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRuleFunctionContextStructName"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"ctxType"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"actionFuncs"},"scope":{"name":{"identifier":"lexer"}}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"raf"},"type":{"name":{"identifier":"RuleActionFunction"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"raf"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"raf"}},"value":{"type":{"name":{"identifier":"RuleActionFunction"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"r"}},{"name":{"identifier":"ctxType"}}]}}}]}},{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"PredAST"}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"a"}}},"right":{"name":{"identifier":"ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"raf"}}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"a"}}]},{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"a"}}]}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"PredAST"}}},"name":{"identifier":"p"},"type":{"name":{"identifier":"PredAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempredFuncs"},"scope":{"name":{"identifier":"lexer"}}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"rsf"},"type":{"name":{"identifier":"RuleSempredFunction"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"rsf"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rsf"}},"value":{"type":{"name":{"identifier":"RuleSempredFunction"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"r"}},{"name":{"identifier":"ctxType"}}]}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"sempredFuncs"},"scope":{"name":{"identifier":"lexer"}}},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"rsf"}}]}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"rsf"}}},"arguments":[{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempreds"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"p"}}]},{"type":{"name":{"identifier":"Action"}},"arguments":[{"name":{"identifier":"delegate"}},{"name":{"identifier":"p"}}]}]}}]}}]},"iterable":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"r"}}},"variable":{"variables":[{"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"actions"},"scope":{"name":{"identifier":"raf"}}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"actionFuncs"},"scope":{"name":{"identifier":"lexer"}}},"arguments":[{"name":{"identifier":"r"}}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"actionFuncs"},"scope":{"name":{"identifier":"lexer"}}},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"raf"}}]}}]}}]}
/codegen/outputmodelcontroller.java	rule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"rule"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"r"}}]},"name":{"identifier":"rf"},"type":{"name":{"identifier":"RuleFunction"}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rf"}},"value":{"name":{"identifier":"rule"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"rf"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"rf"}}}]}
/codegen/outputmodelcontroller.java	rulePostamble	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"rulePostamble"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"function"}},{"name":{"identifier":"r"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"rulePostamble"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	getGrammar	{"statements":[{"expression":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"delegate"}}}}]}
/codegen/outputmodelcontroller.java	getGenerator	{"statements":[{"expression":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"delegate"}}}}]}
/codegen/outputmodelcontroller.java	alternative	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"alternative"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"outerMost"}}]},"name":{"identifier":"blk"},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}},{"condition":{"name":{"identifier":"outerMost"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentOuterMostAlternativeBlock"}},"value":{"expression":{"name":{"identifier":"blk"}},"type":{"name":{"identifier":"CodeBlockForOuterMostAlt"}}}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"blk"}},"value":{"name":{"identifier":"alternative"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"blk"}},{"name":{"identifier":"outerMost"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/outputmodelcontroller.java	finishAlternative	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"blk"}},"value":{"name":{"identifier":"finishAlternative"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"blk"}},{"name":{"identifier":"ops"}}]}}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"blk"}},"value":{"name":{"identifier":"finishAlternative"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"blk"}},{"name":{"identifier":"outerMost"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/outputmodelcontroller.java	ruleRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"ruleRef"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"label"}},{"name":{"identifier":"args"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"ruleRef"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}}]},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	tokenRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"tokenRef"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"label"}},{"name":{"identifier":"args"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"tokenRef"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}}]},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	stringRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"stringRef"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"label"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"stringRef"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}}]},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	set	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"setAST"}},{"name":{"identifier":"labelAST"}},{"name":{"identifier":"invert"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}}]},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	epsilon	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"epsilon"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"outerMost"}}]},"name":{"identifier":"blk"},"type":{"name":{"identifier":"CodeBlockForAlt"}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"blk"}},"value":{"name":{"identifier":"epsilon"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"blk"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/outputmodelcontroller.java	wildcard	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"wildcard"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ast"}},{"name":{"identifier":"labelAST"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"wildcard"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}}]},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	action	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"action"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ast"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"action"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	sempred	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"sempred"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ast"}}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ops"}},"value":{"name":{"identifier":"sempred"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ops"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"ops"}}}]}
/codegen/outputmodelcontroller.java	getChoiceBlock	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChoiceBlock"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}},{"name":{"identifier":"label"}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Choice"}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"name":{"identifier":"getChoiceBlock"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"c"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"c"}}}]}
/codegen/outputmodelcontroller.java	getEBNFBlock	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getEBNFBlock"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"alts"}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Choice"}}}]}},{"body":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"c"}},"value":{"name":{"identifier":"getEBNFBlock"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"c"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"c"}}}]}
/codegen/outputmodelcontroller.java	needsImplicitLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"needsImplicitLabel"},"scope":{"name":{"identifier":"delegate"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"op"}}]},"name":{"identifier":"needs"},"type":{"type":"BOOLEAN"}}]}},{"body":{"expression":{"operator":"BINARY_OR","target":{"name":{"identifier":"needs"}},"value":{"name":{"identifier":"needsImplicitLabel"},"scope":{"name":{"identifier":"ext"}},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"op"}}]}}},"iterable":{"name":{"identifier":"extensions"}},"variable":{"variables":[{"name":{"identifier":"ext"},"type":{"name":{"identifier":"CodeGeneratorExtension"}}}]}},{"expression":{"name":{"identifier":"needs"}}}]}
/codegen/outputmodelcontroller.java	getRoot	{"statements":[{"expression":{"name":{"identifier":"root"}}}]}
/codegen/outputmodelcontroller.java	setRoot	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"root"},"scope":{}},"value":{"name":{"identifier":"root"}}}}]}
/codegen/outputmodelcontroller.java	getCurrentRuleFunction	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"currentRule"}}}},"thenStmt":{"expression":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"currentRule"}}}}},{"expression":{}}]}
/codegen/outputmodelcontroller.java	pushCurrentRule	{"statements":[{"expression":{"name":{"identifier":"push"},"scope":{"name":{"identifier":"currentRule"}},"arguments":[{"name":{"identifier":"r"}}]}}]}
/codegen/outputmodelcontroller.java	popCurrentRule	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"currentRule"}}}},"thenStmt":{"expression":{"name":{"identifier":"pop"},"scope":{"name":{"identifier":"currentRule"}}}}},{"expression":{}}]}
/codegen/outputmodelcontroller.java	getCurrentOuterMostAlt	{"statements":[{"expression":{"name":{"identifier":"currentOuterMostAlt"}}}]}
/codegen/outputmodelcontroller.java	setCurrentOuterMostAlt	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentOuterMostAlt"},"scope":{}},"value":{"name":{"identifier":"currentOuterMostAlt"}}}}]}
/codegen/outputmodelcontroller.java	setCurrentBlock	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentBlock"}},"value":{"name":{"identifier":"blk"}}}}]}
/codegen/outputmodelcontroller.java	getCurrentBlock	{"statements":[{"expression":{"name":{"identifier":"currentBlock"}}}]}
/codegen/outputmodelcontroller.java	setCurrentOuterMostAlternativeBlock	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentOuterMostAlternativeBlock"},"scope":{}},"value":{"name":{"identifier":"currentOuterMostAlternativeBlock"}}}}]}
/codegen/outputmodelcontroller.java	getCurrentOuterMostAlternativeBlock	{"statements":[{"expression":{"name":{"identifier":"currentOuterMostAlternativeBlock"}}}]}
/codegen/outputmodelcontroller.java	getCodeBlockLevel	{"statements":[{"expression":{"name":{"identifier":"codeBlockLevel"}}}]}
/codegen/blankoutputmodelfactory.java	parserFile	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	parser	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	rule	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	rulePostamble	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	lexerFile	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	lexer	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	alternative	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	finishAlternative	{"statements":[{"expression":{"name":{"identifier":"blk"}}}]}
/codegen/blankoutputmodelfactory.java	epsilon	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	ruleRef	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	tokenRef	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	stringRef	{"statements":[{"expression":{"name":{"identifier":"tokenRef"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"label"}},{}]}}]}
/codegen/blankoutputmodelfactory.java	set	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	wildcard	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	action	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	sempred	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getChoiceBlock	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getEBNFBlock	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getLL1ChoiceBlock	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getComplexChoiceBlock	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getLL1EBNFBlock	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getComplexEBNFBlock	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	getLL1Test	{"statements":[{"expression":{}}]}
/codegen/blankoutputmodelfactory.java	needsImplicitLabel	{"statements":[{"expression":{"value":"false"}}]}
/codegen/codegenpipeline.java	process	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"targetExists"},"scope":{"name":{"identifier":"CodeGenerator"}},"arguments":[{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"value":"language"}]}]}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CodeGenerator"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"idTypes"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"idTypes"}},"arguments":[{"name":{"identifier":"ID"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"idTypes"}},"arguments":[{"name":{"identifier":"RULE_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"idTypes"}},"arguments":[{"name":{"identifier":"TOKEN_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"idTypes"}}]},"name":{"identifier":"idNodes"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"grammarSymbolCausesIssueInGeneratedCode"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}},"arguments":[{"name":{"identifier":"idNode"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"USE_OF_BAD_WORD"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"idNode"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"idNode"}}}]}}]}}]},"iterable":{"name":{"identifier":"idNodes"}},"variable":{"variables":[{"name":{"identifier":"idNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"name":{"identifier":"errorCount"},"type":{"type":"INT"}}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"statements":[{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateParser"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"true"}]},"name":{"identifier":"parser"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeRecognizer"},"arguments":[{"name":{"identifier":"parser"}},{"name":{"identifier":"gen"}},{"value":"true"}]}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateParser"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"false"}]},"name":{"identifier":"parser"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeRecognizer"},"arguments":[{"name":{"identifier":"parser"}},{"name":{"identifier":"gen"}},{"value":"false"}]}}]}},{"condition":{"name":{"identifier":"gen_listener"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"true"}]},"name":{"identifier":"listener"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"listener"}},{"value":"true"}]}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"false"}]},"name":{"identifier":"listener"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"listener"}},{"value":"false"}]}}]}},{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateBaseListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"true"}]},"name":{"identifier":"baseListener"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeBaseListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"baseListener"}},{"value":"true"}]}}]}}]}},{"condition":{"name":{"identifier":"wantsBaseListener"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateBaseListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"false"}]},"name":{"identifier":"baseListener"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeBaseListener"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"baseListener"}},{"value":"false"}]}}]}}]}}]}},{"condition":{"name":{"identifier":"gen_visitor"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"true"}]},"name":{"identifier":"visitor"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"visitor"}},{"value":"true"}]}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"false"}]},"name":{"identifier":"visitor"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"visitor"}},{"value":"false"}]}}]}},{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateBaseVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"true"}]},"name":{"identifier":"baseVisitor"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeBaseVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"baseVisitor"}},{"value":"true"}]}}]}}]}},{"condition":{"name":{"identifier":"wantsBaseVisitor"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateBaseVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"false"}]},"name":{"identifier":"baseVisitor"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeBaseVisitor"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"baseVisitor"}},{"value":"false"}]}}]}}]}}]}}]},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"needsHeader"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"gen"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateLexer"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"true"}]},"name":{"identifier":"lexer"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeRecognizer"},"arguments":[{"name":{"identifier":"lexer"}},{"name":{"identifier":"gen"}},{"value":"true"}]}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"generateLexer"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"value":"false"}]},"name":{"identifier":"lexer"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}}},"right":{"name":{"identifier":"errorCount"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeRecognizer"},"arguments":[{"name":{"identifier":"lexer"}},{"name":{"identifier":"gen"}},{"value":"false"}]}}]}}]}},{"expression":{"name":{"identifier":"writeVocabFile"},"scope":{"name":{"identifier":"gen"}}}}]}
/codegen/codegenpipeline.java	writeRecognizer	{"statements":[{"condition":{"name":{"identifier":"launch_ST_inspector"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"inspect"},"scope":{"name":{"identifier":"template"}}},"name":{"identifier":"viz"},"type":{"name":{"identifier":"STViz"}}}]}},{"condition":{"name":{"identifier":"ST_inspector_wait_for_close"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"thenStmt":{"statements":[{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"waitForClose"},"scope":{"name":{"identifier":"viz"}}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ex"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"InterruptedException"}}}}]}]}}]}},{"expression":{"name":{"identifier":"writeRecognizer"},"scope":{"name":{"identifier":"gen"}},"arguments":[{"name":{"identifier":"template"}},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	targetExists	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"org.antlr.v4.codegen.target."},"right":{"name":{"identifier":"language"}}},"right":{"value":"Target"}},"name":{"identifier":"targetName"},"type":{"name":{"identifier":"String"}}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"asSubclass"},"scope":{"name":{"identifier":"forName"},"scope":{"name":{"identifier":"Class"}},"arguments":[{"name":{"identifier":"targetName"}}]},"arguments":[{"type":{"name":{"identifier":"Target"}}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"Target"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"c"}},"arguments":[{"type":{"name":{"identifier":"CodeGenerator"}}}]},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"Target"}}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CodeGenerator"}},"arguments":[{"name":{"identifier":"language"}}]},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}},"arguments":[{"name":{"identifier":"gen"}}]},"name":{"identifier":"target"},"type":{"name":{"identifier":"Target"}}}]}},{"expression":{"name":{"identifier":"templatesExist"},"scope":{"name":{"identifier":"target"}}}}]},"catchClauses":[{"body":{},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]},{"expression":{"value":"false"}}]}
/codegen/codegenerator.java	getTarget	{"statements":[{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"target"}},"right":{}},"right":{"name":{"identifier":"targetExists"},"arguments":[{"name":{"identifier":"language"}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"loadLanguageTarget"},"arguments":[{"name":{"identifier":"language"}}]}}]}},{"expression":{"name":{"identifier":"target"}}}]}
/codegen/codegenerator.java	getTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTarget"}},"name":{"identifier":"t"},"type":{"name":{"identifier":"Target"}}}]}},{"expression":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"elseExpr":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"t"}}},"thenExpr":{}}}]}
/codegen/codegenerator.java	loadLanguageTarget	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"org.antlr.v4.codegen.target."},"right":{"name":{"identifier":"language"}}},"right":{"value":"Target"}},"name":{"identifier":"targetName"},"type":{"name":{"identifier":"String"}}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"asSubclass"},"scope":{"name":{"identifier":"forName"},"scope":{"name":{"identifier":"Class"}},"arguments":[{"name":{"identifier":"targetName"}}]},"arguments":[{"type":{"name":{"identifier":"Target"}}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"Target"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"c"}},"arguments":[{"type":{"name":{"identifier":"CodeGenerator"}}}]},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"Target"}}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"target"}},"value":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}},"arguments":[{}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CANNOT_CREATE_TARGET_GENERATOR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"e"}},{"name":{"identifier":"targetName"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]}]}
/codegen/codegenerator.java	createController	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ParserFactory"}},"arguments":[{}]},"name":{"identifier":"factory"},"type":{"name":{"identifier":"OutputModelFactory"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"OutputModelController"}},"arguments":[{"name":{"identifier":"factory"}}]},"name":{"identifier":"controller"},"type":{"name":{"identifier":"OutputModelController"}}}]}},{"expression":{"name":{"identifier":"setController"},"scope":{"name":{"identifier":"factory"}},"arguments":[{"name":{"identifier":"controller"}}]}},{"expression":{"name":{"identifier":"controller"}}}]}
/codegen/codegenerator.java	walk	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"OutputModelWalker"}},"arguments":[{"name":{"identifier":"tool"}},{"name":{"identifier":"getTemplates"}}]},"name":{"identifier":"walker"},"type":{"name":{"identifier":"OutputModelWalker"}}}]}},{"expression":{"name":{"identifier":"walk"},"scope":{"name":{"identifier":"walker"}},"arguments":[{"name":{"identifier":"outputModel"}},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	generateLexer	{"statements":[{"expression":{"name":{"identifier":"generateLexer"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	generateLexer	{"statements":[{"expression":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"buildLexerOutputModel"},"scope":{"name":{"identifier":"createController"}},"arguments":[{"name":{"identifier":"header"}}]},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	generateParser	{"statements":[{"expression":{"name":{"identifier":"generateParser"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	generateParser	{"statements":[{"expression":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"buildParserOutputModel"},"scope":{"name":{"identifier":"createController"}},"arguments":[{"name":{"identifier":"header"}}]},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	generateListener	{"statements":[{"expression":{"name":{"identifier":"generateListener"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	generateListener	{"statements":[{"expression":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"buildListenerOutputModel"},"scope":{"name":{"identifier":"createController"}},"arguments":[{"name":{"identifier":"header"}}]},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	generateBaseListener	{"statements":[{"expression":{"name":{"identifier":"generateBaseListener"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	generateBaseListener	{"statements":[{"expression":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"buildBaseListenerOutputModel"},"scope":{"name":{"identifier":"createController"}},"arguments":[{"name":{"identifier":"header"}}]},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	generateVisitor	{"statements":[{"expression":{"name":{"identifier":"generateVisitor"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	generateVisitor	{"statements":[{"expression":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"buildVisitorOutputModel"},"scope":{"name":{"identifier":"createController"}},"arguments":[{"name":{"identifier":"header"}}]},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	generateBaseVisitor	{"statements":[{"expression":{"name":{"identifier":"generateBaseVisitor"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	generateBaseVisitor	{"statements":[{"expression":{"name":{"identifier":"walk"},"arguments":[{"name":{"identifier":"buildBaseVisitorOutputModel"},"scope":{"name":{"identifier":"createController"}},"arguments":[{"name":{"identifier":"header"}}]},{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	getTokenVocabOutput	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ST"}},"arguments":[{"name":{"identifier":"vocabFilePattern"}}]},"name":{"identifier":"vocabFileST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenNameToTypeMap"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"t"}}]},"name":{"identifier":"tokenType"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"tokenType"}},"right":{"name":{"identifier":"MIN_USER_TOKEN_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"tokens"}},"arguments":[{"name":{"identifier":"t"}},{"name":{"identifier":"tokenType"}}]}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"tokenNameToTypeMap"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"vocabFileST"}},"arguments":[{"value":"tokens"},{"name":{"identifier":"tokens"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}},"name":{"identifier":"literals"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"literal"}}]},"name":{"identifier":"tokenType"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"tokenType"}},"right":{"name":{"identifier":"MIN_USER_TOKEN_TYPE"},"scope":{"name":{"identifier":"Token"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"literals"}},"arguments":[{"name":{"identifier":"literal"}},{"name":{"identifier":"tokenType"}}]}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"stringLiteralToTypeMap"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"literal"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"vocabFileST"}},"arguments":[{"value":"literals"},{"name":{"identifier":"literals"}}]}},{"expression":{"name":{"identifier":"vocabFileST"}}}]}
/codegen/codegenerator.java	writeRecognizer	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"getRecognizerFileName"},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/codegenerator.java	writeListener	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"getListenerFileName"},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/codegenerator.java	writeBaseListener	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"getBaseListenerFileName"},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/codegenerator.java	writeVisitor	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"getVisitorFileName"},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/codegenerator.java	writeBaseVisitor	{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"outputFileST"}},{"name":{"identifier":"getBaseVisitorFileName"},"arguments":[{"name":{"identifier":"header"}}]}]}}]}
/codegen/codegenerator.java	writeVocabFile	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenVocabOutput"}},"name":{"identifier":"tokenVocabSerialization"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getVocabFileName"}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"fileName"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"genFile"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"tokenVocabSerialization"}},{"name":{"identifier":"fileName"}}]}}]}}]}
/codegen/codegenerator.java	write	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutputFileWriter"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"fileName"}}]},"name":{"identifier":"w"},"type":{"name":{"identifier":"Writer"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AutoIndentWriter"}},"arguments":[{"name":{"identifier":"w"}}]},"name":{"identifier":"wr"},"type":{"name":{"identifier":"STWriter"}}}]}},{"expression":{"name":{"identifier":"setLineWidth"},"scope":{"name":{"identifier":"wr"}},"arguments":[{"name":{"identifier":"lineWidth"}}]}},{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"code"}},"arguments":[{"name":{"identifier":"wr"}}]}},{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"w"}}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CANNOT_WRITE_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}},{"name":{"identifier":"fileName"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]}]}
/codegen/codegenerator.java	getRecognizerFileName	{"statements":[{"expression":{"name":{"identifier":"getRecognizerFileName"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	getListenerFileName	{"statements":[{"expression":{"name":{"identifier":"getListenerFileName"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	getVisitorFileName	{"statements":[{"expression":{"name":{"identifier":"getVisitorFileName"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	getBaseListenerFileName	{"statements":[{"expression":{"name":{"identifier":"getBaseListenerFileName"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	getBaseVisitorFileName	{"statements":[{"expression":{"name":{"identifier":"getBaseVisitorFileName"},"arguments":[{"value":"false"}]}}]}
/codegen/codegenerator.java	getRecognizerFileName	{"statements":[{"expression":{"name":{"identifier":"getRecognizerFileName"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	getListenerFileName	{"statements":[{"expression":{"name":{"identifier":"getListenerFileName"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	getVisitorFileName	{"statements":[{"expression":{"name":{"identifier":"getVisitorFileName"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	getBaseListenerFileName	{"statements":[{"expression":{"name":{"identifier":"getBaseListenerFileName"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	getBaseVisitorFileName	{"statements":[{"expression":{"name":{"identifier":"getBaseVisitorFileName"},"scope":{"name":{"identifier":"getTarget"}},"arguments":[{"name":{"identifier":"header"}}]}}]}
/codegen/codegenerator.java	getVocabFileName	{"statements":[{"expression":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"}}}}]}
/codegen/codegenerator.java	getHeaderFileName	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"getTemplates"}},"arguments":[{"value":"headerFileExtension"}]},"name":{"identifier":"extST"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"extST"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRecognizerName"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"recognizerName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"recognizerName"}},"right":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"extST"}}}}}]}
/codegen/actiontranslator.java	toString	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"c"}}}]}},"iterable":{"name":{"identifier":"chunks"}},"variable":{"variables":[{"name":{"identifier":"c"},"type":{"name":{"identifier":"ActionChunk"}}}]}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/codegen/actiontranslator.java	translateAction	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tokenWithinAction"}}},"name":{"identifier":"action"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"action"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"action"}}},"right":{"value":"0"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"action"}},"arguments":[{"value":"0"}]},"right":{"value":"{"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"action"}},"arguments":[{"value":"{"}]},"name":{"identifier":"firstCurly"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"action"}},"arguments":[{"value":"}"}]},"name":{"identifier":"lastCurly"},"type":{"type":"INT"}}]}},{"condition":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"firstCurly"}},"right":{"value":"0"}},"right":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"lastCurly"}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"action"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"action"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"firstCurly"}},"right":{"value":"1"}},{"name":{"identifier":"lastCurly"}}]}}}]}}]}},{"expression":{"name":{"identifier":"translateActionChunk"},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"rf"}},{"name":{"identifier":"action"}},{"name":{"identifier":"node"}}]}}]}
/codegen/actiontranslator.java	translateActionChunk	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"node"}}},"name":{"identifier":"tokenWithinAction"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionTranslator"}},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"node"}}]},"name":{"identifier":"translator"},"type":{"name":{"identifier":"ActionTranslator"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rf"},"scope":{"name":{"identifier":"translator"}}},"value":{"name":{"identifier":"rf"}}}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}},"arguments":[{"value":"action-translator"},{"operator":"PLUS","left":{"value":"translate "},"right":{"name":{"identifier":"action"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAltLabel"},"scope":{"name":{"identifier":"node"}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rf"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nodeContext"},"scope":{"name":{"identifier":"translator"}}},"value":{"name":{"identifier":"ruleCtx"},"scope":{"name":{"identifier":"rf"}}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nodeContext"},"scope":{"name":{"identifier":"translator"}}},"value":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altLabelCtxs"},"scope":{"name":{"identifier":"rf"}}},"arguments":[{"name":{"identifier":"altLabel"}}]}}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"action"}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRStringStream"}}}]}},{"expression":{"name":{"identifier":"setLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"tokenWithinAction"}}}]}},{"expression":{"name":{"identifier":"setCharPositionInLine"},"scope":{"name":{"identifier":"in"}},"arguments":[{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"tokenWithinAction"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionSplitter"}},"arguments":[{"name":{"identifier":"in"}},{"name":{"identifier":"translator"}}]},"name":{"identifier":"trigger"},"type":{"name":{"identifier":"ActionSplitter"}}}]}},{"expression":{"name":{"identifier":"getActionTokens"},"scope":{"name":{"identifier":"trigger"}}}},{"expression":{"name":{"identifier":"chunks"},"scope":{"name":{"identifier":"translator"}}}}]}
/codegen/actiontranslator.java	attr	{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"value":"action-translator"},{"operator":"PLUS","left":{"value":"attr "},"right":{"name":{"identifier":"x"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"statements":[{"selector":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"dict"},"scope":{"name":{"identifier":"a"}}}},"entries":[{"label":{"name":{"identifier":"ARG"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"ArgRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}},{}]},{"label":{"name":{"identifier":"RET"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"RetValueRef"}},"arguments":[{"name":{"identifier":"ruleCtx"},"scope":{"name":{"identifier":"rf"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}},{}]},{"label":{"name":{"identifier":"LOCAL"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"LocalRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}},{}]},{"label":{"name":{"identifier":"PREDEFINED_RULE"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"name":{"identifier":"getRulePropertyRef"},"arguments":[{"name":{"identifier":"x"}}]}]}},{}]}]}]}},{"condition":{"name":{"identifier":"resolvesToToken"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"TokenRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getTokenLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}]}},{}]}},{"condition":{"name":{"identifier":"resolvesToLabel"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"LabelRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getTokenLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}]}},{}]}},{"condition":{"name":{"identifier":"resolvesToListLabel"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"ListLabelRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}},{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"LabelRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getRuleLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]}]}}]}}]}
/codegen/actiontranslator.java	qualifiedAttr	{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"value":"action-translator"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"qattr "},"right":{"name":{"identifier":"x"}}},"right":{"value":"."}},"right":{"name":{"identifier":"y"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"node"}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"attr"},"arguments":[{"name":{"identifier":"expr"}},{"name":{"identifier":"x"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"ActionText"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"operator":"PLUS","left":{"value":"."},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}}}]}]}},{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"resolveToAttribute"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"node"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}}},"arguments":[{"name":{"identifier":"UNKNOWN_SIMPLE_ATTRIBUTE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},{"name":{"identifier":"x"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"value":"rule"}]}},{}]}},{"selector":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"dict"},"scope":{"name":{"identifier":"a"}}}},"entries":[{"label":{"name":{"identifier":"ARG"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"ArgRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}}]}]}},{}]},{"label":{"name":{"identifier":"RET"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"QRetValueRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getRuleLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}}]}]}},{}]},{"label":{"name":{"identifier":"PREDEFINED_RULE"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"name":{"identifier":"getRulePropertyRef"},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}]}},{}]},{"label":{"name":{"identifier":"TOKEN"}},"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"name":{"identifier":"getTokenPropertyRef"},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"y"}}]}]}},{}]}]}]}
/codegen/actiontranslator.java	setAttr	{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"value":"action-translator"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"setAttr "},"right":{"name":{"identifier":"x"}}},"right":{"value":" "}},"right":{"name":{"identifier":"rhs"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"translateActionChunk"},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"rf"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rhs"}}},{"name":{"identifier":"node"}}]},"name":{"identifier":"rhsChunks"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ActionChunk"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"SetAttr"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"rhsChunks"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"SetAttr"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"name":{"identifier":"s"}}]}}]}
/codegen/actiontranslator.java	nonLocalAttr	{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"value":"action-translator"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"nonLocalAttr "},"right":{"name":{"identifier":"x"}}},"right":{"value":"::"}},"right":{"name":{"identifier":"y"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"NonLocalAttrRef"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}}]}]}}]}
/codegen/actiontranslator.java	setNonLocalAttr	{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"gen"}}}},"arguments":[{"value":"action-translator"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"setNonLocalAttr "},"right":{"name":{"identifier":"x"}}},"right":{"value":"::"}},"right":{"name":{"identifier":"y"}}},"right":{"value":"="}},"right":{"name":{"identifier":"rhs"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"translateActionChunk"},"arguments":[{"name":{"identifier":"factory"}},{"name":{"identifier":"rf"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rhs"}}},{"name":{"identifier":"node"}}]},"name":{"identifier":"rhsChunks"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ActionChunk"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"SetNonLocalAttr"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}},{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"rhsChunks"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"SetNonLocalAttr"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"name":{"identifier":"s"}}]}}]}
/codegen/actiontranslator.java	text	{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"chunks"}},"arguments":[{"type":{"name":{"identifier":"ActionText"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"text"}}]}]}}]}
/codegen/actiontranslator.java	getTokenPropertyRef	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenPropToModelMap"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"y"}}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"TokenPropertyRef"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"c"}},"arguments":[{"type":{"name":{"identifier":"StructDecl"}}},{"type":{"name":{"identifier":"String"}}}]},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"TokenPropertyRef"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getTokenLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]},"name":{"identifier":"ref"},"type":{"name":{"identifier":"TokenPropertyRef"}}}]}},{"expression":{"name":{"identifier":"ref"}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"e"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]},{"expression":{}}]}
/codegen/actiontranslator.java	getRulePropertyRef	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"thisRulePropToModelMap"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"prop"}}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"RulePropertyRef"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"c"}},"arguments":[{"type":{"name":{"identifier":"StructDecl"}}},{"type":{"name":{"identifier":"String"}}}]},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"RulePropertyRef"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getRuleLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"prop"}}}]}]},"name":{"identifier":"ref"},"type":{"name":{"identifier":"RulePropertyRef"}}}]}},{"expression":{"name":{"identifier":"ref"}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"e"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]},{"expression":{}}]}
/codegen/actiontranslator.java	getRulePropertyRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGrammar"},"scope":{"name":{"identifier":"factory"}}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"rulePropToModelMap"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"prop"}}}]},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"RulePropertyRef"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"c"}},"arguments":[{"type":{"name":{"identifier":"StructDecl"}}},{"type":{"name":{"identifier":"String"}}}]},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"extendedType":{"name":{"identifier":"RulePropertyRef"}}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}},"arguments":[{"name":{"identifier":"nodeContext"}},{"name":{"identifier":"getRuleLabel"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"x"}}}]}]},"name":{"identifier":"ref"},"type":{"name":{"identifier":"RulePropertyRef"}}}]}},{"expression":{"name":{"identifier":"ref"}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"e"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"prop"}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]},{"expression":{}}]}
/codegen/actiontranslator.java	getTokenLabel	{"statements":[{"condition":{"name":{"identifier":"resolvesToLabel"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"node"}}]},"thenStmt":{"expression":{"name":{"identifier":"x"}}}},{"expression":{"name":{"identifier":"getImplicitTokenLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}},"arguments":[{"name":{"identifier":"x"}}]}}]}
/codegen/actiontranslator.java	getRuleLabel	{"statements":[{"condition":{"name":{"identifier":"resolvesToLabel"},"scope":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"name":{"identifier":"x"}},{"name":{"identifier":"node"}}]},"thenStmt":{"expression":{"name":{"identifier":"x"}}}},{"expression":{"name":{"identifier":"getImplicitRuleLabel"},"scope":{"name":{"identifier":"getTarget"},"scope":{"name":{"identifier":"getGenerator"},"scope":{"name":{"identifier":"factory"}}}},"arguments":[{"name":{"identifier":"x"}}]}}]}
/codegen/defaultoutputmodelfactory.java	setController	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"controller"},"scope":{}},"value":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getController	{"statements":[{"expression":{"name":{"identifier":"controller"}}}]}
/codegen/defaultoutputmodelfactory.java	rulePostamble	{"statements":[{"condition":{"operator":"OR","left":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"after"}]},"right":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"namedActions"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"finally"}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getGenerator"}},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"gen"}}},"name":{"identifier":"codegenTemplates"},"type":{"name":{"identifier":"STGroup"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleSetStopToken"}]},"name":{"identifier":"setStopTokenAST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Action"}},"arguments":[{},{"name":{"identifier":"ruleCtx"},"scope":{"name":{"identifier":"function"}}},{"name":{"identifier":"setStopTokenAST"}}]},"name":{"identifier":"setStopTokenAction"},"type":{"name":{"identifier":"Action"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]},"arguments":[{"value":"1"}]},"name":{"identifier":"ops"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ops"}},"arguments":[{"name":{"identifier":"setStopTokenAction"}}]}},{"expression":{"name":{"identifier":"ops"}}}]}},{"expression":{"name":{"identifier":"rulePostamble"},"scope":{},"arguments":[{"name":{"identifier":"function"}},{"name":{"identifier":"r"}}]}}]}
/codegen/defaultoutputmodelfactory.java	getGrammar	{"statements":[{"expression":{"name":{"identifier":"g"}}}]}
/codegen/defaultoutputmodelfactory.java	getGenerator	{"statements":[{"expression":{"name":{"identifier":"gen"}}}]}
/codegen/defaultoutputmodelfactory.java	getRoot	{"statements":[{"expression":{"name":{"identifier":"getRoot"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getCurrentRuleFunction	{"statements":[{"expression":{"name":{"identifier":"getCurrentRuleFunction"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getCurrentOuterMostAlt	{"statements":[{"expression":{"name":{"identifier":"getCurrentOuterMostAlt"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getCurrentBlock	{"statements":[{"expression":{"name":{"identifier":"getCurrentBlock"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getCurrentOuterMostAlternativeBlock	{"statements":[{"expression":{"name":{"identifier":"getCurrentOuterMostAlternativeBlock"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getCodeBlockLevel	{"statements":[{"expression":{"name":{"identifier":"codeBlockLevel"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	getTreeLevel	{"statements":[{"expression":{"name":{"identifier":"treeLevel"},"scope":{"name":{"identifier":"controller"}}}}]}
/codegen/defaultoutputmodelfactory.java	list	{"statements":[{"expression":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]},"arguments":[{"name":{"identifier":"asList"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"values"}}]}]}}]}
/codegen/defaultoutputmodelfactory.java	list	{"statements":[{"expression":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"SrcOp"}}]},"arguments":[{"name":{"identifier":"values"}}]}}]}
/codegen/defaultoutputmodelfactory.java	getCurrentDeclForName	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"getCurrentBlock"}}},"right":{}},"thenStmt":{"expression":{}}},{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"d"}}},"arguments":[{"name":{"identifier":"name"}}]},"thenStmt":{"expression":{"name":{"identifier":"d"}}}}]},"iterable":{"name":{"identifier":"elements"},"scope":{"name":{"identifier":"locals"},"scope":{"name":{"identifier":"getCurrentBlock"}}}},"variable":{"variables":[{"name":{"identifier":"d"},"type":{"name":{"identifier":"Decl"}}}]}},{"expression":{}}]}
/codegen/outputmodelfactory.java	getGrammar	[]
/codegen/outputmodelfactory.java	getGenerator	[]
/codegen/outputmodelfactory.java	setController	[]
/codegen/outputmodelfactory.java	getController	[]
/codegen/outputmodelfactory.java	parserFile	[]
/codegen/outputmodelfactory.java	parser	[]
/codegen/outputmodelfactory.java	lexerFile	[]
/codegen/outputmodelfactory.java	lexer	[]
/codegen/outputmodelfactory.java	rule	[]
/codegen/outputmodelfactory.java	rulePostamble	[]
/codegen/outputmodelfactory.java	alternative	[]
/codegen/outputmodelfactory.java	finishAlternative	[]
/codegen/outputmodelfactory.java	epsilon	[]
/codegen/outputmodelfactory.java	ruleRef	[]
/codegen/outputmodelfactory.java	tokenRef	[]
/codegen/outputmodelfactory.java	stringRef	[]
/codegen/outputmodelfactory.java	set	[]
/codegen/outputmodelfactory.java	wildcard	[]
/codegen/outputmodelfactory.java	action	[]
/codegen/outputmodelfactory.java	sempred	[]
/codegen/outputmodelfactory.java	getChoiceBlock	[]
/codegen/outputmodelfactory.java	getEBNFBlock	[]
/codegen/outputmodelfactory.java	getLL1ChoiceBlock	[]
/codegen/outputmodelfactory.java	getComplexChoiceBlock	[]
/codegen/outputmodelfactory.java	getLL1EBNFBlock	[]
/codegen/outputmodelfactory.java	getComplexEBNFBlock	[]
/codegen/outputmodelfactory.java	getLL1Test	[]
/codegen/outputmodelfactory.java	needsImplicitLabel	[]
/codegen/outputmodelfactory.java	getRoot	[]
/codegen/outputmodelfactory.java	getCurrentRuleFunction	[]
/codegen/outputmodelfactory.java	getCurrentOuterMostAlt	[]
/codegen/outputmodelfactory.java	getCurrentBlock	[]
/codegen/outputmodelfactory.java	getCurrentOuterMostAlternativeBlock	[]
/codegen/outputmodelfactory.java	getCodeBlockLevel	[]
/codegen/outputmodelfactory.java	getTreeLevel	[]
/tool.java	main	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Tool"}},"arguments":[{"name":{"identifier":"args"}}]},"name":{"identifier":"antlr"},"type":{"name":{"identifier":"Tool"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"args"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"help"},"scope":{"name":{"identifier":"antlr"}}}},{"expression":{"name":{"identifier":"exit"},"scope":{"name":{"identifier":"antlr"}},"arguments":[{"value":"0"}]}}]}},{"finallyBlock":{"statements":[{"condition":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"antlr"}}},"thenStmt":{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"save"},"scope":{"name":{"identifier":"logMgr"},"scope":{"name":{"identifier":"antlr"}}}},"name":{"identifier":"logname"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"operator":"PLUS","left":{"value":"wrote "},"right":{"name":{"identifier":"logname"}}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"antlr"}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]}]}}]},"tryBlock":{"statements":[{"expression":{"name":{"identifier":"processGrammarsOnCommandLine"},"scope":{"name":{"identifier":"antlr"}}}}]}},{"condition":{"name":{"identifier":"return_dont_exit"},"scope":{"name":{"identifier":"antlr"}}},"thenStmt":{}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"antlr"}}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"exit"},"scope":{"name":{"identifier":"antlr"}},"arguments":[{"value":"1"}]}}]}},{"expression":{"name":{"identifier":"exit"},"scope":{"name":{"identifier":"antlr"}},"arguments":[{"value":"0"}]}}]}
/tool.java	handleArgs	{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"args"}}},"name":{"identifier":"arg"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}},{"condition":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"value":"-D"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"handleOptionSetArg"},"arguments":[{"name":{"identifier":"arg"}}]}},{}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"value":"0"}]},"right":{"value":"-"}},"thenStmt":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"grammarFiles"}},"arguments":[{"name":{"identifier":"arg"}}]}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"grammarFiles"}},"arguments":[{"name":{"identifier":"arg"}}]}}},{}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"found"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"o"}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"found"}},"value":{"value":"true"}}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"argValue"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"argType"},"scope":{"name":{"identifier":"o"}}},"right":{"name":{"identifier":"STRING"},"scope":{"name":{"identifier":"OptionArgType"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"argValue"}},"value":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"args"}}}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getClass"},"scope":{}},"name":{"identifier":"c"},"type":{"name":{"identifier":"Class"},"typeArguments":[{"extendedType":{"name":{"identifier":"Tool"}}}]}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getField"},"scope":{"name":{"identifier":"c"}},"arguments":[{"name":{"identifier":"fieldName"},"scope":{"name":{"identifier":"o"}}}]},"name":{"identifier":"f"},"type":{"name":{"identifier":"Field"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"argValue"}},"right":{}},"elseStmt":{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"f"}},"arguments":[{},{"name":{"identifier":"argValue"}}]}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"value":"-no-"}]},"elseStmt":{"expression":{"name":{"identifier":"setBoolean"},"scope":{"name":{"identifier":"f"}},"arguments":[{},{"value":"true"}]}},"thenStmt":{"expression":{"name":{"identifier":"setBoolean"},"scope":{"name":{"identifier":"f"}},"arguments":[{},{"value":"false"}]}}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"operator":"PLUS","left":{"value":"can't access field "},"right":{"name":{"identifier":"fieldName"},"scope":{"name":{"identifier":"o"}}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]}]}}]},"iterable":{"name":{"identifier":"optionDefs"}},"variable":{"variables":[{"name":{"identifier":"o"},"type":{"name":{"identifier":"Option"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"found"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"INVALID_CMDLINE_ARG"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"arg"}}]}}]}}]},"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"args"}},"right":{}},"right":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"args"}}}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"outputDirectory"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDirectory"}},"value":{"value":"."}}}]},"thenStmt":{"statements":[{"condition":{"operator":"OR","left":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"outputDirectory"}},"arguments":[{"value":"/"}]},"right":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"outputDirectory"}},"arguments":[{"value":"\\"}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDirectory"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"outputDirectory"}},"arguments":[{"value":"0"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"outputDirectory"}}},"right":{"value":"1"}}]}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDirectory"}}]},"name":{"identifier":"outDir"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"haveOutputDir"}},"value":{"value":"true"}}},{"condition":{"operator":"AND","left":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"outDir"}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDirectory"},"scope":{"name":{"identifier":"outDir"}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"OUTPUT_DIR_IS_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"outputDirectory"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDirectory"}},"value":{"value":"."}}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"libDirectory"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"libDirectory"}},"value":{"value":"."}}}]},"thenStmt":{"statements":[{"condition":{"operator":"OR","left":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"libDirectory"}},"arguments":[{"value":"/"}]},"right":{"name":{"identifier":"endsWith"},"scope":{"name":{"identifier":"libDirectory"}},"arguments":[{"value":"\\"}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"libDirectory"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"libDirectory"}},"arguments":[{"value":"0"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"libDirectory"}}},"right":{"value":"1"}}]}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"libDirectory"}}]},"name":{"identifier":"outDir"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"outDir"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"DIR_NOT_FOUND"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"libDirectory"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"libDirectory"}},"value":{"value":"."}}}]}}]}},{"condition":{"name":{"identifier":"launch_ST_inspector"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"trackCreationEvents"},"scope":{"name":{"identifier":"STGroup"}}},"value":{"value":"true"}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"return_dont_exit"}},"value":{"value":"true"}}}]}}]}
/tool.java	handleOptionSetArg	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"value":"="}]},"name":{"identifier":"eq"},"type":{"type":"INT"}}]}},{"condition":{"operator":"AND","left":{"operator":"GREATER","left":{"name":{"identifier":"eq"}},"right":{"value":"0"}},"right":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"arg"}}},"right":{"value":"3"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"BAD_OPTION_SET_SYNTAX"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"arg"}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"name":{"identifier":"length"},"scope":{"value":"-D"}},{"name":{"identifier":"eq"}}]},"name":{"identifier":"option"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"arg"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"eq"}},"right":{"value":"1"}}]},"name":{"identifier":"value"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"value"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"BAD_OPTION_SET_SYNTAX"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"arg"}}]}},{}]}},{"condition":{"operator":"OR","left":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"parserOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"option"}}]},"right":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"lexerOptions"},"scope":{"name":{"identifier":"Grammar"}}},"arguments":[{"name":{"identifier":"option"}}]}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION"},"scope":{"name":{"identifier":"ErrorType"}}},{},{},{"name":{"identifier":"option"}}]}}]},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"grammarOptions"}},"right":{}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"grammarOptions"}},"value":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"String"}}]}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"grammarOptions"}},"arguments":[{"name":{"identifier":"option"}},{"name":{"identifier":"value"}}]}}]}}]}}]}
/tool.java	processGrammarsOnCommandLine	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"sortGrammarByTokenVocab"},"arguments":[{"name":{"identifier":"grammarFiles"}}]},"name":{"identifier":"sortedGrammars"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarRootAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createGrammar"},"arguments":[{"name":{"identifier":"t"}}]},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},"value":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"t"}}}}},{"condition":{"name":{"identifier":"gen_dependencies"}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"process"},"arguments":[{"name":{"identifier":"g"}},{"value":"true"}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BuildDependencyGenerator"}},"arguments":[{},{"name":{"identifier":"g"}}]},"name":{"identifier":"dep"},"type":{"name":{"identifier":"BuildDependencyGenerator"}}}]}},{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"render"},"scope":{"name":{"identifier":"getDependencies"},"scope":{"name":{"identifier":"dep"}}}}]}}]}}]},"iterable":{"name":{"identifier":"sortedGrammars"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}}]}
/tool.java	process	{"statements":[{"expression":{"name":{"identifier":"loadImportedGrammars"},"scope":{"name":{"identifier":"g"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarTransformPipeline"}},"arguments":[{"name":{"identifier":"g"}},{}]},"name":{"identifier":"transform"},"type":{"name":{"identifier":"GrammarTransformPipeline"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"transform"}}}},{"expression":{"variables":[{"name":{"identifier":"lexerg"},"type":{"name":{"identifier":"LexerGrammar"}}}]}},{"expression":{"variables":[{"name":{"identifier":"lexerAST"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}},"right":{"name":{"identifier":"COMBINED"},"scope":{"name":{"identifier":"ANTLRParser"}}}}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"hasErrors"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerAST"}},"value":{"name":{"identifier":"extractImplicitLexer"},"scope":{"name":{"identifier":"transform"}},"arguments":[{"name":{"identifier":"g"}}]}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"lexerAST"}},"right":{}},"thenStmt":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammarOptions"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cmdLineOptions"},"scope":{"name":{"identifier":"lexerAST"}}},"value":{"name":{"identifier":"grammarOptions"}}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerg"}},"value":{"type":{"name":{"identifier":"LexerGrammar"}},"arguments":[{},{"name":{"identifier":"lexerAST"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"lexerg"}}},"value":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"originalGrammar"},"scope":{"name":{"identifier":"lexerg"}}},"value":{"name":{"identifier":"g"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"implicitLexer"},"scope":{"name":{"identifier":"g"}}},"value":{"name":{"identifier":"lexerg"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"implicitLexerOwner"},"scope":{"name":{"identifier":"lexerg"}}},"value":{"name":{"identifier":"g"}}}},{"expression":{"name":{"identifier":"processNonCombinedGrammar"},"arguments":[{"name":{"identifier":"lexerg"}},{"name":{"identifier":"gencode"}}]}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"implicitLexer"},"scope":{"name":{"identifier":"g"}}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"importVocab"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"implicitLexer"},"scope":{"name":{"identifier":"g"}}}]}}},{"expression":{"name":{"identifier":"processNonCombinedGrammar"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"gencode"}}]}}]}
/tool.java	processNonCombinedGrammar	{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"right":{}},"right":{"name":{"identifier":"hasErrors"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}}},"thenStmt":{}},{"condition":{"name":{"identifier":"internalOption_PrintGrammarTree"}},"thenStmt":{"expression":{"name":{"identifier":"println"},"scope":{"name":{"identifier":"out"},"scope":{"name":{"identifier":"System"}}},"arguments":[{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"checkForRuleIssues"},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"ruleFail"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"name":{"identifier":"ruleFail"}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"}}},"name":{"identifier":"prevErrors"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"SemanticPipeline"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"sem"},"type":{"name":{"identifier":"SemanticPipeline"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"sem"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"value":"language"}]},"name":{"identifier":"language"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"targetExists"},"scope":{"name":{"identifier":"CodeGenerator"}},"arguments":[{"name":{"identifier":"language"}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"CANNOT_CREATE_TARGET_GENERATOR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"language"}}]}},{}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"}}},"right":{"name":{"identifier":"prevErrors"}}},"thenStmt":{}},{"expression":{"variables":[{"name":{"identifier":"factory"},"type":{"name":{"identifier":"ATNFactory"}}}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"factory"}},"value":{"type":{"name":{"identifier":"ParserATNFactory"}},"arguments":[{"name":{"identifier":"g"}}]}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"factory"}},"value":{"type":{"name":{"identifier":"LexerATNFactory"}},"arguments":[{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}}]}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}},"value":{"name":{"identifier":"createATN"},"scope":{"name":{"identifier":"factory"}}}}},{"condition":{"name":{"identifier":"generate_ATN_dot"}},"thenStmt":{"expression":{"name":{"identifier":"generateATNs"},"arguments":[{"name":{"identifier":"g"}}]}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"generateInterpreterData"},"arguments":[{"name":{"identifier":"g"}}]}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AnalysisPipeline"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"anal"},"type":{"name":{"identifier":"AnalysisPipeline"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"anal"}}}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"right":{"name":{"identifier":"prevErrors"}}},"thenStmt":{}},{"condition":{"name":{"identifier":"gencode"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CodeGenPipeline"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenPipeline"}}}]}},{"expression":{"name":{"identifier":"process"},"scope":{"name":{"identifier":"gen"}}}}]}}]}
/tool.java	checkForRuleIssues	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"RULES"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"RULES"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]},"arguments":[{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"RULES"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}]},"name":{"identifier":"rules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"rules"}},"arguments":[{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"mode"}},"arguments":[{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]}]}}]},"iterable":{"name":{"identifier":"getAllChildrenWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"MODE"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"variable":{"variables":[{"name":{"identifier":"mode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"redefinition"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"HashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"RuleAST"}}]}},"name":{"identifier":"ruleToAST"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"RuleAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"RuleAST"}}},"name":{"identifier":"ruleAST"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ruleAST"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"ID"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleToAST"}},"arguments":[{"name":{"identifier":"ruleName"}}]},"name":{"identifier":"prev"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"prev"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"prev"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"prevChild"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"RULE_REDEFINITION"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"ruleName"}},{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"prevChild"}}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"redefinition"}},"value":{"value":"true"}}},{}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"ruleToAST"}},"arguments":[{"name":{"identifier":"ruleName"}},{"name":{"identifier":"ruleAST"}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"classDeclaration":{"isInterface":"false","name":{"identifier":"UndefChecker"},"extendedTypes":[{"name":{"identifier":"GrammarTreeVisitor"}}],"members":[{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"badref"},"type":{"type":"BOOLEAN"}}]},{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"EOF"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]},"thenStmt":{"statements":[{}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"expression":{"name":{"identifier":"ruleRef"},"arguments":[{"name":{"identifier":"ref"}},{}]}}}]},"type":{},"name":{"identifier":"tokenRef"},"parameters":[{"isVarArgs":"false","name":{"identifier":"ref"},"type":{"name":{"identifier":"TerminalAST"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleToAST"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]},"name":{"identifier":"ruleAST"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ref"}}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isUpperCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"currentRuleName"}},"arguments":[{"value":"0"}]}]},"right":{"name":{"identifier":"isLowerCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},"arguments":[{"value":"0"}]}]}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ruleAST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"badref"}},"value":{"value":"true"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNDEFINED_RULE_REF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"badref"}},"value":{"value":"true"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"PARSER_RULE_REF_IN_LEXER_RULE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"currentRuleName"}}]}}]}}]},"type":{},"name":{"identifier":"ruleRef"},"parameters":[{"isVarArgs":"false","name":{"identifier":"ref"},"type":{"name":{"identifier":"GrammarAST"}}},{"isVarArgs":"false","name":{"identifier":"arg"},"type":{"name":{"identifier":"ActionAST"}}}],"annotations":[{"name":{"identifier":"Override"}}]},{"body":{"statements":[{"expression":{"name":{"identifier":"errMgr"}}}]},"type":{"name":{"identifier":"ErrorManager"}},"name":{"identifier":"getErrorManager"},"annotations":[{"name":{"identifier":"Override"}}]}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"UndefChecker"}}},"name":{"identifier":"chk"},"type":{"name":{"identifier":"UndefChecker"}}}]}},{"expression":{"name":{"identifier":"visitGrammar"},"scope":{"name":{"identifier":"chk"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}}]}},{"expression":{"operator":"OR","left":{"name":{"identifier":"redefinition"}},"right":{"name":{"identifier":"badref"},"scope":{"name":{"identifier":"chk"}}}}}]}
/tool.java	tokenRef	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"value":"EOF"},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]},"thenStmt":{"statements":[{}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"expression":{"name":{"identifier":"ruleRef"},"arguments":[{"name":{"identifier":"ref"}},{}]}}}]}
/tool.java	ruleRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"ruleToAST"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]},"name":{"identifier":"ruleAST"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSourceName"},"scope":{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ref"}}}}},"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"isUpperCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"currentRuleName"}},"arguments":[{"value":"0"}]}]},"right":{"name":{"identifier":"isLowerCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},"arguments":[{"value":"0"}]}]}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ruleAST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"badref"}},"value":{"value":"true"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"UNDEFINED_RULE_REF"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"badref"}},"value":{"value":"true"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"PARSER_RULE_REF_IN_LEXER_RULE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ref"}}},{"name":{"identifier":"currentRuleName"}}]}}]}}]}
/tool.java	getErrorManager	{"statements":[{"expression":{"name":{"identifier":"errMgr"}}}]}
/tool.java	sortGrammarByTokenVocab	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Graph"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"g"},"type":{"name":{"identifier":"Graph"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarRootAST"}}]}},"name":{"identifier":"roots"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarRootAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseGrammar"},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"right":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarASTErrorNode"}}}},"thenStmt":{}},{"condition":{"name":{"identifier":"hasErrors"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarRootAST"}}}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarRootAST"}}},"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"roots"}},"arguments":[{"name":{"identifier":"root"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"root"}}},"value":{"name":{"identifier":"fileName"}}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"root"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"grammarName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"findOptionValueAST"},"arguments":[{"name":{"identifier":"root"}},{"value":"tokenVocab"}]},"name":{"identifier":"tokenVocabNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tokenVocabNode"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tokenVocabNode"}}},"name":{"identifier":"vocabName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"vocabName"}}},"name":{"identifier":"len"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"vocabName"}},"arguments":[{"value":"0"}]},"name":{"identifier":"firstChar"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"vocabName"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"len"}},"right":{"value":"1"}}]},"name":{"identifier":"lastChar"},"type":{"type":"INT"}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"len"}},"right":{"value":"2"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"firstChar"}},"right":{"value":"\'"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"lastChar"}},"right":{"value":"\'"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"vocabName"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"vocabName"}},"arguments":[{"value":"1"},{"operator":"MINUS","left":{"name":{"identifier":"len"}},"right":{"value":"1"}}]}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"vocabName"}},"arguments":[{"value":"/"}]},"name":{"identifier":"lastSlash"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"lastSlash"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"vocabName"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"vocabName"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"lastSlash"}},"right":{"value":"1"}}]}}}]}},{"expression":{"name":{"identifier":"addEdge"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"grammarName"}},{"name":{"identifier":"vocabName"}}]}}]}},{"expression":{"name":{"identifier":"addEdge"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"grammarName"}},{"name":{"identifier":"grammarName"}}]}}]},"iterable":{"name":{"identifier":"fileNames"}},"variable":{"variables":[{"name":{"identifier":"fileName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"sort"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"sortedGrammarNames"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"GrammarRootAST"}}]}},"name":{"identifier":"sortedRoots"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarRootAST"}}]}}]}},{"body":{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getGrammarName"},"scope":{"name":{"identifier":"root"}}},"arguments":[{"name":{"identifier":"grammarName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"sortedRoots"}},"arguments":[{"name":{"identifier":"root"}}]}},{}]}}]},"iterable":{"name":{"identifier":"roots"}},"variable":{"variables":[{"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}}]},"iterable":{"name":{"identifier":"sortedGrammarNames"}},"variable":{"variables":[{"name":{"identifier":"grammarName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"sortedRoots"}}}]}
/tool.java	findOptionValueAST	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"root"}},"arguments":[{"name":{"identifier":"OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"options"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"options"}},"right":{}},"right":{"operator":"GREATER","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"options"}}},"right":{"value":"0"}}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"o"}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"c"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"c"}}},"right":{"name":{"identifier":"ASSIGN"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"c"}},"arguments":[{"value":"0"}]}},"arguments":[{"name":{"identifier":"option"}}]}},"thenStmt":{"statements":[{"expression":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"c"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}}]}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"options"}}},"variable":{"variables":[{"name":{"identifier":"o"},"type":{"name":{"identifier":"Object"}}}]}}]}},{"expression":{}}]}
/tool.java	createGrammar	{"statements":[{"expression":{"variables":[{"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"grammarType"},"scope":{"name":{"identifier":"ast"}}},"right":{"name":{"identifier":"LEXER"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"}},"value":{"type":{"name":{"identifier":"Grammar"}},"arguments":[{},{"name":{"identifier":"ast"}}]}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"g"}},"value":{"type":{"name":{"identifier":"LexerGrammar"}},"arguments":[{},{"name":{"identifier":"ast"}}]}}}},{"expression":{"name":{"identifier":"setGrammarPtr"},"scope":{"name":{"identifier":"GrammarTransformPipeline"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"ast"}}]}},{"expression":{"name":{"identifier":"g"}}}]}
/tool.java	parseGrammar	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"file"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isAbsolute"},"scope":{"name":{"identifier":"file"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"file"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"inputDirectory"}},{"name":{"identifier":"fileName"}}]}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRFileStream"}},"arguments":[{"name":{"identifier":"getAbsolutePath"},"scope":{"name":{"identifier":"file"}}},{"name":{"identifier":"grammarEncoding"}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRFileStream"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parse"},"arguments":[{"name":{"identifier":"fileName"}},{"name":{"identifier":"in"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"expression":{"name":{"identifier":"t"}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"CANNOT_OPEN_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}},{"name":{"identifier":"fileName"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]},{"expression":{}}]}
/tool.java	loadGrammar	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseGrammar"},"arguments":[{"name":{"identifier":"fileName"}}]},"name":{"identifier":"grammarRootAST"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"createGrammar"},"arguments":[{"name":{"identifier":"grammarRootAST"}}]},"name":{"identifier":"g"},"type":{"name":{"identifier":"Grammar"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},"value":{"name":{"identifier":"fileName"}}}},{"expression":{"name":{"identifier":"process"},"arguments":[{"name":{"identifier":"g"}},{"value":"false"}]}},{"expression":{"name":{"identifier":"g"}}}]}
/tool.java	loadImportedGrammar	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"nameNode"}}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"importedGrammars"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"imported"},"type":{"name":{"identifier":"Grammar"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"imported"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"load "},"right":{"name":{"identifier":"name"}}},"right":{"value":" from "}},"right":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"importedFile"},"type":{"name":{"identifier":"File"}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"importedFile"}},"value":{"name":{"identifier":"getImportedGrammarFile"},"arguments":[{"name":{"identifier":"g"}},{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"name":{"identifier":"extension"}}}]}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"importedFile"}},"right":{}},"thenStmt":{"statements":[{}]}}]},"iterable":{"name":{"identifier":"ALL_GRAMMAR_EXTENSIONS"}},"variable":{"variables":[{"name":{"identifier":"extension"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"importedFile"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"CANNOT_FIND_IMPORTED_GRAMMAR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"nameNode"}}},{"name":{"identifier":"name"}}]}},{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAbsolutePath"},"scope":{"name":{"identifier":"importedFile"}}},"name":{"identifier":"absolutePath"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRFileStream"}},"arguments":[{"name":{"identifier":"absolutePath"}},{"name":{"identifier":"grammarEncoding"}}]},"name":{"identifier":"in"},"type":{"name":{"identifier":"ANTLRFileStream"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parse"},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"in"}}]},"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarRootAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"root"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"imported"}},"value":{"name":{"identifier":"createGrammar"},"arguments":[{"name":{"identifier":"root"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"imported"}}},"value":{"name":{"identifier":"absolutePath"}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"importedGrammars"}},"arguments":[{"name":{"identifier":"getGrammarName"},"scope":{"name":{"identifier":"root"}}},{"name":{"identifier":"imported"}}]}}]}},{"expression":{"name":{"identifier":"imported"}}}]}
/tool.java	parseGrammarFromString	{"statements":[{"expression":{"name":{"identifier":"parse"},"arguments":[{"value":"<string>"},{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"grammar"}}]}]}}]}
/tool.java	parse	{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"in"}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ToolANTLRLexer"}},"arguments":[{"name":{"identifier":"in"}},{}]},"name":{"identifier":"lexer"},"type":{"name":{"identifier":"ToolANTLRLexer"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTokenStream"}},"arguments":[{"name":{"identifier":"lexer"}}]},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"CommonTokenStream"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokens"},"scope":{"name":{"identifier":"lexer"}}},"value":{"name":{"identifier":"tokens"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ToolANTLRParser"}},"arguments":[{"name":{"identifier":"tokens"}},{}]},"name":{"identifier":"p"},"type":{"name":{"identifier":"ToolANTLRParser"}}}]}},{"expression":{"name":{"identifier":"setTreeAdaptor"},"scope":{"name":{"identifier":"p"}},"arguments":[{"name":{"identifier":"adaptor"}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"grammarSpec"},"scope":{"name":{"identifier":"p"}}},"name":{"identifier":"r"},"type":{"name":{"identifier":"ParserRuleReturnScope"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getTree"},"scope":{"name":{"identifier":"r"}}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"root"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"expression":{"name":{"identifier":"root"}},"type":{"name":{"identifier":"GrammarRootAST"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"hasErrors"},"scope":{"inner":{"expression":{"name":{"identifier":"root"}},"type":{"name":{"identifier":"GrammarRootAST"}}}}},"value":{"operator":"OR","left":{"operator":"GREATER","left":{"name":{"identifier":"getNumberOfSyntaxErrors"},"scope":{"name":{"identifier":"lexer"}}},"right":{"value":"0"}},"right":{"operator":"GREATER","left":{"name":{"identifier":"getNumberOfSyntaxErrors"},"scope":{"name":{"identifier":"p"}}},"right":{"value":"0"}}}}},{"check":{"operator":"EQUALS","left":{"name":{"identifier":"tokenStream"},"scope":{"inner":{"expression":{"name":{"identifier":"root"}},"type":{"name":{"identifier":"GrammarRootAST"}}}}},"right":{"name":{"identifier":"tokens"}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammarOptions"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cmdLineOptions"},"scope":{"inner":{"expression":{"name":{"identifier":"root"}},"type":{"name":{"identifier":"GrammarRootAST"}}}}},"value":{"name":{"identifier":"grammarOptions"}}}}]}},{"expression":{"inner":{"expression":{"name":{"identifier":"root"}},"type":{"name":{"identifier":"GrammarRootAST"}}}}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"V3_TREE_GRAMMAR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"}},{"name":{"identifier":"location"},"scope":{"name":{"identifier":"e"}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"v3TreeGrammarException"}}}}]},{"expression":{}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"internalError"},"scope":{"name":{"identifier":"ErrorManager"}},"arguments":[{"value":"can't generate this message at moment; antlr recovers"}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"re"},"type":{"name":{"identifier":"RecognitionException"}}}}]},{"expression":{}}]}
/tool.java	generateATNs	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"DOTGenerator"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"dotGenerator"},"type":{"name":{"identifier":"DOTGenerator"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}},"name":{"identifier":"grammars"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"grammars"}},"arguments":[{"name":{"identifier":"g"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getAllImportedGrammars"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"imported"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Grammar"}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"imported"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"grammars"}},"arguments":[{"name":{"identifier":"imported"}}]}}},{"body":{"statements":[{"body":{"statements":[{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getDOT"},"scope":{"name":{"identifier":"dotGenerator"}},"arguments":[{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}}},{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"dot"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"dot"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"writeDOTFile"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"r"}},{"name":{"identifier":"dot"}}]}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"CANNOT_WRITE_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"ig"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]},"iterable":{"name":{"identifier":"grammars"}},"variable":{"variables":[{"name":{"identifier":"ig"},"type":{"name":{"identifier":"Grammar"}}}]}}]}
/tool.java	generateInterpreterData	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"content"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"token literal names:\n"}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenLiteralNames"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"names"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"String"}}}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":"\n"}}]}}]},"iterable":{"name":{"identifier":"names"}},"variable":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"token symbolic names:\n"}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"names"}},"value":{"name":{"identifier":"getTokenSymbolicNames"},"scope":{"name":{"identifier":"g"}}}}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":"\n"}}]}}]},"iterable":{"name":{"identifier":"names"}},"variable":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"rule names:\n"}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"names"}},"value":{"name":{"identifier":"getRuleNames"},"scope":{"name":{"identifier":"g"}}}}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":"\n"}}]}}]},"iterable":{"name":{"identifier":"names"}},"variable":{"variables":[{"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"\n"}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"channel names:\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"DEFAULT_TOKEN_CHANNEL\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"HIDDEN\n"}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"channel"}},"right":{"value":"\n"}}]}}]},"iterable":{"name":{"identifier":"channelValueToNameList"},"scope":{"name":{"identifier":"g"}}},"variable":{"variables":[{"name":{"identifier":"channel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"mode names:\n"}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"mode"}},"right":{"value":"\n"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"modes"},"scope":{"inner":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}}}}},"variable":{"variables":[{"name":{"identifier":"mode"},"type":{"name":{"identifier":"String"}}}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"\n"}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSerialized"},"scope":{"name":{"identifier":"ATNSerializer"}},"arguments":[{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"serializedATN"},"type":{"name":{"identifier":"IntegerList"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"value":"atn:\n"}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"content"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"serializedATN"}}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutputFileWriter"},"arguments":[{"name":{"identifier":"g"}},{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}},"right":{"value":".interp"}}]},"name":{"identifier":"fw"},"type":{"name":{"identifier":"Writer"}}}]}},{"finallyBlock":{"statements":[{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"fw"}}}}]},"tryBlock":{"statements":[{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"fw"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"content"}}}]}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"CANNOT_WRITE_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]}]}
/tool.java	getOutputFileWriter	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"outputDirectory"}},"right":{}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"StringWriter"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutputDirectory"},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"outputDir"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDir"}},{"name":{"identifier":"fileName"}}]},"name":{"identifier":"outputFile"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"outputDir"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"mkdirs"},"scope":{"name":{"identifier":"outputDir"}}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"FileOutputStream"}},"arguments":[{"name":{"identifier":"outputFile"}}]},"name":{"identifier":"fos"},"type":{"name":{"identifier":"FileOutputStream"}}}]}},{"expression":{"variables":[{"name":{"identifier":"osw"},"type":{"name":{"identifier":"OutputStreamWriter"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammarEncoding"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"osw"}},"value":{"type":{"name":{"identifier":"OutputStreamWriter"}},"arguments":[{"name":{"identifier":"fos"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"osw"}},"value":{"type":{"name":{"identifier":"OutputStreamWriter"}},"arguments":[{"name":{"identifier":"fos"}},{"name":{"identifier":"grammarEncoding"}}]}}}]}},{"expression":{"type":{"name":{"identifier":"BufferedWriter"}},"arguments":[{"name":{"identifier":"osw"}}]}}]}
/tool.java	getImportedGrammarFile	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"inputDirectory"}},{"name":{"identifier":"fileName"}}]},"name":{"identifier":"importedFile"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"importedFile"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"gfile"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"gfile"}}},"name":{"identifier":"parentDir"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"importedFile"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"parentDir"}},{"name":{"identifier":"fileName"}}]}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"importedFile"}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"importedFile"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"libDirectory"}},{"name":{"identifier":"fileName"}}]}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"importedFile"}}}},"thenStmt":{"statements":[{"expression":{}}]}}]}}]}},{"expression":{"name":{"identifier":"importedFile"}}}]}
/tool.java	getOutputDirectory	{"statements":[{"condition":{"name":{"identifier":"exact_output_dir"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"new_getOutputDirectory"},"arguments":[{"name":{"identifier":"fileNameWithPath"}}]}}]}},{"expression":{"variables":[{"name":{"identifier":"outputDir"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"name":{"identifier":"fileDirectory"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileNameWithPath"}},"arguments":[{"name":{"identifier":"separatorChar"},"scope":{"name":{"identifier":"File"}}}]},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileDirectory"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"fileNameWithPath"}},"arguments":[{"value":"0"},{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileNameWithPath"}},"arguments":[{"name":{"identifier":"separatorChar"},"scope":{"name":{"identifier":"File"}}}]}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileDirectory"}},"value":{"value":"."}}}]}},{"condition":{"name":{"identifier":"haveOutputDir"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileDirectory"}}]}}}]},"thenStmt":{"statements":[{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"fileDirectory"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"name":{"identifier":"isAbsolute"},"scope":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileDirectory"}}]}},"right":{"name":{"identifier":"startsWith"},"scope":{"name":{"identifier":"fileDirectory"}},"arguments":[{"value":"~"}]}}}},"elseStmt":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"fileDirectory"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDirectory"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDirectory"}},{"name":{"identifier":"fileDirectory"}}]}}}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDirectory"}}]}}}]}}]}},{"expression":{"name":{"identifier":"outputDir"}}}]}
/tool.java	new_getOutputDirectory	{"statements":[{"expression":{"variables":[{"name":{"identifier":"outputDir"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"name":{"identifier":"fileDirectory"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileNameWithPath"}},"arguments":[{"name":{"identifier":"separatorChar"},"scope":{"name":{"identifier":"File"}}}]},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileDirectory"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"fileNameWithPath"}},"arguments":[{"value":"0"},{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileNameWithPath"}},"arguments":[{"name":{"identifier":"separatorChar"},"scope":{"name":{"identifier":"File"}}}]}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileDirectory"}},"value":{"value":"."}}}]}},{"condition":{"name":{"identifier":"haveOutputDir"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileDirectory"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"outputDir"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDirectory"}}]}}}]}},{"expression":{"name":{"identifier":"outputDir"}}}]}
/tool.java	writeDOTFile	{"statements":[{"expression":{"name":{"identifier":"writeDOTFile"},"arguments":[{"name":{"identifier":"g"}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"r"}}}},"right":{"value":"."}},"right":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}},{"name":{"identifier":"dot"}}]}}]}
/tool.java	writeDOTFile	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOutputFileWriter"},"arguments":[{"name":{"identifier":"g"}},{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":".dot"}}]},"name":{"identifier":"fw"},"type":{"name":{"identifier":"Writer"}}}]}},{"finallyBlock":{"statements":[{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"fw"}}}}]},"tryBlock":{"statements":[{"expression":{"name":{"identifier":"write"},"scope":{"name":{"identifier":"fw"}},"arguments":[{"name":{"identifier":"dot"}}]}}]}}]}
/tool.java	help	{"statements":[{"expression":{"name":{"identifier":"info"},"arguments":[{"operator":"PLUS","left":{"value":"ANTLR Parser Generator  Version "},"right":{"name":{"identifier":"VERSION"},"scope":{"name":{"identifier":"Tool"}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"o"}}},"right":{"inner":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"argType"},"scope":{"name":{"identifier":"o"}}},"right":{"name":{"identifier":"NONE"},"scope":{"name":{"identifier":"OptionArgType"}}}},"elseExpr":{"value":""},"thenExpr":{"value":" ___"}}}},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":" %-19s %s"},{"name":{"identifier":"name"}},{"name":{"identifier":"description"},"scope":{"name":{"identifier":"o"}}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"info"},"arguments":[{"name":{"identifier":"s"}}]}}]},"iterable":{"name":{"identifier":"optionDefs"}},"variable":{"variables":[{"name":{"identifier":"o"},"type":{"name":{"identifier":"Option"}}}]}}]}
/tool.java	log	{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"logMgr"}},"arguments":[{"name":{"identifier":"component"}},{"name":{"identifier":"msg"}}]}}]}
/tool.java	log	{"statements":[{"expression":{"name":{"identifier":"log"},"arguments":[{},{"name":{"identifier":"msg"}}]}}]}
/tool.java	getNumErrors	{"statements":[{"expression":{"name":{"identifier":"getNumErrors"},"scope":{"name":{"identifier":"errMgr"}}}}]}
/tool.java	addListener	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tl"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"listeners"}},"arguments":[{"name":{"identifier":"tl"}}]}}}]}
/tool.java	removeListener	{"statements":[{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"listeners"}},"arguments":[{"name":{"identifier":"tl"}}]}}]}
/tool.java	removeListeners	{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"listeners"}}}}]}
/tool.java	getListeners	{"statements":[{"expression":{"name":{"identifier":"listeners"}}}]}
/tool.java	info	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"listeners"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"info"},"scope":{"name":{"identifier":"defaultListener"}},"arguments":[{"name":{"identifier":"msg"}}]}},{}]}},{"body":{"expression":{"name":{"identifier":"info"},"scope":{"name":{"identifier":"l"}},"arguments":[{"name":{"identifier":"msg"}}]}},"iterable":{"name":{"identifier":"listeners"}},"variable":{"variables":[{"name":{"identifier":"l"},"type":{"name":{"identifier":"ANTLRToolListener"}}}]}}]}
/tool.java	error	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"listeners"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"error"},"scope":{"name":{"identifier":"defaultListener"}},"arguments":[{"name":{"identifier":"msg"}}]}},{}]}},{"body":{"expression":{"name":{"identifier":"error"},"scope":{"name":{"identifier":"l"}},"arguments":[{"name":{"identifier":"msg"}}]}},"iterable":{"name":{"identifier":"listeners"}},"variable":{"variables":[{"name":{"identifier":"l"},"type":{"name":{"identifier":"ANTLRToolListener"}}}]}}]}
/tool.java	warning	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"listeners"}}},"elseStmt":{"statements":[{"body":{"expression":{"name":{"identifier":"warning"},"scope":{"name":{"identifier":"l"}},"arguments":[{"name":{"identifier":"msg"}}]}},"iterable":{"name":{"identifier":"listeners"}},"variable":{"variables":[{"name":{"identifier":"l"},"type":{"name":{"identifier":"ANTLRToolListener"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"warning"},"scope":{"name":{"identifier":"defaultListener"}},"arguments":[{"name":{"identifier":"msg"}}]}}]}},{"condition":{"name":{"identifier":"warnings_are_errors"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"emit"},"scope":{"name":{"identifier":"errMgr"}},"arguments":[{"name":{"identifier":"WARNING_TREATED_AS_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"type":{"name":{"identifier":"ANTLRMessage"}},"arguments":[{"name":{"identifier":"WARNING_TREATED_AS_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}}]}]}}]}}]}
/tool.java	version	{"statements":[{"expression":{"name":{"identifier":"info"},"arguments":[{"operator":"PLUS","left":{"value":"ANTLR Parser Generator  Version "},"right":{"name":{"identifier":"VERSION"}}}]}}]}
/tool.java	exit	{"statements":[{"expression":{"name":{"identifier":"exit"},"scope":{"name":{"identifier":"System"}},"arguments":[{"name":{"identifier":"e"}}]}}]}
/tool.java	panic	{"statements":[{"expression":{"type":{"name":{"identifier":"Error"}},"arguments":[{"value":"ANTLR panic"}]}}]}
/parse/toolantlrparser.java	displayRecognitionError	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getParserErrorMessage"},"arguments":[{},{"name":{"identifier":"e"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"paraphrases"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"peek"},"scope":{"name":{"identifier":"paraphrases"}}},"name":{"identifier":"paraphrase"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"msg"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"msg"}},"right":{"value":" while "}},"right":{"name":{"identifier":"paraphrase"}}}}}]}},{"expression":{"name":{"identifier":"syntaxError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"SYNTAX_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"getSourceName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"e"}}},{"name":{"identifier":"e"}},{"name":{"identifier":"msg"}}]}}]}
/parse/toolantlrparser.java	getParserErrorMessage	{"statements":[{"expression":{"variables":[{"name":{"identifier":"msg"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"expression":{"name":{"identifier":"e"}},"type":{"name":{"identifier":"NoViableAltException"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"e"}},"type":{"name":{"identifier":"v4ParserException"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"msg"}},"value":{"name":{"identifier":"getErrorMessage"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"e"}},{"name":{"identifier":"getTokenNames"},"scope":{"name":{"identifier":"parser"}}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"msg"}},"value":{"name":{"identifier":"msg"},"scope":{"inner":{"expression":{"name":{"identifier":"e"}},"type":{"name":{"identifier":"v4ParserException"}}}}}}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenErrorDisplay"},"scope":{"name":{"identifier":"parser"}},"arguments":[{"name":{"identifier":"token"},"scope":{"name":{"identifier":"e"}}}]},"name":{"identifier":"name"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"msg"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"name"}},"right":{"value":" came as a complete surprise to me"}}}}]}},{"expression":{"name":{"identifier":"msg"}}}]}
/parse/toolantlrparser.java	grammarError	{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"getSourceName"}},{"name":{"identifier":"token"}},{"name":{"identifier":"args"}}]}}]}
/parse/grammartoken.java	getCharPositionInLine	{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"originalTokenIndex"}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"originalTokenStream"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"originalTokenIndex"}}]}}}},{"expression":{"name":{"identifier":"getCharPositionInLine"},"scope":{}}}]}
/parse/grammartoken.java	getLine	{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"originalTokenIndex"}},"right":{"value":"0"}},"thenStmt":{"expression":{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"originalTokenStream"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"originalTokenIndex"}}]}}}},{"expression":{"name":{"identifier":"getLine"},"scope":{}}}]}
/parse/grammartoken.java	getTokenIndex	{"statements":[{"expression":{"name":{"identifier":"originalTokenIndex"}}}]}
/parse/grammartoken.java	getStartIndex	{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"originalTokenIndex"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"getStartIndex"},"scope":{"inner":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"originalTokenStream"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"originalTokenIndex"}}]},"type":{"name":{"identifier":"CommonToken"}}}}}}]}},{"expression":{"name":{"identifier":"getStartIndex"},"scope":{}}}]}
/parse/grammartoken.java	getStopIndex	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"operator":"MINUS","left":{"name":{"identifier":"getStopIndex"},"scope":{}},"right":{"name":{"identifier":"getStartIndex"},"scope":{}}},"right":{"value":"1"}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"operator":"MINUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getStartIndex"}},"right":{"name":{"identifier":"n"}}},"right":{"value":"1"}}}]}
/parse/grammartoken.java	toString	{"statements":[{"expression":{"variables":[{"initializer":{"value":""},"name":{"identifier":"channelStr"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"channel"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"channelStr"}},"value":{"operator":"PLUS","left":{"value":",channel="},"right":{"name":{"identifier":"channel"}}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"}},"name":{"identifier":"txt"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"txt"}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"txt"}},"value":{"value":"<no text>"}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"txt"}},"value":{"name":{"identifier":"replaceAll"},"scope":{"name":{"identifier":"txt"}},"arguments":[{"value":"\n"},{"value":"\\\\n"}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"txt"}},"value":{"name":{"identifier":"replaceAll"},"scope":{"name":{"identifier":"txt"}},"arguments":[{"value":"\r"},{"value":"\\\\r"}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"txt"}},"value":{"name":{"identifier":"replaceAll"},"scope":{"name":{"identifier":"txt"}},"arguments":[{"value":"\t"},{"value":"\\\\t"}]}}}]}},{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"[@"},"right":{"name":{"identifier":"getTokenIndex"}}},"right":{"value":","}},"right":{"name":{"identifier":"getStartIndex"}}},"right":{"value":":"}},"right":{"name":{"identifier":"getStopIndex"}}},"right":{"value":"='"}},"right":{"name":{"identifier":"txt"}}},"right":{"value":"',<"}},"right":{"name":{"identifier":"getType"}}},"right":{"value":">"}},"right":{"name":{"identifier":"channelStr"}}},"right":{"value":","}},"right":{"name":{"identifier":"getLine"}}},"right":{"value":":"}},"right":{"name":{"identifier":"getCharPositionInLine"}}},"right":{"value":"]"}}}]}
/parse/actionsplitterlistener.java	qualifiedAttr	[]
/parse/actionsplitterlistener.java	setAttr	[]
/parse/actionsplitterlistener.java	attr	[]
/parse/actionsplitterlistener.java	setNonLocalAttr	[]
/parse/actionsplitterlistener.java	nonLocalAttr	[]
/parse/actionsplitterlistener.java	text	[]
/parse/grammarastadaptor.java	create	{"statements":[{"expression":{"type":{"name":{"identifier":"GrammarAST"}},"arguments":[{"name":{"identifier":"token"}}]}}]}
/parse/grammarastadaptor.java	create	{"statements":[{"expression":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tokenType"}},"right":{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tokenType"}},"right":{"name":{"identifier":"STRING_LITERAL"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"t"}},"value":{"expression":{"name":{"identifier":"create"},"scope":{},"arguments":[{"name":{"identifier":"tokenType"}},{"name":{"identifier":"text"}}]},"type":{"name":{"identifier":"GrammarAST"}}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"t"}},"value":{"type":{"name":{"identifier":"TerminalAST"}},"arguments":[{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"tokenType"}},{"name":{"identifier":"text"}}]}]}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"t"}},"value":{"type":{"name":{"identifier":"RuleAST"}},"arguments":[{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"tokenType"}},{"name":{"identifier":"text"}}]}]}}}]}},{"expression":{"name":{"identifier":"setInputStream"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"t"}}},"arguments":[{"name":{"identifier":"input"}}]}},{"expression":{"name":{"identifier":"t"}}}]}
/parse/grammarastadaptor.java	dupNode	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"name":{"identifier":"dupNode"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"GrammarAST"}}}}}}]}
/parse/grammarastadaptor.java	errorNode	{"statements":[{"expression":{"type":{"name":{"identifier":"GrammarASTErrorNode"}},"arguments":[{"name":{"identifier":"input"}},{"name":{"identifier":"start"}},{"name":{"identifier":"stop"}},{"name":{"identifier":"e"}}]}}]}
/parse/tokenvocabparser.java	load	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"Map"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","expression":{"value":"1"}},"name":{"identifier":"maxTokenType"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getImportedVocabFile"}},"name":{"identifier":"fullFile"},"type":{"name":{"identifier":"File"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"fis"},"type":{"name":{"identifier":"FileInputStream"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"br"},"type":{"name":{"identifier":"BufferedReader"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"name":{"identifier":"tool"},"type":{"name":{"identifier":"Tool"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"value":"tokenVocab"}]},"name":{"identifier":"vocabName"},"type":{"name":{"identifier":"String"}}}]}},{"finallyBlock":{"statements":[{"tryBlock":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"br"}},"right":{}},"thenStmt":{"expression":{"name":{"identifier":"close"},"scope":{"name":{"identifier":"br"}}}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"ERROR_READING_TOKENS_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"ioe"}},{"name":{"identifier":"fullFile"}},{"name":{"identifier":"getMessage"},"scope":{"name":{"identifier":"ioe"}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ioe"},"type":{"name":{"identifier":"IOException"}}}}]}]},"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"compile"},"scope":{"name":{"identifier":"Pattern"}},"arguments":[{"value":"([^\n]+?)[ \\t]*?=[ \\t]*?([0-9]+)"}]},"name":{"identifier":"tokenDefPattern"},"type":{"name":{"identifier":"Pattern"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fis"}},"value":{"type":{"name":{"identifier":"FileInputStream"}},"arguments":[{"name":{"identifier":"fullFile"}}]}}},{"expression":{"variables":[{"name":{"identifier":"isr"},"type":{"name":{"identifier":"InputStreamReader"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"grammarEncoding"},"scope":{"name":{"identifier":"tool"}}},"right":{}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isr"}},"value":{"type":{"name":{"identifier":"InputStreamReader"}},"arguments":[{"name":{"identifier":"fis"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isr"}},"value":{"type":{"name":{"identifier":"InputStreamReader"}},"arguments":[{"name":{"identifier":"fis"}},{"name":{"identifier":"grammarEncoding"},"scope":{"name":{"identifier":"tool"}}}]}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"br"}},"value":{"type":{"name":{"identifier":"BufferedReader"}},"arguments":[{"name":{"identifier":"isr"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"readLine"},"scope":{"name":{"identifier":"br"}}},"name":{"identifier":"tokenDef"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"value":"1"},"name":{"identifier":"lineNum"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"matcher"},"scope":{"name":{"identifier":"tokenDefPattern"}},"arguments":[{"name":{"identifier":"tokenDef"}}]},"name":{"identifier":"matcher"},"type":{"name":{"identifier":"Matcher"}}}]}},{"condition":{"name":{"identifier":"find"},"scope":{"name":{"identifier":"matcher"}}},"elseStmt":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"tokenDef"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"TOKENS_FILE_SYNTAX_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"operator":"PLUS","left":{"name":{"identifier":"vocabName"}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}},{"operator":"PLUS","left":{"value":" bad token def: "},"right":{"name":{"identifier":"tokenDef"}}},{"name":{"identifier":"lineNum"}}]}}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"group"},"scope":{"name":{"identifier":"matcher"}},"arguments":[{"value":"1"}]},"name":{"identifier":"tokenID"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"group"},"scope":{"name":{"identifier":"matcher"}},"arguments":[{"value":"2"}]},"name":{"identifier":"tokenTypeS"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"name":{"identifier":"tokenType"},"type":{"type":"INT"}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokenType"}},"value":{"name":{"identifier":"valueOf"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"tokenTypeS"}}]}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"TOKENS_FILE_SYNTAX_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"operator":"PLUS","left":{"name":{"identifier":"vocabName"}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}},{"operator":"PLUS","left":{"value":" bad token type: "},"right":{"name":{"identifier":"tokenTypeS"}}},{"name":{"identifier":"lineNum"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokenType"}},"value":{"name":{"identifier":"INVALID_TOKEN_TYPE"},"scope":{"name":{"identifier":"Token"}}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"nfe"},"type":{"name":{"identifier":"NumberFormatException"}}}}]},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"import "},"right":{"name":{"identifier":"tokenID"}}},"right":{"value":"="}},"right":{"name":{"identifier":"tokenType"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"tokens"}},"arguments":[{"name":{"identifier":"tokenID"}},{"name":{"identifier":"tokenType"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"maxTokenType"}},"value":{"name":{"identifier":"max"},"scope":{"name":{"identifier":"Math"}},"arguments":[{"name":{"identifier":"maxTokenType"}},{"name":{"identifier":"tokenType"}}]}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"lineNum"}}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokenDef"}},"value":{"name":{"identifier":"readLine"},"scope":{"name":{"identifier":"br"}}}}}]},"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tokenDef"}},"right":{}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionAST"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"tokenVocab"}]},"name":{"identifier":"inTree"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"inTree"}}}},"name":{"identifier":"inTreeValue"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"vocabName"}},"arguments":[{"name":{"identifier":"inTreeValue"}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CANNOT_FIND_TOKENS_FILE_GIVEN_ON_CMDLINE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fullFile"}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"g"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"CANNOT_FIND_TOKENS_FILE_REFD_IN_GRAMMAR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"inTree"}}},{"name":{"identifier":"fullFile"}}]}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"fnfe"},"type":{"name":{"identifier":"FileNotFoundException"}}}},{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"ERROR_READING_TOKENS_FILE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"e"}},{"name":{"identifier":"fullFile"}},{"name":{"identifier":"getMessage"},"scope":{"name":{"identifier":"e"}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]},{"expression":{"name":{"identifier":"tokens"}}}]}
/parse/tokenvocabparser.java	getImportedVocabFile	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"value":"tokenVocab"}]},"name":{"identifier":"vocabName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"libDirectory"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"separator"},"scope":{"name":{"identifier":"File"}}},"right":{"name":{"identifier":"vocabName"}}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}}]},"name":{"identifier":"f"},"type":{"name":{"identifier":"File"}}}]}},{"condition":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"f"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"f"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"f"}},"value":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"outputDirectory"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},{"operator":"PLUS","left":{"name":{"identifier":"vocabName"}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}}]}}},{"condition":{"name":{"identifier":"exists"},"scope":{"name":{"identifier":"f"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"f"}}}]}},{"expression":{"variables":[{"name":{"identifier":"fileDirectory"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"separatorChar"},"scope":{"name":{"identifier":"File"}}}]},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileDirectory"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"0"},{"name":{"identifier":"lastIndexOf"},"scope":{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"separatorChar"},"scope":{"name":{"identifier":"File"}}}]}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"fileDirectory"}},"value":{"value":"."}}}]}},{"expression":{"type":{"name":{"identifier":"File"}},"arguments":[{"name":{"identifier":"fileDirectory"}},{"operator":"PLUS","left":{"name":{"identifier":"vocabName"}},"right":{"name":{"identifier":"VOCAB_FILE_EXTENSION"},"scope":{"name":{"identifier":"CodeGenerator"}}}}]}}]}
/parse/toolantlrlexer.java	displayRecognitionError	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getErrorMessage"},"arguments":[{"name":{"identifier":"e"}},{"name":{"identifier":"tokenNames"}}]},"name":{"identifier":"msg"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"syntaxError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"SYNTAX_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"getSourceName"}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"e"}}},{"name":{"identifier":"e"}},{"name":{"identifier":"msg"}}]}}]}
/parse/toolantlrlexer.java	grammarError	{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"etype"}},{"name":{"identifier":"getSourceName"}},{"name":{"identifier":"token"}},{"name":{"identifier":"args"}}]}}]}
/parse/scopeparser.java	parseTypedArgList	{"statements":[{"expression":{"name":{"identifier":"parse"},"arguments":[{"name":{"identifier":"action"}},{"name":{"identifier":"s"}},{"value":","},{"name":{"identifier":"g"}}]}}]}
/parse/scopeparser.java	parse	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AttributeDict"}}},"name":{"identifier":"dict"},"type":{"name":{"identifier":"AttributeDict"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"splitDecls"},"arguments":[{"name":{"identifier":"s"}},{"name":{"identifier":"separator"}}]},"name":{"identifier":"decls"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}]}}]}},{"body":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseAttributeDef"},"arguments":[{"name":{"identifier":"action"}},{"name":{"identifier":"decl"}},{"name":{"identifier":"g"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"Attribute"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"dict"}},"arguments":[{"name":{"identifier":"a"}}]}}]}}]},"iterable":{"name":{"identifier":"decls"}},"variable":{"variables":[{"name":{"identifier":"decl"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"name":{"identifier":"dict"}}}]}
/parse/scopeparser.java	parseAttributeDef	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Attribute"}}},"name":{"identifier":"attr"},"type":{"name":{"identifier":"Attribute"}}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}}},"right":{"value":"1"}},"name":{"identifier":"rightEdgeOfDeclarator"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}},"arguments":[{"value":"="}]},"name":{"identifier":"equalsIndex"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"equalsIndex"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"initValue"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"equalsIndex"}},"right":{"value":"1"}},{"name":{"identifier":"length"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}}}]}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"rightEdgeOfDeclarator"}},"value":{"operator":"MINUS","left":{"name":{"identifier":"equalsIndex"}},"right":{"value":"1"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}},"arguments":[{"value":"0"},{"operator":"PLUS","left":{"name":{"identifier":"rightEdgeOfDeclarator"}},"right":{"value":"1"}}]},"name":{"identifier":"declarator"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"name":{"identifier":"p"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"Integer"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}},"name":{"identifier":"text"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"text"}},"value":{"name":{"identifier":"replaceAll"},"scope":{"name":{"identifier":"text"}},"arguments":[{"value":"::"},{"value":""}]}}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"text"}},"arguments":[{"value":":"}]},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"_parsePrefixDecl"},"arguments":[{"name":{"identifier":"attr"}},{"name":{"identifier":"declarator"}},{"name":{"identifier":"action"}},{"name":{"identifier":"g"}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"_parsePostfixDecl"},"arguments":[{"name":{"identifier":"attr"}},{"name":{"identifier":"declarator"}},{"name":{"identifier":"action"}},{"name":{"identifier":"g"}}]}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"p"}}},"name":{"identifier":"idStart"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"p"}}},"name":{"identifier":"idStop"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"decl"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"decl"}}}}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"action"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"action"}}},"name":{"identifier":"actionText"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"type":"INT"},"levels":[{"dimension":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}}}]},"name":{"identifier":"lines"},"type":{"origin":"TYPE","componentType":{"type":"INT"}}}]}},{"expression":{"variables":[{"initializer":{"elementType":{"type":"INT"},"levels":[{"dimension":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}}}]},"name":{"identifier":"charPositionInLines"},"type":{"origin":"TYPE","componentType":{"type":"INT"}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"lines"}}},"value":{"name":{"identifier":"line"}}}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"i"}},"name":{"name":{"identifier":"charPositionInLines"}}},"value":{"name":{"identifier":"col"}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"i"}}]},"right":{"value":"\n"}},"thenStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"line"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"col"}},"value":{"operator":"MINUS","expression":{"value":"1"}}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}},{"initializer":{"value":"0"},"name":{"identifier":"line"},"type":{"type":"INT"}},{"initializer":{"value":"0"},"name":{"identifier":"col"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}},{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"col"}}}]},{"expression":{"variables":[{"initializer":{"elementType":{"type":"INT"},"levels":[{"dimension":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}}}]},"name":{"identifier":"charIndexes"},"type":{"origin":"TYPE","componentType":{"type":"INT"}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"j"}},"name":{"name":{"identifier":"charIndexes"}}},"value":{"name":{"identifier":"i"}}}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}},"right":{"value":"1"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"i"}}]},"right":{"value":"/"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}]},"right":{"value":"/"}}},"thenStmt":{"statements":[{"body":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}}]},"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"i"}}]},"right":{"value":"\n"}}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}},{"initializer":{"value":"0"},"name":{"identifier":"j"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}},{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"j"}}}]},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"decl"}}},"name":{"name":{"identifier":"charIndexes"}}},"name":{"identifier":"declOffset"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"index":{"operator":"PLUS","left":{"name":{"identifier":"declOffset"}},"right":{"name":{"identifier":"idStart"}}},"name":{"name":{"identifier":"lines"}}},"name":{"identifier":"declLine"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"getLine"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"action"}}}},"right":{"name":{"identifier":"declLine"}}},"name":{"identifier":"line"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"index":{"operator":"PLUS","left":{"name":{"identifier":"declOffset"}},"right":{"name":{"identifier":"idStart"}}},"name":{"name":{"identifier":"charPositionInLines"}}},"name":{"identifier":"charPositionInLine"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"declLine"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"charPositionInLine"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"getCharPositionInLine"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"action"}}}},"right":{"value":"1"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStartIndex"},"scope":{"inner":{"expression":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"action"}}},"type":{"name":{"identifier":"CommonToken"}}}}},"name":{"identifier":"offset"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"attr"}}},"value":{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"getInputStream"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"action"}}}},{"name":{"identifier":"ID"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"name":{"identifier":"DEFAULT_TOKEN_CHANNEL"},"scope":{"name":{"identifier":"BaseRecognizer"}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"name":{"identifier":"declOffset"}}},"right":{"name":{"identifier":"idStart"}}},"right":{"value":"1"}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"offset"}},"right":{"name":{"identifier":"declOffset"}}},"right":{"name":{"identifier":"idStop"}}}]}}},{"expression":{"name":{"identifier":"setLine"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"attr"}}},"arguments":[{"name":{"identifier":"line"}}]}},{"expression":{"name":{"identifier":"setCharPositionInLine"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"attr"}}},"arguments":[{"name":{"identifier":"charPositionInLine"}}]}},{"check":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"attr"}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"},"scope":{"name":{"identifier":"attr"}}}}]},"message":{"value":"Attribute text should match the pseudo-token text at this point."}}]}},{"expression":{"name":{"identifier":"attr"}}}]}
/parse/scopeparser.java	_parsePrefixDecl	{"statements":[{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"inID"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","expression":{"value":"1"}},"name":{"identifier":"start"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"ch"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"inID"}}},"right":{"name":{"identifier":"isLetterOrDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"ch"}}]}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"inID"}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"OR","left":{"name":{"identifier":"isLetterOrDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"ch"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"ch"}},"right":{"value":"_"}}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"start"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}}},{}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"inID"}},"value":{"value":"true"}}}]}}]},"compare":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"initialization":[{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}},"right":{"value":"1"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"start"}},"right":{"value":"0"}},"right":{"name":{"identifier":"inID"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"start"}},"value":{"value":"0"}}}]}},{"condition":{"operator":"LESS","left":{"name":{"identifier":"start"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CANNOT_FIND_ATTRIBUTE_NAME_IN_DECL"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"a"}}},{"name":{"identifier":"decl"}}]}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","expression":{"value":"1"}},"name":{"identifier":"stop"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"ch"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"OR","left":{"name":{"identifier":"isLetterOrDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"ch"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"ch"}},"right":{"value":"_"}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stop"}},"value":{"name":{"identifier":"i"}}}},{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"i"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stop"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"start"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"stop"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"value":"0"},{"name":{"identifier":"start"}}]}}},{"condition":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"stop"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"PLUS","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"stop"}},{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}}]}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{}}}]}},{"expression":{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"Integer"}}]},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"stop"}}]}}]}
/parse/scopeparser.java	_parsePostfixDecl	{"statements":[{"expression":{"variables":[{"initializer":{"operator":"MINUS","expression":{"value":"1"}},"name":{"identifier":"start"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"MINUS","expression":{"value":"1"}},"name":{"identifier":"stop"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"value":":"}]},"name":{"identifier":"colon"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"colon"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseExpr":{"name":{"identifier":"colon"}},"thenExpr":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}}},"name":{"identifier":"namePartEnd"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"ch"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"OR","left":{"name":{"identifier":"isLetterOrDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"ch"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"ch"}},"right":{"value":"_"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"start"}},"value":{"name":{"identifier":"i"}}}},{}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"namePartEnd"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"PREFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"start"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"start"}},"value":{"value":"0"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CANNOT_FIND_ATTRIBUTE_NAME_IN_DECL"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"a"}}},{"name":{"identifier":"decl"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"ch"},"type":{"type":"CHAR"}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"operator":"OR","left":{"name":{"identifier":"isLetterOrDigit"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"ch"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"ch"}},"right":{"value":"_"}}}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stop"}},"value":{"name":{"identifier":"i"}}}},{}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"i"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"namePartEnd"}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stop"}},"value":{"name":{"identifier":"namePartEnd"}}}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"namePartEnd"}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"start"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"PREFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"stop"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stop"}},"value":{"name":{"identifier":"start"}}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"stop"}}]}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"colon"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"decl"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"colon"}},"right":{"value":"1"}},{"name":{"identifier":"length"},"scope":{"name":{"identifier":"decl"}}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{"value":""}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}}}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"attr"}}},"value":{}}}]}},{"expression":{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"Integer"}}]},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"stop"}}]}}]}
/parse/scopeparser.java	splitDecls	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}]}},"name":{"identifier":"args"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]}]}}]}},{"expression":{"name":{"identifier":"_splitArgumentList"},"arguments":[{"name":{"identifier":"s"}},{"value":"0"},{"operator":"MINUS","expression":{"value":"1"}},{"name":{"identifier":"separatorChar"}},{"name":{"identifier":"args"}}]}},{"expression":{"name":{"identifier":"args"}}}]}
/parse/scopeparser.java	_splitArgumentList	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"actionText"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"MINUS","expression":{"value":"1"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"actionText"}},"value":{"name":{"identifier":"replaceAll"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"value":"//[^\\n]*"},{"value":""}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"actionText"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"start"}},"name":{"identifier":"p"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"p"}},"name":{"identifier":"last"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"p"}}]},"name":{"identifier":"c"},"type":{"type":"INT"}}]}},{"selector":{"name":{"identifier":"c"}},"entries":[{"label":{"value":"\'"},"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}},{"body":{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"p"}}]},"right":{"value":"\\"}},"right":{"operator":"LESS","left":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}},"right":{"name":{"identifier":"n"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}]},"right":{"value":"\'"}}},"thenStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}}]},"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"p"}},"right":{"name":{"identifier":"n"}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"p"}}]},"right":{"value":"\'"}}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}},{}]},{"label":{"value":"\""},"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}},{"body":{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"p"}}]},"right":{"value":"\\"}},"right":{"operator":"LESS","left":{"inner":{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}},"right":{"name":{"identifier":"n"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}]},"right":{"value":"\\""}}},"thenStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}}]},"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"p"}},"right":{"name":{"identifier":"n"}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"p"}}]},"right":{"value":"\\""}}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}},{}]},{"label":{"value":"("},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"_splitArgumentList"},"arguments":[{"name":{"identifier":"actionText"}},{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}},{"value":")"},{"name":{"identifier":"separatorChar"}},{"name":{"identifier":"args"}}]}}},{}]},{"label":{"value":"{"},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"_splitArgumentList"},"arguments":[{"name":{"identifier":"actionText"}},{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}},{"value":"}"},{"name":{"identifier":"separatorChar"}},{"name":{"identifier":"args"}}]}}},{}]},{"label":{"value":"<"},"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"value":">"},{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}]},"right":{"name":{"identifier":"p"}}},"elseStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"_splitArgumentList"},"arguments":[{"name":{"identifier":"actionText"}},{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}},{"value":">"},{"name":{"identifier":"separatorChar"}},{"name":{"identifier":"args"}}]}}}]}},{}]},{"label":{"value":"["},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"name":{"identifier":"_splitArgumentList"},"arguments":[{"name":{"identifier":"actionText"}},{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}},{"value":"]"},{"name":{"identifier":"separatorChar"}},{"name":{"identifier":"args"}}]}}},{}]},{"statements":[{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"name":{"identifier":"separatorChar"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"targetChar"}},"right":{"operator":"MINUS","expression":{"value":"1"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"last"}},{"name":{"identifier":"p"}}]},"name":{"identifier":"arg"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"last"}},"name":{"identifier":"index"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"index"}}}}]},"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"index"}},"right":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"isWhitespace"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"index"}}]}]}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"args"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]},"arguments":[{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"arg"}}},{"name":{"identifier":"index"}}]}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"last"}},"value":{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}},{}]}]}]},"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"p"}},"right":{"name":{"identifier":"n"}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"p"}}]},"right":{"name":{"identifier":"targetChar"}}}}},{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"targetChar"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"p"}},"right":{"name":{"identifier":"n"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"last"}},{"name":{"identifier":"p"}}]}},"name":{"identifier":"arg"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"last"}},"name":{"identifier":"index"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"index"}}}}]},"condition":{"operator":"AND","left":{"operator":"LESS","left":{"name":{"identifier":"index"}},"right":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"isWhitespace"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"actionText"}},"arguments":[{"name":{"identifier":"index"}}]}]}}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"arg"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"args"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"Integer"}}]},"arguments":[{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"arg"}}},{"name":{"identifier":"index"}}]}]}}]}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"p"}}}},{"expression":{"name":{"identifier":"p"}}}]}
/automata/tailepsilonremover.java	visitState	{"statements":[{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"BASIC"},"scope":{"name":{"identifier":"ATNState"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"p"}}},"right":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"q"},"type":{"name":{"identifier":"ATNState"}}}]}},{"condition":{"expression":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"RuleTransition"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"q"}},"value":{"name":{"identifier":"followState"},"scope":{"inner":{"expression":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"RuleTransition"}}}}}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"q"}}},"right":{"name":{"identifier":"BASIC"},"scope":{"name":{"identifier":"ATNState"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"q"}},"arguments":[{"value":"0"}]},"name":{"identifier":"trans"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"q"}}},"right":{"value":"1"}},"right":{"expression":{"name":{"identifier":"trans"}},"type":{"name":{"identifier":"EpsilonTransition"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"trans"}}},"name":{"identifier":"r"},"type":{"name":{"identifier":"ATNState"}}}]}},{"condition":{"operator":"OR","left":{"operator":"OR","left":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"BlockEndState"}}},"right":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"PlusLoopbackState"}}}},"right":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"StarLoopbackState"}}}},"thenStmt":{"statements":[{"condition":{"expression":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"RuleTransition"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]}},"value":{"name":{"identifier":"r"}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"followState"},"scope":{"inner":{"expression":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"RuleTransition"}}}}},"value":{"name":{"identifier":"r"}}}}]}},{"expression":{"name":{"identifier":"removeState"},"scope":{"name":{"identifier":"_atn"}},"arguments":[{"name":{"identifier":"q"}}]}}]}}]}}]}}]}}]}
/automata/atnprinter.java	asString	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"start"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"marked"}},"value":{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"work"}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"start"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"s"}},"value":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"work"}},"arguments":[{"value":"0"}]}}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"marked"}},"arguments":[{"name":{"identifier":"s"}}]},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"marked"}},"arguments":[{"name":{"identifier":"s"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStopState"}}}}},"thenStmt":{"statements":[{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}},"elseStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}},"thenStmt":{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"work"}},"arguments":[{"name":{"identifier":"followState"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}}}}]}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"s"}}]}]}},{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"EpsilonTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"ActionTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"SetTransition"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"AtomTransition"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"-"}]},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"t"}}}]},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"AtomTransition"}}},"name":{"identifier":"a"},"type":{"name":{"identifier":"AtomTransition"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenDisplayName"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"label"},"scope":{"name":{"identifier":"a"}}}]},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"-"}]},"arguments":[{"name":{"identifier":"label"}}]},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"SetTransition"}}},"name":{"identifier":"st"},"type":{"name":{"identifier":"SetTransition"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"st"}},"type":{"name":{"identifier":"NotSetTransition"}}},"name":{"identifier":"not"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"-"}]},"arguments":[{"condition":{"name":{"identifier":"not"}},"elseExpr":{"value":""},"thenExpr":{"value":"~"}}]},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"st"}}},"arguments":[{"name":{"identifier":"getVocabulary"},"scope":{"name":{"identifier":"g"}}}]}]},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"-"}]},"arguments":[{"condition":{"name":{"identifier":"not"}},"elseExpr":{"value":""},"thenExpr":{"value":"~"}}]},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"st"}}}]},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"ActionTransition"}}},"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionTransition"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"-"}]},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"a"}}}]},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"-"}]},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"inner":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}}}}]}}]},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"->"}]},"arguments":[{"name":{"identifier":"getStateString"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}}]}]},"arguments":[{"value":"\n"}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]},"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"work"}}}}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/automata/atnprinter.java	getStateString	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"operator":"PLUS","left":{"value":"s"},"right":{"name":{"identifier":"n"}}},"name":{"identifier":"stateStr"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"StarBlockStartState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"PlusBlockStartState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"BlockStartState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"BlockEndState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStartState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStopState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"PlusLoopbackState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"StarLoopbackState"}}},"elseStmt":{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"StarLoopEntryState"}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"StarLoopEntry_"},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"StarLoopBack_"},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"PlusLoopBack_"},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"RuleStop_"},"right":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"s"}}}]}}},"right":{"value":"_"}},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"RuleStart_"},"right":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"s"}}}]}}},"right":{"value":"_"}},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"BlockEnd_"},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"BlockStart_"},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"PlusBlockStart_"},"right":{"name":{"identifier":"n"}}}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateStr"}},"value":{"operator":"PLUS","left":{"value":"StarBlockStart_"},"right":{"name":{"identifier":"n"}}}}}},{"expression":{"name":{"identifier":"stateStr"}}}]}
/automata/atnvisitor.java	visit	{"statements":[{"expression":{"name":{"identifier":"visit_"},"arguments":[{"name":{"identifier":"s"}},{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"Integer"}}]}}]}}]}
/automata/atnvisitor.java	visit_	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}]}},"thenStmt":{}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"visited"}},"arguments":[{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}}]}},{"expression":{"name":{"identifier":"visitState"},"arguments":[{"name":{"identifier":"s"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Transition"}}}]}},{"expression":{"name":{"identifier":"visit_"},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}},{"name":{"identifier":"visited"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/automata/atnvisitor.java	visitState	{}
/automata/atnoptimizer.java	optimize	{"statements":[{"expression":{"name":{"identifier":"optimizeSets"},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"atn"}}]}},{"expression":{"name":{"identifier":"optimizeStates"},"arguments":[{"name":{"identifier":"atn"}}]}}]}
/automata/atnoptimizer.java	optimizeSets	{"statements":[{"condition":{"name":{"identifier":"isParser"},"scope":{"name":{"identifier":"g"}}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"removedStates"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"decisionToState"},"scope":{"name":{"identifier":"atn"}}},"name":{"identifier":"decisions"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"DecisionState"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"decision"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"decision"}}}]},"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"name":{"identifier":"isLowerCase"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"charAt"},"scope":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"value":"0"}]}]},"thenStmt":{"statements":[{}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"setTransitions"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"decision"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"epsTransition"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"epsTransition"}},"type":{"name":{"identifier":"EpsilonTransition"}}}}},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"epsTransition"}}}},"right":{"value":"1"}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"epsTransition"}}},"arguments":[{"value":"0"}]},"name":{"identifier":"transition"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"}}},"type":{"name":{"identifier":"BlockEndState"}}}}},"thenStmt":{"statements":[{}]}},{"condition":{"expression":{"name":{"identifier":"transition"}},"type":{"name":{"identifier":"NotSetTransition"}}},"thenStmt":{"statements":[{}]}},{"condition":{"operator":"OR","left":{"operator":"OR","left":{"expression":{"name":{"identifier":"transition"}},"type":{"name":{"identifier":"AtomTransition"}}},"right":{"expression":{"name":{"identifier":"transition"}},"type":{"name":{"identifier":"RangeTransition"}}}},"right":{"expression":{"name":{"identifier":"transition"}},"type":{"name":{"identifier":"SetTransition"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"setTransitions"}},"arguments":[{"name":{"identifier":"i"}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"decision"}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"setTransitions"}}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"interval"},"type":{"name":{"identifier":"Interval"}}}]}},{"condition":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"interval"}}},"right":{"value":"1"}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"decision"}},"arguments":[{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}}]}},"arguments":[{"value":"0"}]}},"name":{"identifier":"blockEndState"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"matchSet"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"decision"}},"arguments":[{"name":{"identifier":"j"}}]}},"arguments":[{"value":"0"}]},"name":{"identifier":"matchTransition"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"expression":{"name":{"identifier":"matchTransition"}},"type":{"name":{"identifier":"NotSetTransition"}}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"value":"Not yet implemented."}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"label"},"scope":{"name":{"identifier":"matchTransition"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}},"name":{"identifier":"intervals"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Interval"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"intervals"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"intervals"}},"arguments":[{"name":{"identifier":"k"}}]},"name":{"identifier":"setInterval"},"type":{"name":{"identifier":"Interval"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"setInterval"}}},"name":{"identifier":"a"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"setInterval"}}},"name":{"identifier":"b"},"type":{"type":"INT"}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"b"}},"right":{"operator":"MINUS","expression":{"value":"1"}}}},"thenStmt":{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"matchSet"}},"arguments":[{"name":{"identifier":"v"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHARACTERS_COLLISION_IN_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{},{"name":{"identifier":"getANTLRCharLiteralForChar"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"v"}}]},{"name":{"identifier":"getIntervalSetEscapedString"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"matchSet"}}]}]}},{}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"v"}},"right":{"name":{"identifier":"b"}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"a"}},"name":{"identifier":"v"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"v"}}}]}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"k"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"k"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"k"}}}]},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"matchSet"}},"arguments":[{"name":{"identifier":"set"}}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"j"}},"right":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"interval"}}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}},"name":{"identifier":"j"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"j"}}}]},{"expression":{"variables":[{"name":{"identifier":"newTransition"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"matchSet"}}}},"right":{"value":"1"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"newTransition"}},"value":{"type":{"name":{"identifier":"SetTransition"}},"arguments":[{"name":{"identifier":"blockEndState"}},{"name":{"identifier":"matchSet"}}]}}}]},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"matchSet"}}},"right":{"value":"1"}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"matchSet"}}},"arguments":[{"value":"0"}]},"name":{"identifier":"matchInterval"},"type":{"name":{"identifier":"Interval"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"newTransition"}},"value":{"name":{"identifier":"createWithCodePointRange"},"scope":{"name":{"identifier":"CodePointTransitions"}},"arguments":[{"name":{"identifier":"blockEndState"}},{"name":{"identifier":"a"},"scope":{"name":{"identifier":"matchInterval"}}},{"name":{"identifier":"b"},"scope":{"name":{"identifier":"matchInterval"}}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"newTransition"}},"value":{"name":{"identifier":"createWithCodePoint"},"scope":{"name":{"identifier":"CodePointTransitions"}},"arguments":[{"name":{"identifier":"blockEndState"}},{"name":{"identifier":"getMinElement"},"scope":{"name":{"identifier":"matchSet"}}}]}}}]}}]}},{"expression":{"name":{"identifier":"setTransition"},"scope":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"decision"}},"arguments":[{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}}]}},"arguments":[{"value":"0"},{"name":{"identifier":"newTransition"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"removeTransition"},"scope":{"name":{"identifier":"decision"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}},"right":{"value":"1"}}]},"name":{"identifier":"removed"},"type":{"name":{"identifier":"Transition"}}}]}},{"expression":{"name":{"identifier":"removeState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"target"},"scope":{"name":{"identifier":"removed"}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"removedStates"}}}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"j"}},"right":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"interval"}}}},"initialization":[{"variables":[{"initializer":{"operator":"PLUS","left":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}},"right":{"value":"1"}},"name":{"identifier":"j"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"j"}}}]}]},"compare":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"i"}},"right":{"value":"0"}},"initialization":[{"variables":[{"initializer":{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"setTransitions"}}}},"right":{"value":"1"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]}]},"iterable":{"name":{"identifier":"decisions"}},"variable":{"variables":[{"name":{"identifier":"decision"},"type":{"name":{"identifier":"DecisionState"}}}]}}]}
/automata/atnoptimizer.java	optimizeStates	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}},"name":{"identifier":"compressed"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"compressed"}},"arguments":[{"name":{"identifier":"s"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stateNumber"},"scope":{"name":{"identifier":"s"}}},"value":{"name":{"identifier":"i"}}}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}}]}}]},"iterable":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}}}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}},"arguments":[{"name":{"identifier":"compressed"}}]}}]}
/automata/atnfactory.java	toString	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"("},"right":{"name":{"identifier":"left"}}},"right":{"value":","}},"right":{"name":{"identifier":"right"}}},"right":{"value":")"}}}]}
/automata/atnfactory.java	createATN	[]
/automata/atnfactory.java	setCurrentRuleName	[]
/automata/atnfactory.java	setCurrentOuterAlt	[]
/automata/atnfactory.java	rule	[]
/automata/atnfactory.java	newState	[]
/automata/atnfactory.java	label	[]
/automata/atnfactory.java	listLabel	[]
/automata/atnfactory.java	tokenRef	[]
/automata/atnfactory.java	set	[]
/automata/atnfactory.java	charSetLiteral	[]
/automata/atnfactory.java	range	[]
/automata/atnfactory.java	stringLiteral	[]
/automata/atnfactory.java	ruleRef	[]
/automata/atnfactory.java	epsilon	[]
/automata/atnfactory.java	sempred	[]
/automata/atnfactory.java	action	[]
/automata/atnfactory.java	action	[]
/automata/atnfactory.java	alt	[]
/automata/atnfactory.java	block	[]
/automata/atnfactory.java	optional	[]
/automata/atnfactory.java	plus	[]
/automata/atnfactory.java	star	[]
/automata/atnfactory.java	wildcard	[]
/automata/atnfactory.java	lexerAltCommands	[]
/automata/atnfactory.java	lexerCallCommand	[]
/automata/atnfactory.java	lexerCommand	[]
/automata/parseratnfactory.java	createATN	{"statements":[{"expression":{"name":{"identifier":"_createATN"},"arguments":[{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}]}},{"check":{"operator":"EQUALS","left":{"name":{"identifier":"maxTokenType"},"scope":{"name":{"identifier":"atn"}}},"right":{"name":{"identifier":"getMaxTokenType"},"scope":{"name":{"identifier":"g"}}}}},{"expression":{"name":{"identifier":"addRuleFollowLinks"}}},{"expression":{"name":{"identifier":"addEOFTransitionToStartRules"}}},{"expression":{"name":{"identifier":"optimize"},"scope":{"name":{"identifier":"ATNOptimizer"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"atn"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LL1Analyzer"}},"arguments":[{"name":{"identifier":"atn"}}]},"name":{"identifier":"analyzer"},"type":{"name":{"identifier":"LL1Analyzer"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"blkStart"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"c"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"blkStop"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"LOOK"},"scope":{"name":{"identifier":"analyzer"}},"arguments":[{"name":{"identifier":"blkStart"}},{"name":{"identifier":"blkStop"}},{}]},"name":{"identifier":"lookahead"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"lookahead"}},"arguments":[{"name":{"identifier":"EPSILON"},"scope":{"name":{"identifier":"Token"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"v4"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"expression":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},"elseExpr":{"name":{"identifier":"EPSILON_CLOSURE"},"scope":{"name":{"identifier":"ErrorType"}}},"thenExpr":{"name":{"identifier":"EPSILON_LR_FOLLOW"},"scope":{"name":{"identifier":"ErrorType"}}}},"name":{"identifier":"errorType"},"type":{"name":{"identifier":"ErrorType"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"errorType"}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}}}]}}]}}]},"iterable":{"name":{"identifier":"preventEpsilonClosureBlocks"}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Triple"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"ATNState"}},{"name":{"identifier":"ATNState"}}]}}]}},{"label":{"identifier":"optionalCheck"},"statement":{"body":{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"bypassCount"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"pair"}}},"arguments":[{"name":{"identifier":"i"}}]}},"name":{"identifier":"startState"},"type":{"name":{"identifier":"ATNState"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"startState"}},"right":{"name":{"identifier":"c"},"scope":{"name":{"identifier":"pair"}}}},"thenStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"bypassCount"}}}},{}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LL1Analyzer"}},"arguments":[{"name":{"identifier":"atn"}}]},"name":{"identifier":"analyzer"},"type":{"name":{"identifier":"LL1Analyzer"}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"LOOK"},"scope":{"name":{"identifier":"analyzer"}},"arguments":[{"name":{"identifier":"startState"}},{"name":{"identifier":"c"},"scope":{"name":{"identifier":"pair"}}},{}]},"arguments":[{"name":{"identifier":"EPSILON"},"scope":{"name":{"identifier":"Token"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"v4"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EPSILON_OPTIONAL"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}}}]}},{"label":{"identifier":"optionalCheck"}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"b"},"scope":{"name":{"identifier":"pair"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"bypassCount"}},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"value":"Expected optional block with exactly 1 bypass alternative."}]}}]}}]},"iterable":{"name":{"identifier":"preventEpsilonOptionalBlocks"}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Triple"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"ATNState"}},{"name":{"identifier":"ATNState"}}]}}]}}},{"expression":{"name":{"identifier":"atn"}}}]}
/automata/parseratnfactory.java	_createATN	{"statements":[{"expression":{"name":{"identifier":"createRuleStartAndStopATNStates"}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}}},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"blk"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTreeNodeStream"}},"arguments":[{"name":{"identifier":"adaptor"}},{"name":{"identifier":"blk"}}]},"name":{"identifier":"nodes"},"type":{"name":{"identifier":"CommonTreeNodeStream"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ATNBuilder"}},"arguments":[{"name":{"identifier":"nodes"}},{}]},"name":{"identifier":"b"},"type":{"name":{"identifier":"ATNBuilder"}}}]}},{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"setCurrentRuleName"},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"ruleBlock"},"scope":{"name":{"identifier":"b"}},"arguments":[{}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"name":{"identifier":"rule"},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"h"}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"fatalInternalError"},"scope":{"name":{"identifier":"ErrorManager"}},"arguments":[{"value":"bad grammar AST structure"},{"name":{"identifier":"re"}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"re"},"type":{"name":{"identifier":"RecognitionException"}}}}]}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/automata/parseratnfactory.java	setCurrentRuleName	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentRule"},"scope":{}},"value":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"name"}}]}}}]}
/automata/parseratnfactory.java	setCurrentOuterAlt	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"currentOuterAlt"}},"value":{"name":{"identifier":"alt"}}}}]}
/automata/parseratnfactory.java	rule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"name"}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"start"},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"left"},"scope":{"name":{"identifier":"blk"}}}]}},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStopState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"stop"},"type":{"name":{"identifier":"RuleStopState"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"right"},"scope":{"name":{"identifier":"blk"}}},{"name":{"identifier":"stop"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"stop"}}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"ruleAST"}}},"value":{"name":{"identifier":"start"}}}},{"expression":{"name":{"identifier":"h"}}}]}
/automata/parseratnfactory.java	tokenRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"node"}}}]},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"AtomTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"ttype"}}]}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	set	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"associatedAST"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"associatedAST"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}]},"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"ttype"}}]}}]},"iterable":{"name":{"identifier":"terminals"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"name":{"identifier":"invert"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"SetTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"set"}}]}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"NotSetTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"set"}}]}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"associatedAST"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	range	{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"TOKEN_RANGE_IN_PARSER"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"a"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"a"}}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"b"}}}}]}},{"expression":{"name":{"identifier":"tokenRef"},"arguments":[{"expression":{"name":{"identifier":"a"}},"type":{"name":{"identifier":"TerminalAST"}}}]}}]}
/automata/parseratnfactory.java	getTokenType	{"statements":[{"expression":{"variables":[{"name":{"identifier":"ttype"},"type":{"type":"INT"}}]}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ttype"}},"value":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"atom"}}}]}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ttype"}},"value":{"name":{"identifier":"getCharValueFromGrammarCharLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"atom"}}}]}}}]}},{"expression":{"name":{"identifier":"ttype"}}}]}
/automata/parseratnfactory.java	stringLiteral	{"statements":[{"expression":{"name":{"identifier":"tokenRef"},"arguments":[{"name":{"identifier":"stringLiteralAST"}}]}}]}
/automata/parseratnfactory.java	charSetLiteral	{"statements":[{"expression":{}}]}
/automata/parseratnfactory.java	ruleRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"_ruleRef"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"name":{"identifier":"h"}}}]}
/automata/parseratnfactory.java	_ruleRef	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"node"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"r"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"node"}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Rule "},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"node"}}}},"right":{"value":" undefined"}}]}},{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"start"},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"precedence"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getOptionString"},"scope":{"inner":{"expression":{"name":{"identifier":"node"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"precedence"}},"value":{"name":{"identifier":"parseInt"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"getOptionString"},"scope":{"inner":{"expression":{"name":{"identifier":"node"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]}]}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"RuleTransition"}},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"precedence"}},{"name":{"identifier":"right"}}]},"name":{"identifier":"call"},"type":{"name":{"identifier":"RuleTransition"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"name":{"identifier":"call"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	addFollowLink	{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"ruleIndex"}},"name":{"name":{"identifier":"ruleToStopState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"stop"},"type":{"name":{"identifier":"RuleStopState"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"stop"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	epsilon	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	sempred	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"pred"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"pred"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"name":{"identifier":"p"},"type":{"name":{"identifier":"AbstractPredicateTransition"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"pred"}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]},"right":{}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"actionIsContextDependent"},"scope":{"name":{"identifier":"UseDefAnalyzer"}},"arguments":[{"name":{"identifier":"pred"}}]},"name":{"identifier":"isCtxDependent"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"type":{"name":{"identifier":"PredicateTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"index"},"scope":{"name":{"identifier":"currentRule"}}},{"name":{"identifier":"get"},"scope":{"name":{"identifier":"sempreds"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"pred"}}]},{"name":{"identifier":"isCtxDependent"}}]}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseInt"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"pred"}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]}]},"name":{"identifier":"precedence"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"p"}},"value":{"type":{"name":{"identifier":"PrecedencePredicateTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"precedence"}}]}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"name":{"identifier":"p"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"pred"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	action	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"action"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"action"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"index"},"scope":{"name":{"identifier":"currentRule"}}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionTransition"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"name":{"identifier":"a"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"action"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	action	{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"value":"This element is not valid in parsers."}]}}]}
/automata/parseratnfactory.java	block	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"ebnfRoot"}},"right":{}},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"alts"}},"arguments":[{"value":"0"}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"blkAST"}}},"value":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"h"}}}}},{"expression":{"name":{"identifier":"h"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"BasicBlockStartState"}}},{"name":{"identifier":"blkAST"}}]},"name":{"identifier":"start"},"type":{"name":{"identifier":"BlockStartState"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"thenStmt":{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"start"}}]}}},{"expression":{"name":{"identifier":"makeBlock"},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}]}},{"selector":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"ebnfRoot"}}},"entries":[{"label":{"name":{"identifier":"OPTIONAL"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"BasicBlockStartState"}}},{"name":{"identifier":"blkAST"}}]},"name":{"identifier":"start"},"type":{"name":{"identifier":"BlockStartState"}}}]}},{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"start"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"makeBlock"},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"name":{"identifier":"optional"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"h"}}]}}]},{"label":{"name":{"identifier":"CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"StarBlockStartState"}}},{"name":{"identifier":"ebnfRoot"}}]},"name":{"identifier":"star"},"type":{"name":{"identifier":"BlockStartState"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"thenStmt":{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"star"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"h"}},"value":{"name":{"identifier":"makeBlock"},"arguments":[{"name":{"identifier":"star"}},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}},{"expression":{"name":{"identifier":"star"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"h"}}]}}]},{"label":{"name":{"identifier":"POSITIVE_CLOSURE"},"scope":{"name":{"identifier":"ANTLRParser"}}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"PlusBlockStartState"}}},{"name":{"identifier":"ebnfRoot"}}]},"name":{"identifier":"plus"},"type":{"name":{"identifier":"PlusBlockStartState"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"alts"}}},"right":{"value":"1"}},"thenStmt":{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"plus"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"h"}},"value":{"name":{"identifier":"makeBlock"},"arguments":[{"name":{"identifier":"plus"}},{"name":{"identifier":"blkAST"}},{"name":{"identifier":"alts"}}]}}},{"expression":{"name":{"identifier":"plus"},"arguments":[{"name":{"identifier":"ebnfRoot"}},{"name":{"identifier":"h"}}]}}]}]},{"expression":{}}]}
/automata/parseratnfactory.java	makeBlock	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"BlockEndState"}}},{"name":{"identifier":"blkAST"}}]},"name":{"identifier":"end"},"type":{"name":{"identifier":"BlockEndState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"endState"},"scope":{"name":{"identifier":"start"}}},"value":{"name":{"identifier":"end"}}}},{"body":{"statements":[{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"left"},"scope":{"name":{"identifier":"alt"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"right"},"scope":{"name":{"identifier":"alt"}}},{"name":{"identifier":"end"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"TailEpsilonRemover"}},"arguments":[{"name":{"identifier":"atn"}}]},"name":{"identifier":"opt"},"type":{"name":{"identifier":"TailEpsilonRemover"}}}]}},{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"opt"}},"arguments":[{"name":{"identifier":"left"},"scope":{"name":{"identifier":"alt"}}}]}}]},"iterable":{"name":{"identifier":"alts"}},"variable":{"variables":[{"name":{"identifier":"alt"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"start"}},{"name":{"identifier":"end"}}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"blkAST"}}},"value":{"name":{"identifier":"start"}}}},{"expression":{"name":{"identifier":"h"}}}]}
/automata/parseratnfactory.java	alt	{"statements":[{"expression":{"name":{"identifier":"elemList"},"arguments":[{"name":{"identifier":"els"}}]}}]}
/automata/parseratnfactory.java	elemList	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"els"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"els"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"el"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"tr"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"el"}}}},"right":{"value":"1"}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tr"}},"value":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"el"}}},"arguments":[{"value":"0"}]}}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"tr"}},"type":{"name":{"identifier":"RuleTransition"}}},"name":{"identifier":"isRuleTrans"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"el"}}}},"right":{"name":{"identifier":"BASIC"},"scope":{"name":{"identifier":"ATNState"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"el"}}}},"right":{"name":{"identifier":"BASIC"},"scope":{"name":{"identifier":"ATNState"}}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tr"}},"right":{}}},"right":{"inner":{"operator":"OR","left":{"operator":"AND","left":{"name":{"identifier":"isRuleTrans"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"followState"},"scope":{"inner":{"expression":{"name":{"identifier":"tr"}},"type":{"name":{"identifier":"RuleTransition"}}}}},"right":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"el"}}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"tr"}}},"right":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"el"}}}}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"right"},"scope":{"name":{"identifier":"el"}}},{"name":{"identifier":"left"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"els"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}]}}]}}]},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"isRuleTrans"}},"elseStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"tr"}}},"value":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"els"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}]}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"followState"},"scope":{"inner":{"expression":{"name":{"identifier":"tr"}},"type":{"name":{"identifier":"RuleTransition"}}}}},"value":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"els"}},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}]}}}}},{"expression":{"name":{"identifier":"removeState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"right"},"scope":{"name":{"identifier":"el"}}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"n"}},"right":{"value":"1"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"els"}},"arguments":[{"value":"0"}]},"name":{"identifier":"first"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"els"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"n"}},"right":{"value":"1"}}]},"name":{"identifier":"last"},"type":{"name":{"identifier":"Handle"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"first"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"last"}},"right":{}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"value":"element list has first|last == null"}]}}]}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"},"scope":{"name":{"identifier":"first"}}},{"name":{"identifier":"right"},"scope":{"name":{"identifier":"last"}}}]}}]}
/automata/parseratnfactory.java	optional	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"blk"}}},"type":{"name":{"identifier":"BlockStartState"}}},"name":{"identifier":"blkStart"},"type":{"name":{"identifier":"BlockStartState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"blk"}}},"name":{"identifier":"blkEnd"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"preventEpsilonOptionalBlocks"}},"arguments":[{"type":{"name":{"identifier":"Triple"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"ATNState"}},{"name":{"identifier":"ATNState"}}]},"arguments":[{"name":{"identifier":"currentRule"}},{"name":{"identifier":"blkStart"}},{"name":{"identifier":"blkEnd"}}]}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"isGreedy"},"scope":{"inner":{"expression":{"name":{"identifier":"optAST"}},"type":{"name":{"identifier":"QuantifierAST"}}}}},"name":{"identifier":"greedy"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nonGreedy"},"scope":{"name":{"identifier":"blkStart"}}},"value":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"greedy"}}}}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"blkStart"}},{"name":{"identifier":"right"},"scope":{"name":{"identifier":"blk"}}},{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"greedy"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"optAST"}}},"value":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"blk"}}}}},{"expression":{"name":{"identifier":"blk"}}}]}
/automata/parseratnfactory.java	plus	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"blk"}}},"type":{"name":{"identifier":"PlusBlockStartState"}}},"name":{"identifier":"blkStart"},"type":{"name":{"identifier":"PlusBlockStartState"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"blk"}}},"type":{"name":{"identifier":"BlockEndState"}}},"name":{"identifier":"blkEnd"},"type":{"name":{"identifier":"BlockEndState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"preventEpsilonClosureBlocks"}},"arguments":[{"type":{"name":{"identifier":"Triple"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"ATNState"}},{"name":{"identifier":"ATNState"}}]},"arguments":[{"name":{"identifier":"currentRule"}},{"name":{"identifier":"blkStart"}},{"name":{"identifier":"blkEnd"}}]}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"PlusLoopbackState"}}},{"name":{"identifier":"plusAST"}}]},"name":{"identifier":"loop"},"type":{"name":{"identifier":"PlusLoopbackState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nonGreedy"},"scope":{"name":{"identifier":"loop"}}},"value":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isGreedy"},"scope":{"inner":{"expression":{"name":{"identifier":"plusAST"}},"type":{"name":{"identifier":"QuantifierAST"}}}}}}}},{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"loop"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"LoopEndState"}}},{"name":{"identifier":"plusAST"}}]},"name":{"identifier":"end"},"type":{"name":{"identifier":"LoopEndState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"loopBackState"},"scope":{"name":{"identifier":"blkStart"}}},"value":{"name":{"identifier":"loop"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"loopBackState"},"scope":{"name":{"identifier":"end"}}},"value":{"name":{"identifier":"loop"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"plusAST"}}},"value":{"name":{"identifier":"loop"}}}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"blkEnd"}},{"name":{"identifier":"loop"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"plusAST"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"BlockAST"}}},"name":{"identifier":"blkAST"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"condition":{"name":{"identifier":"isGreedy"},"scope":{"inner":{"expression":{"name":{"identifier":"plusAST"}},"type":{"name":{"identifier":"QuantifierAST"}}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"loop"}},{"name":{"identifier":"end"}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"loop"}},{"name":{"identifier":"blkStart"}}]}}]},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"expectNonGreedy"},"arguments":[{"name":{"identifier":"blkAST"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EXPECTED_NON_GREEDY_WILDCARD_BLOCK"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"plusAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"plusAST"}}}}]}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"loop"}},{"name":{"identifier":"blkStart"}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"loop"}},{"name":{"identifier":"end"}}]}}]}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"blkStart"}},{"name":{"identifier":"end"}}]}}]}
/automata/parseratnfactory.java	star	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"elem"}}},"type":{"name":{"identifier":"StarBlockStartState"}}},"name":{"identifier":"blkStart"},"type":{"name":{"identifier":"StarBlockStartState"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"elem"}}},"type":{"name":{"identifier":"BlockEndState"}}},"name":{"identifier":"blkEnd"},"type":{"name":{"identifier":"BlockEndState"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"preventEpsilonClosureBlocks"}},"arguments":[{"type":{"name":{"identifier":"Triple"},"typeArguments":[{"name":{"identifier":"Rule"}},{"name":{"identifier":"ATNState"}},{"name":{"identifier":"ATNState"}}]},"arguments":[{"name":{"identifier":"currentRule"}},{"name":{"identifier":"blkStart"}},{"name":{"identifier":"blkEnd"}}]}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"StarLoopEntryState"}}},{"name":{"identifier":"starAST"}}]},"name":{"identifier":"entry"},"type":{"name":{"identifier":"StarLoopEntryState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nonGreedy"},"scope":{"name":{"identifier":"entry"}}},"value":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isGreedy"},"scope":{"inner":{"expression":{"name":{"identifier":"starAST"}},"type":{"name":{"identifier":"QuantifierAST"}}}}}}}},{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"entry"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"LoopEndState"}}},{"name":{"identifier":"starAST"}}]},"name":{"identifier":"end"},"type":{"name":{"identifier":"LoopEndState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"StarLoopbackState"}}},{"name":{"identifier":"starAST"}}]},"name":{"identifier":"loop"},"type":{"name":{"identifier":"StarLoopbackState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"loopBackState"},"scope":{"name":{"identifier":"entry"}}},"value":{"name":{"identifier":"loop"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"loopBackState"},"scope":{"name":{"identifier":"end"}}},"value":{"name":{"identifier":"loop"}}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"starAST"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"BlockAST"}}},"name":{"identifier":"blkAST"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"condition":{"name":{"identifier":"isGreedy"},"scope":{"inner":{"expression":{"name":{"identifier":"starAST"}},"type":{"name":{"identifier":"QuantifierAST"}}}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"entry"}},{"name":{"identifier":"end"}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"entry"}},{"name":{"identifier":"blkStart"}}]}}]},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"expectNonGreedy"},"arguments":[{"name":{"identifier":"blkAST"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EXPECTED_NON_GREEDY_WILDCARD_BLOCK"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"starAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"starAST"}}}}]}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"entry"}},{"name":{"identifier":"blkStart"}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"entry"}},{"name":{"identifier":"end"}}]}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"blkEnd"}},{"name":{"identifier":"loop"}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"loop"}},{"name":{"identifier":"entry"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"starAST"}}},"value":{"name":{"identifier":"entry"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"entry"}},{"name":{"identifier":"end"}}]}}]}
/automata/parseratnfactory.java	wildcard	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"WildcardTransition"}},"arguments":[{"name":{"identifier":"right"}}]}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/parseratnfactory.java	epsilon	{"statements":[{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"b"}},{"value":"false"}]}}]}
/automata/parseratnfactory.java	epsilon	{"statements":[{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"condition":{"name":{"identifier":"prepend"}},"elseExpr":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"a"}}},"thenExpr":{"value":"0"}},"name":{"identifier":"index"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"a"}},"arguments":[{"name":{"identifier":"index"}},{"type":{"name":{"identifier":"EpsilonTransition"}},"arguments":[{"name":{"identifier":"b"}}]}]}}]}}]}
/automata/parseratnfactory.java	createRuleStartAndStopATNStates	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}},"value":{"elementType":{"name":{"identifier":"RuleStartState"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleToStopState"},"scope":{"name":{"identifier":"atn"}}},"value":{"elementType":{"name":{"identifier":"RuleStopState"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}}]}}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"RuleStartState"}}},{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}}]},"name":{"identifier":"start"},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"RuleStopState"}}},{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}}]},"name":{"identifier":"stop"},"type":{"name":{"identifier":"RuleStopState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"stopState"},"scope":{"name":{"identifier":"start"}}},"value":{"name":{"identifier":"stop"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isLeftRecursiveRule"},"scope":{"name":{"identifier":"start"}}},"value":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}}}},{"expression":{"name":{"identifier":"setRuleIndex"},"scope":{"name":{"identifier":"start"}},"arguments":[{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"name":{"identifier":"setRuleIndex"},"scope":{"name":{"identifier":"stop"}},"arguments":[{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"value":{"name":{"identifier":"start"}}}},{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStopState"},"scope":{"name":{"identifier":"atn"}}}},"value":{"name":{"identifier":"stop"}}}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/automata/parseratnfactory.java	addRuleFollowLinks	{"statements":[{"body":{"statements":[{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"p"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getStateType"},"scope":{"name":{"identifier":"p"}}},"right":{"name":{"identifier":"BASIC"},"scope":{"name":{"identifier":"ATNState"}}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"p"}}},"right":{"value":"1"}}},"right":{"expression":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"RuleTransition"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"p"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"RuleTransition"}}},"name":{"identifier":"rt"},"type":{"name":{"identifier":"RuleTransition"}}}]}},{"expression":{"name":{"identifier":"addFollowLink"},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"rt"}}},{"name":{"identifier":"followState"},"scope":{"name":{"identifier":"rt"}}}]}}]}}]},"iterable":{"name":{"identifier":"states"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"p"},"type":{"name":{"identifier":"ATNState"}}}]}}]}
/automata/parseratnfactory.java	addEOFTransitionToStartRules	{"statements":[{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{}]},"name":{"identifier":"eofTarget"},"type":{"name":{"identifier":"ATNState"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStopState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"stop"},"type":{"name":{"identifier":"ATNState"}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"stop"}}},"right":{"value":"0"}},"thenStmt":{}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"n"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"AtomTransition"}},"arguments":[{"name":{"identifier":"eofTarget"}},{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Token"}}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Transition"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"stop"}},"arguments":[{"name":{"identifier":"t"}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"n"}}}]}
/automata/parseratnfactory.java	label	{"statements":[{"expression":{"name":{"identifier":"t"}}}]}
/automata/parseratnfactory.java	listLabel	{"statements":[{"expression":{"name":{"identifier":"t"}}}]}
/automata/parseratnfactory.java	newState	{"statements":[{"expression":{"variables":[{"name":{"identifier":"cause"},"type":{"name":{"identifier":"Exception"}}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getConstructor"},"scope":{"name":{"identifier":"nodeType"}}},"name":{"identifier":"ctor"},"type":{"name":{"identifier":"Constructor"},"typeArguments":[{"name":{"identifier":"T"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newInstance"},"scope":{"name":{"identifier":"ctor"}}},"name":{"identifier":"s"},"type":{"name":{"identifier":"T"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"currentRule"}},"right":{}},"elseStmt":{"expression":{"name":{"identifier":"setRuleIndex"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"index"},"scope":{"name":{"identifier":"currentRule"}}}]}},"thenStmt":{"expression":{"name":{"identifier":"setRuleIndex"},"scope":{"name":{"identifier":"s"}},"arguments":[{"operator":"MINUS","expression":{"value":"1"}}]}}},{"expression":{"name":{"identifier":"addState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"s"}}]}},{"expression":{"name":{"identifier":"s"}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cause"}},"value":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"InstantiationException"}}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cause"}},"value":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"IllegalAccessException"}}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cause"}},"value":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"IllegalArgumentException"}}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cause"}},"value":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"InvocationTargetException"}}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cause"}},"value":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"NoSuchMethodException"}}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"cause"}},"value":{"name":{"identifier":"ex"}}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"SecurityException"}}}}]},{"expression":{"variables":[{"initializer":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"Could not create %s of type %s."},{"name":{"identifier":"getName"},"scope":{"type":{"name":{"identifier":"ATNState"}}}},{"name":{"identifier":"getName"},"scope":{"name":{"identifier":"nodeType"}}}]},"name":{"identifier":"message"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"name":{"identifier":"message"}},{"name":{"identifier":"cause"}}]}}]}
/automata/parseratnfactory.java	newState	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BasicState"}}},"name":{"identifier":"n"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"setRuleIndex"},"scope":{"name":{"identifier":"n"}},"arguments":[{"name":{"identifier":"index"},"scope":{"name":{"identifier":"currentRule"}}}]}},{"expression":{"name":{"identifier":"addState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"n"}}]}},{"expression":{"name":{"identifier":"n"}}}]}
/automata/parseratnfactory.java	newState	{"statements":[{"expression":{"name":{"identifier":"newState"},"arguments":[{}]}}]}
/automata/parseratnfactory.java	expectNonGreedy	{"statements":[{"condition":{"name":{"identifier":"blockHasWildcardAlt"},"arguments":[{"name":{"identifier":"blkAST"}}]},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}},{"expression":{"value":"false"}}]}
/automata/parseratnfactory.java	blockHasWildcardAlt	{"statements":[{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"alt"}},"type":{"name":{"identifier":"AltAST"}}}}},"thenStmt":{}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"alt"}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altAST"},"type":{"name":{"identifier":"AltAST"}}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"altAST"}}},"right":{"value":"1"}},"right":{"inner":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"altAST"}}},"right":{"value":"2"}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"value":"0"}]}},"right":{"name":{"identifier":"ELEMENT_OPTIONS"},"scope":{"name":{"identifier":"ANTLRParser"}}}}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"getChildCount"},"scope":{"name":{"identifier":"altAST"}}},"right":{"value":"1"}}]},"name":{"identifier":"e"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"e"}}},"right":{"name":{"identifier":"WILDCARD"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}}]}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"block"}}},"variable":{"variables":[{"name":{"identifier":"alt"},"type":{"name":{"identifier":"Object"}}}]}},{"expression":{"value":"false"}}]}
/automata/parseratnfactory.java	lexerAltCommands	{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"value":"This element is not allowed in parsers."}]}}]}
/automata/parseratnfactory.java	lexerCallCommand	{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"value":"This element is not allowed in parsers."}]}}]}
/automata/parseratnfactory.java	lexerCommand	{"statements":[{"expression":{"type":{"name":{"identifier":"UnsupportedOperationException"}},"arguments":[{"value":"This element is not allowed in parsers."}]}}]}
/automata/lexeratnfactory.java	getCommonConstants	{"statements":[{"expression":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"COMMON_CONSTANTS"}}}}]}
/automata/lexeratnfactory.java	createATN	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"modes"},"scope":{"inner":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}}}}},"name":{"identifier":"modes"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"type":{"name":{"identifier":"TokensStartState"}}},{}]},"name":{"identifier":"startState"},"type":{"name":{"identifier":"TokensStartState"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"modeNameToStartState"},"scope":{"name":{"identifier":"atn"}}},"arguments":[{"name":{"identifier":"modeName"}},{"name":{"identifier":"startState"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"modeToStartState"},"scope":{"name":{"identifier":"atn"}}},"arguments":[{"name":{"identifier":"startState"}}]}},{"expression":{"name":{"identifier":"defineDecisionState"},"scope":{"name":{"identifier":"atn"}},"arguments":[{"name":{"identifier":"startState"}}]}}]},"iterable":{"name":{"identifier":"modes"}},"variable":{"variables":[{"name":{"identifier":"modeName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleToTokenType"},"scope":{"name":{"identifier":"atn"}}},"value":{"elementType":{"type":"INT"},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}}]}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToTokenType"},"scope":{"name":{"identifier":"atn"}}}},"value":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"expression":{"name":{"identifier":"_createATN"},"arguments":[{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"atn"}}},"value":{"elementType":{"name":{"identifier":"LexerAction"}},"levels":[{"dimension":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"indexToActionMap"}}}}]}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"index":{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}},"name":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"atn"}}}},"value":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"indexToActionMap"}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"LexerAction"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"modes"},"scope":{"inner":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}}}},"arguments":[{"name":{"identifier":"modeName"}}]},"name":{"identifier":"rules"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"modeNameToStartState"},"scope":{"name":{"identifier":"atn"}}},"arguments":[{"name":{"identifier":"modeName"}}]},"name":{"identifier":"startState"},"type":{"name":{"identifier":"TokensStartState"}}}]}},{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isFragment"},"scope":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"r"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}}},"name":{"identifier":"s"},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"startState"}},{"name":{"identifier":"s"}}]}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}}]},"iterable":{"name":{"identifier":"modes"}},"variable":{"variables":[{"name":{"identifier":"modeName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"optimize"},"scope":{"name":{"identifier":"ATNOptimizer"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"atn"}}]}},{"expression":{"name":{"identifier":"atn"}}}]}
/automata/lexeratnfactory.java	rule	{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"ruleCommands"}}}},{"expression":{"name":{"identifier":"rule"},"scope":{},"arguments":[{"name":{"identifier":"ruleAST"}},{"name":{"identifier":"name"}},{"name":{"identifier":"blk"}}]}}]}
/automata/lexeratnfactory.java	action	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"currentRule"}}},"name":{"identifier":"ruleIndex"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"lexerActions"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"action"}}]},"name":{"identifier":"actionIndex"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LexerCustomAction"}},"arguments":[{"name":{"identifier":"ruleIndex"}},{"name":{"identifier":"actionIndex"}}]},"name":{"identifier":"lexerAction"},"type":{"name":{"identifier":"LexerCustomAction"}}}]}},{"expression":{"name":{"identifier":"action"},"arguments":[{"name":{"identifier":"action"}},{"name":{"identifier":"lexerAction"}}]}}]}
/automata/lexeratnfactory.java	getLexerActionIndex	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"actionToIndexMap"}},"arguments":[{"name":{"identifier":"lexerAction"}}]},"name":{"identifier":"lexerActionIndex"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"lexerActionIndex"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lexerActionIndex"}},"value":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"actionToIndexMap"}}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"actionToIndexMap"}},"arguments":[{"name":{"identifier":"lexerAction"}},{"name":{"identifier":"lexerActionIndex"}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"indexToActionMap"}},"arguments":[{"name":{"identifier":"lexerActionIndex"}},{"name":{"identifier":"lexerAction"}}]}}]}},{"expression":{"name":{"identifier":"lexerActionIndex"}}}]}
/automata/lexeratnfactory.java	action	{"statements":[{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"action"}}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionAST"}},"arguments":[{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"name":{"identifier":"action"}}]}]},"name":{"identifier":"ast"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"expression":{"name":{"identifier":"defineActionInAlt"},"scope":{"name":{"identifier":"currentRule"}},"arguments":[{"name":{"identifier":"currentOuterAlt"}},{"name":{"identifier":"ast"}}]}},{"expression":{"name":{"identifier":"action"},"arguments":[{"name":{"identifier":"ast"}}]}}]}
/automata/lexeratnfactory.java	action	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"isCtxDependent"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getLexerActionIndex"},"arguments":[{"name":{"identifier":"lexerAction"}}]},"name":{"identifier":"lexerActionIndex"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ActionTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"index"},"scope":{"name":{"identifier":"currentRule"}}},{"name":{"identifier":"lexerActionIndex"}},{"name":{"identifier":"isCtxDependent"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"ActionTransition"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"name":{"identifier":"a"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"node"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"name":{"identifier":"h"}}}]}
/automata/lexeratnfactory.java	lexerAltCommands	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"},"scope":{"name":{"identifier":"alt"}}},{"name":{"identifier":"right"},"scope":{"name":{"identifier":"cmds"}}}]},"name":{"identifier":"h"},"type":{"name":{"identifier":"Handle"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"right"},"scope":{"name":{"identifier":"alt"}}},{"name":{"identifier":"left"},"scope":{"name":{"identifier":"cmds"}}}]}},{"expression":{"name":{"identifier":"h"}}}]}
/automata/lexeratnfactory.java	lexerCallCommand	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createLexerAction"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"arg"}}]},"name":{"identifier":"lexerAction"},"type":{"name":{"identifier":"LexerAction"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"lexerAction"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"action"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"lexerAction"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Lexer"},"right":{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},"right":{"value":"Command"}}]},"name":{"identifier":"cmdST"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"cmdST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_LEXER_COMMAND"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"ID"}}]}}]}},{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"cmdST"}}}},"right":{}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"cmdST"}}}},"arguments":[{"value":"arg"}]}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"UNWANTED_LEXER_COMMAND_ARGUMENT"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"ID"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"cmdST"}},"arguments":[{"value":"arg"},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"cmdST"}},"arguments":[{"value":"grammar"},{"name":{"identifier":"g"},"scope":{"name":{"identifier":"arg"}}}]}},{"expression":{"name":{"identifier":"action"},"arguments":[{"name":{"identifier":"render"},"scope":{"name":{"identifier":"cmdST"}}}]}}]}
/automata/lexeratnfactory.java	lexerCommand	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"createLexerAction"},"arguments":[{"name":{"identifier":"ID"}},{}]},"name":{"identifier":"lexerAction"},"type":{"name":{"identifier":"LexerAction"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"lexerAction"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"action"},"arguments":[{"name":{"identifier":"ID"}},{"name":{"identifier":"lexerAction"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"Lexer"},"right":{"name":{"identifier":"capitalize"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},"right":{"value":"Command"}}]},"name":{"identifier":"cmdST"},"type":{"name":{"identifier":"ST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"cmdST"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_LEXER_COMMAND"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"ID"}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"cmdST"}}}},"right":{}},"right":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"formalArguments"},"scope":{"name":{"identifier":"impl"},"scope":{"name":{"identifier":"cmdST"}}}},"arguments":[{"value":"arg"}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"MISSING_LEXER_COMMAND_ARGUMENT"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"name":{"identifier":"ID"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}}]}},{"expression":{"name":{"identifier":"epsilon"},"arguments":[{"name":{"identifier":"ID"}}]}}]}},{"expression":{"name":{"identifier":"action"},"arguments":[{"name":{"identifier":"render"},"scope":{"name":{"identifier":"cmdST"}}}]}}]}
/automata/lexeratnfactory.java	range	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"a"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"b"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCharValueFromGrammarCharLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"a"}}}]},"name":{"identifier":"t1"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCharValueFromGrammarCharLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"b"}}}]},"name":{"identifier":"t2"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"checkRange"},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"b"}},{"name":{"identifier":"t1"}},{"name":{"identifier":"t2"}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"name":{"identifier":"createWithCodePointRange"},"scope":{"name":{"identifier":"CodePointTransitions"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"t1"}},{"name":{"identifier":"t2"}}]}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"a"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"b"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/lexeratnfactory.java	set	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"associatedAST"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"associatedAST"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"RANGE"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"LEXER_CHAR_SET"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"STRING_LITERAL"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"elseStmt":{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"t"}}},"right":{"name":{"identifier":"TOKEN_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"UNSUPPORTED_REFERENCE_IN_LEXER_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"t"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCharValueFromGrammarCharLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}]},"name":{"identifier":"c"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"c"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_LITERAL_IN_LEXER_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"t"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"t"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"checkSetCollision"},"arguments":[{"name":{"identifier":"associatedAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"c"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"c"}}]}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"getSetFromCharSetLiteral"},"arguments":[{"name":{"identifier":"t"}}]}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCharValueFromGrammarCharLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"0"}]}}]},"name":{"identifier":"a"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getCharValueFromGrammarCharLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"1"}]}}]},"name":{"identifier":"b"},"type":{"type":"INT"}}]}},{"condition":{"name":{"identifier":"checkRange"},"arguments":[{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}},{"name":{"identifier":"a"}},{"name":{"identifier":"b"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"checkSetCollision"},"arguments":[{"name":{"identifier":"associatedAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"a"}},{"name":{"identifier":"b"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"b"}}]}}]}}]}}]},"iterable":{"name":{"identifier":"alts"}},"variable":{"variables":[{"name":{"identifier":"t"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"name":{"identifier":"invert"}},"elseStmt":{"statements":[{"expression":{"variables":[{"name":{"identifier":"transition"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}}},"right":{"value":"1"}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"transition"}},"value":{"type":{"name":{"identifier":"SetTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"set"}}]}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getIntervals"},"scope":{"name":{"identifier":"set"}}},"arguments":[{"value":"0"}]},"name":{"identifier":"interval"},"type":{"name":{"identifier":"Interval"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"transition"}},"value":{"name":{"identifier":"createWithCodePointRange"},"scope":{"name":{"identifier":"CodePointTransitions"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"a"},"scope":{"name":{"identifier":"interval"}}},{"name":{"identifier":"b"},"scope":{"name":{"identifier":"interval"}}}]}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"name":{"identifier":"transition"}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"NotSetTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"set"}}]}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"associatedAST"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/lexeratnfactory.java	checkRange	{"statements":[{"expression":{"variables":[{"initializer":{"value":"true"},"name":{"identifier":"result"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"leftValue"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"value":"false"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_LITERAL_IN_LEXER_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"leftNode"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"leftNode"}}}]}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"rightValue"}},"right":{"operator":"MINUS","expression":{"value":"1"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"result"}},"value":{"value":"false"}}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_LITERAL_IN_LEXER_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"rightNode"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rightNode"}}}]}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"result"}}},"thenStmt":{"expression":{"name":{"identifier":"result"}}}},{"condition":{"operator":"LESS","left":{"name":{"identifier":"rightValue"}},"right":{"name":{"identifier":"leftValue"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EMPTY_STRINGS_AND_SETS_NOT_ALLOWED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"parent"},"scope":{"name":{"identifier":"leftNode"}}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"leftNode"}}},"right":{"value":".."}},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rightNode"}}}}]}}]}},{"expression":{"name":{"identifier":"result"}}}]}
/automata/lexeratnfactory.java	stringLiteral	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"stringLiteralAST"}}},"name":{"identifier":"chars"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"stringLiteralAST"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getStringFromGrammarStringLiteral"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"chars"}}]},"name":{"identifier":"s"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"s"}},"right":{}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"left"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"left"}},"name":{"identifier":"prev"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"right"}},"value":{}}},{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"right"}},"value":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"stringLiteralAST"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"codePoint"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"prev"}},"arguments":[{"name":{"identifier":"createWithCodePoint"},"scope":{"name":{"identifier":"CodePointTransitions"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"codePoint"}}]}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"prev"}},"value":{"name":{"identifier":"right"}}}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"i"}},"value":{"name":{"identifier":"charCount"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"codePoint"}}]}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}]},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"stringLiteralAST"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/lexeratnfactory.java	charSetLiteral	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"charSetAST"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"charSetAST"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getSetFromCharSetLiteral"},"arguments":[{"name":{"identifier":"charSetAST"}}]},"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"SetTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"set"}}]}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"atnState"},"scope":{"name":{"identifier":"charSetAST"}}},"value":{"name":{"identifier":"left"}}}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}
/automata/lexeratnfactory.java	toString	{"statements":[{"expression":{"name":{"identifier":"format"},"scope":{"name":{"identifier":"String"}},"arguments":[{"value":"%s mode=%s inRange=%s prevCodePoint=%d prevProperty=%s"},{"name":{"identifier":"toString"},"scope":{}},{"name":{"identifier":"mode"}},{"name":{"identifier":"inRange"}},{"name":{"identifier":"prevCodePoint"}},{"name":{"identifier":"prevProperty"}}]}}]}
/automata/lexeratnfactory.java	equals	{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"inner":{"expression":{"name":{"identifier":"other"}},"type":{"name":{"identifier":"CharSetParseState"}}}}},"thenStmt":{"statements":[{"expression":{"value":"false"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"other"}},"type":{"name":{"identifier":"CharSetParseState"}}},"name":{"identifier":"that"},"type":{"name":{"identifier":"CharSetParseState"}}}]}},{"condition":{"operator":"EQUALS","left":{},"right":{"name":{"identifier":"that"}}},"thenStmt":{"statements":[{"expression":{"value":"true"}}]}},{"expression":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"mode"},"scope":{}},{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"that"}}}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"inRange"},"scope":{}},{"name":{"identifier":"inRange"},"scope":{"name":{"identifier":"that"}}}]}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"prevCodePoint"},"scope":{}},{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"that"}}}]}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"prevProperty"},"scope":{}},{"name":{"identifier":"prevProperty"},"scope":{"name":{"identifier":"that"}}}]}}}]}
/automata/lexeratnfactory.java	hashCode	{"statements":[{"expression":{"name":{"identifier":"hash"},"scope":{"name":{"identifier":"Objects"}},"arguments":[{"name":{"identifier":"mode"}},{"name":{"identifier":"inRange"}},{"name":{"identifier":"prevCodePoint"}},{"name":{"identifier":"prevProperty"}}]}}]}
/automata/lexeratnfactory.java	getSetFromCharSetLiteral	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"charSetAST"}}},"name":{"identifier":"chars"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"chars"}},"value":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"chars"}},"arguments":[{"value":"1"},{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"chars"}}},"right":{"value":"1"}}]}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"set"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"chars"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EMPTY_STRINGS_AND_SETS_NOT_ALLOWED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"charSetAST"}}},{"value":"[]"}]}},{"expression":{"name":{"identifier":"set"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"NONE"},"scope":{"name":{"identifier":"CharSetParseState"}}},"name":{"identifier":"state"},"type":{"name":{"identifier":"CharSetParseState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"chars"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"state"}}},"right":{"name":{"identifier":"ERROR"},"scope":{"name":{"identifier":"Mode"},"scope":{"name":{"identifier":"CharSetParseState"}}}}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IntervalSet"}}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"codePointAt"},"scope":{"name":{"identifier":"chars"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"c"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"charCount"},"scope":{"name":{"identifier":"Character"}},"arguments":[{"name":{"identifier":"c"}}]},"name":{"identifier":"offset"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"value":"\\"}},"elseStmt":{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"c"}},"right":{"value":"-"}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"inRange"},"scope":{"name":{"identifier":"state"}}}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"i"}},"right":{"value":"0"}}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"i"}},"right":{"operator":"MINUS","left":{"name":{"identifier":"n"}},"right":{"value":"1"}}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"name":{"identifier":"applyPrevStateAndMoveToCodePoint"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"state"}},{"name":{"identifier":"c"}}]}}}]},"thenStmt":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"state"}}},"right":{"name":{"identifier":"PREV_PROPERTY"},"scope":{"name":{"identifier":"Mode"},"scope":{"name":{"identifier":"CharSetParseState"}}}}},"elseStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"type":{"name":{"identifier":"CharSetParseState"}},"arguments":[{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"state"}}},{"value":"true"},{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}},{"name":{"identifier":"prevProperty"},"scope":{"name":{"identifier":"state"}}}]}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"UNICODE_PROPERTY_NOT_ALLOWED_IN_RANGE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"charSetAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"charSetAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"name":{"identifier":"ERROR"},"scope":{"name":{"identifier":"CharSetParseState"}}}}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseEscape"},"scope":{"name":{"identifier":"EscapeSequenceParsing"}},"arguments":[{"name":{"identifier":"chars"}},{"name":{"identifier":"i"}}]},"name":{"identifier":"escapeParseResult"},"type":{"name":{"identifier":"Result"},"scope":{"name":{"identifier":"EscapeSequenceParsing"}}}}]}},{"selector":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"escapeParseResult"}}},"entries":[{"label":{"name":{"identifier":"INVALID"}},"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"substring"},"scope":{"name":{"identifier":"chars"}},"arguments":[{"name":{"identifier":"startOffset"},"scope":{"name":{"identifier":"escapeParseResult"}}},{"operator":"PLUS","left":{"name":{"identifier":"startOffset"},"scope":{"name":{"identifier":"escapeParseResult"}}},"right":{"name":{"identifier":"parseLength"},"scope":{"name":{"identifier":"escapeParseResult"}}}}]},"name":{"identifier":"invalid"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INVALID_ESCAPE_SEQUENCE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"charSetAST"}}},{"name":{"identifier":"invalid"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"name":{"identifier":"ERROR"},"scope":{"name":{"identifier":"CharSetParseState"}}}}},{}]},{"label":{"name":{"identifier":"CODE_POINT"}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"name":{"identifier":"applyPrevStateAndMoveToCodePoint"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"state"}},{"name":{"identifier":"codePoint"},"scope":{"name":{"identifier":"escapeParseResult"}}}]}}},{}]},{"label":{"name":{"identifier":"PROPERTY"}},"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"name":{"identifier":"applyPrevStateAndMoveToProperty"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"state"}},{"name":{"identifier":"propertyIntervalSet"},"scope":{"name":{"identifier":"escapeParseResult"}}}]}}},{}]}]},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"offset"}},"value":{"name":{"identifier":"parseLength"},"scope":{"name":{"identifier":"escapeParseResult"}}}}}]}},{"expression":{"operator":"PLUS","target":{"name":{"identifier":"i"}},"value":{"name":{"identifier":"offset"}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}]},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"state"}}},"right":{"name":{"identifier":"ERROR"},"scope":{"name":{"identifier":"Mode"},"scope":{"name":{"identifier":"CharSetParseState"}}}}},"thenStmt":{"statements":[{"expression":{"type":{"name":{"identifier":"IntervalSet"}}}}]}},{"expression":{"name":{"identifier":"applyPrevState"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"state"}}]}},{"expression":{"name":{"identifier":"set"}}}]}
/automata/lexeratnfactory.java	applyPrevStateAndMoveToCodePoint	{"statements":[{"condition":{"name":{"identifier":"inRange"},"scope":{"name":{"identifier":"state"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"applyPrevState"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"state"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"type":{"name":{"identifier":"CharSetParseState"}},"arguments":[{"name":{"identifier":"PREV_CODE_POINT"},"scope":{"name":{"identifier":"Mode"},"scope":{"name":{"identifier":"CharSetParseState"}}}},{"value":"false"},{"name":{"identifier":"codePoint"}},{"name":{"identifier":"EMPTY_SET"},"scope":{"name":{"identifier":"IntervalSet"}}}]}}}]},"thenStmt":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}},"right":{"name":{"identifier":"codePoint"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EMPTY_STRINGS_AND_SETS_NOT_ALLOWED"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"charSetAST"}}},{"name":{"identifier":"getRangeEscapedString"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}},{"name":{"identifier":"codePoint"}}]}]}}]}},{"expression":{"name":{"identifier":"checkSetCollision"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}},{"name":{"identifier":"codePoint"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}},{"name":{"identifier":"codePoint"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"name":{"identifier":"NONE"},"scope":{"name":{"identifier":"CharSetParseState"}}}}}]}},{"expression":{"name":{"identifier":"state"}}}]}
/automata/lexeratnfactory.java	applyPrevStateAndMoveToProperty	{"statements":[{"condition":{"name":{"identifier":"inRange"},"scope":{"name":{"identifier":"state"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"applyPrevState"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"state"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"state"}},"value":{"type":{"name":{"identifier":"CharSetParseState"}},"arguments":[{"name":{"identifier":"PREV_PROPERTY"},"scope":{"name":{"identifier":"Mode"},"scope":{"name":{"identifier":"CharSetParseState"}}}},{"value":"false"},{"operator":"MINUS","expression":{"value":"1"}},{"name":{"identifier":"property"}}]}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"UNICODE_PROPERTY_NOT_ALLOWED_IN_RANGE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"charSetAST"}}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"charSetAST"}}}]}},{"expression":{"name":{"identifier":"ERROR"},"scope":{"name":{"identifier":"CharSetParseState"}}}}]}},{"expression":{"name":{"identifier":"state"}}}]}
/automata/lexeratnfactory.java	applyPrevState	{"statements":[{"selector":{"name":{"identifier":"mode"},"scope":{"name":{"identifier":"state"}}},"entries":[{"label":{"name":{"identifier":"NONE"}}},{"label":{"name":{"identifier":"ERROR"}},"statements":[{}]},{"label":{"name":{"identifier":"PREV_CODE_POINT"}},"statements":[{"expression":{"name":{"identifier":"checkSetCollision"},"arguments":[{"name":{"identifier":"charSetAST"}},{"name":{"identifier":"set"}},{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"prevCodePoint"},"scope":{"name":{"identifier":"state"}}}]}},{}]},{"label":{"name":{"identifier":"PREV_PROPERTY"}},"statements":[{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"prevProperty"},"scope":{"name":{"identifier":"state"}}}]}},{}]}]}]}
/automata/lexeratnfactory.java	checkSetCollision	{"statements":[{"expression":{"name":{"identifier":"checkSetCollision"},"arguments":[{"name":{"identifier":"ast"}},{"name":{"identifier":"set"}},{"name":{"identifier":"el"}},{"name":{"identifier":"el"}}]}}]}
/automata/lexeratnfactory.java	checkSetCollision	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"set"}},"arguments":[{"name":{"identifier":"i"}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"name":{"identifier":"setText"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"ast"}}},"right":{}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"sb"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"body":{"statements":[{"condition":{"expression":{"name":{"identifier":"child"}},"type":{"name":{"identifier":"RangeAST"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"inner":{"expression":{"name":{"identifier":"child"}},"type":{"name":{"identifier":"GrammarAST"}}}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"inner":{"expression":{"name":{"identifier":"child"}},"type":{"name":{"identifier":"RangeAST"}}}},"arguments":[{"value":"0"}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"value":".."}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"inner":{"expression":{"name":{"identifier":"child"}},"type":{"name":{"identifier":"RangeAST"}}}},"arguments":[{"value":"1"}]}}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"value":" | "}]}}]},"iterable":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"ast"}}},"variable":{"variables":[{"name":{"identifier":"child"},"type":{"name":{"identifier":"Object"}}}]}},{"expression":{"name":{"identifier":"replace"},"scope":{"name":{"identifier":"sb"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"sb"}}},"right":{"value":"3"}},{"name":{"identifier":"length"},"scope":{"name":{"identifier":"sb"}}},{"value":""}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"setText"}},"value":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"sb"}}}}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"setText"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ast"}}}}}]}},{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHARACTERS_COLLISION_IN_SET"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ast"}}},{"name":{"identifier":"getRangeEscapedString"},"scope":{"name":{"identifier":"CharSupport"}},"arguments":[{"name":{"identifier":"a"}},{"name":{"identifier":"b"}}]},{"name":{"identifier":"setText"}}]}},{}]}}]},"compare":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"b"}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"a"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/automata/lexeratnfactory.java	tokenRef	{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"node"}}},"arguments":[{"value":"EOF"}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"left"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"newState"},"arguments":[{"name":{"identifier":"node"}}]},"name":{"identifier":"right"},"type":{"name":{"identifier":"ATNState"}}}]}},{"expression":{"name":{"identifier":"addTransition"},"scope":{"name":{"identifier":"left"}},"arguments":[{"type":{"name":{"identifier":"AtomTransition"}},"arguments":[{"name":{"identifier":"right"}},{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"IntStream"}}}]}]}},{"expression":{"type":{"name":{"identifier":"Handle"}},"arguments":[{"name":{"identifier":"left"}},{"name":{"identifier":"right"}}]}}]}},{"expression":{"name":{"identifier":"_ruleRef"},"arguments":[{"name":{"identifier":"node"}}]}}]}
/automata/lexeratnfactory.java	createLexerAction	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"ID"}}},"name":{"identifier":"command"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"name":{"identifier":"checkCommands"},"arguments":[{"name":{"identifier":"command"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"ID"}}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"skip"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"more"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"popMode"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"mode"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"pushMode"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"type"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"condition":{"operator":"AND","left":{"name":{"identifier":"equals"},"scope":{"value":"channel"},"arguments":[{"name":{"identifier":"command"}}]},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}}},"elseStmt":{"statements":[{"expression":{}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}},"name":{"identifier":"channelName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChannelConstantValue"},"arguments":[{"name":{"identifier":"channelName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"arg"}}}]},"name":{"identifier":"channel"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"channel"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"type":{"name":{"identifier":"LexerChannelAction"}},"arguments":[{"name":{"identifier":"channel"}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}},"name":{"identifier":"typeName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenConstantValue"},"arguments":[{"name":{"identifier":"typeName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"arg"}}}]},"name":{"identifier":"type"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"type"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"type":{"name":{"identifier":"LexerTypeAction"}},"arguments":[{"name":{"identifier":"type"}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}},"name":{"identifier":"modeName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getModeConstantValue"},"arguments":[{"name":{"identifier":"modeName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"arg"}}}]},"name":{"identifier":"mode"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"mode"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"type":{"name":{"identifier":"LexerPushModeAction"}},"arguments":[{"name":{"identifier":"mode"}}]}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}},"name":{"identifier":"modeName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getModeConstantValue"},"arguments":[{"name":{"identifier":"modeName"}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"arg"}}}]},"name":{"identifier":"mode"},"type":{"name":{"identifier":"Integer"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"mode"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"expression":{"type":{"name":{"identifier":"LexerModeAction"}},"arguments":[{"name":{"identifier":"mode"}}]}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"INSTANCE"},"scope":{"name":{"identifier":"LexerPopModeAction"}}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"INSTANCE"},"scope":{"name":{"identifier":"LexerMoreAction"}}}}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"INSTANCE"},"scope":{"name":{"identifier":"LexerSkipAction"}}}}]}}]}
/automata/lexeratnfactory.java	checkCommands	{"statements":[{"condition":{"operator":"AND","left":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"command"}},"arguments":[{"value":"pushMode"}]}},"right":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"command"}},"arguments":[{"value":"popMode"}]}}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"name":{"identifier":"command"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"DUPLICATED_COMMAND"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"commandToken"}},{"name":{"identifier":"command"}}]}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"mode"}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"firstCommand"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"command"}},"arguments":[{"value":"skip"}]},"elseStmt":{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"command"}},"arguments":[{"value":"more"}]},"elseStmt":{"condition":{"operator":"OR","left":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"command"}},"arguments":[{"value":"type"}]},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"command"}},"arguments":[{"value":"channel"}]}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"more"}]},"elseStmt":{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"skip"}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"skip"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"more"}}}]}}]}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"skip"}]},"elseStmt":{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"type"}]},"elseStmt":{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"channel"}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"channel"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"type"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"skip"}}}]}}]}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"more"}]},"elseStmt":{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"type"}]},"elseStmt":{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"value":"channel"}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"channel"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"type"}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"firstCommand"}},"value":{"value":"more"}}}]}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"firstCommand"}},"right":{}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"INCOMPATIBLE_COMMANDS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"commandToken"}},{"name":{"identifier":"firstCommand"}},{"name":{"identifier":"command"}}]}}]}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleCommands"}},"arguments":[{"name":{"identifier":"command"}}]}}]}
/automata/lexeratnfactory.java	getModeConstantValue	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"modeName"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"modeName"}},"arguments":[{"value":"DEFAULT_MODE"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"DEFAULT_MODE"},"scope":{"name":{"identifier":"Lexer"}}}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"COMMON_CONSTANTS"}},"arguments":[{"name":{"identifier":"modeName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"MODE_CONFLICTS_WITH_COMMON_CONSTANTS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"}}}]}},{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"String"}}]},"arguments":[{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"modes"},"scope":{"inner":{"expression":{"name":{"identifier":"g"}},"type":{"name":{"identifier":"LexerGrammar"}}}}}}]},"name":{"identifier":"modeNames"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"indexOf"},"scope":{"name":{"identifier":"modeNames"}},"arguments":[{"name":{"identifier":"modeName"}}]},"name":{"identifier":"mode"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"mode"}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"mode"}}}]}},{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"parseInt"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"modeName"}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CONSTANT_VALUE_IS_NOT_A_RECOGNIZED_MODE_NAME"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"}}}]}},{"expression":{}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"NumberFormatException"}}}}]}]}
/automata/lexeratnfactory.java	getTokenConstantValue	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"tokenName"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"tokenName"}},"arguments":[{"value":"EOF"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"EOF"},"scope":{"name":{"identifier":"Lexer"}}}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"COMMON_CONSTANTS"}},"arguments":[{"name":{"identifier":"tokenName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"TOKEN_CONFLICTS_WITH_COMMON_CONSTANTS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"}}}]}},{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenType"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"tokenName"}}]},"name":{"identifier":"tokenType"},"type":{"type":"INT"}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"tokenType"}},"right":{"name":{"identifier":"INVALID_TYPE"},"scope":{"name":{"identifier":"Token"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"v4"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"tokenType"}}}]}},{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"parseInt"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"tokenName"}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CONSTANT_VALUE_IS_NOT_A_RECOGNIZED_TOKEN_NAME"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"}}}]}},{"expression":{}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"NumberFormatException"}}}}]}]}
/automata/lexeratnfactory.java	getChannelConstantValue	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"channelName"}},"right":{}},"thenStmt":{"statements":[{"expression":{}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"channelName"}},"arguments":[{"value":"HIDDEN"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"HIDDEN"},"scope":{"name":{"identifier":"Lexer"}}}}]}},{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"channelName"}},"arguments":[{"value":"DEFAULT_TOKEN_CHANNEL"}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"DEFAULT_TOKEN_CHANNEL"},"scope":{"name":{"identifier":"Lexer"}}}}]}},{"condition":{"name":{"identifier":"containsKey"},"scope":{"name":{"identifier":"COMMON_CONSTANTS"}},"arguments":[{"name":{"identifier":"channelName"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CHANNEL_CONFLICTS_WITH_COMMON_CONSTANTS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"}}}]}},{"expression":{}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChannelValue"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"channelName"}}]},"name":{"identifier":"channelValue"},"type":{"type":"INT"}}]}},{"condition":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"channelValue"}},"right":{"name":{"identifier":"MIN_USER_CHANNEL_VALUE"},"scope":{"name":{"identifier":"Token"},"scope":{"name":{"identifier":"runtime"},"scope":{"name":{"identifier":"v4"},"scope":{"name":{"identifier":"antlr"},"scope":{"name":{"identifier":"org"}}}}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"channelValue"}}}]}},{"tryBlock":{"statements":[{"expression":{"name":{"identifier":"parseInt"},"scope":{"name":{"identifier":"Integer"}},"arguments":[{"name":{"identifier":"channelName"}}]}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"CONSTANT_VALUE_IS_NOT_A_RECOGNIZED_CHANNEL_NAME"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"token"}}}]}},{"expression":{}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"ex"},"type":{"name":{"identifier":"NumberFormatException"}}}}]}]}
/analysis/leftrecursiveruletransformer.java	translateLeftRecursiveRules	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"g"}},"arguments":[{"value":"language"}]},"name":{"identifier":"language"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"String"}}]}},"name":{"identifier":"leftRecursiveRuleNames"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"String"}}]}}]}},{"body":{"statements":[{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isTokenName"},"scope":{"name":{"identifier":"Grammar"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"hasImmediateRecursiveRuleRefs"},"scope":{"name":{"identifier":"LeftRecursiveRuleAnalyzer"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"translateLeftRecursiveRule"},"arguments":[{"name":{"identifier":"ast"}},{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"LeftRecursiveRule"}}},{"name":{"identifier":"language"}}]},"name":{"identifier":"fitsPattern"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"name":{"identifier":"fitsPattern"}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"NONCONFORMING_LR_RULE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"token"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"leftRecursiveRuleNames"}},"arguments":[{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}}]}}]}}]},"iterable":{"name":{"identifier":"rules"}},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"r"}}}},"right":{"name":{"identifier":"RULE"},"scope":{"name":{"identifier":"ANTLRParser"}}}},"thenStmt":{}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getOptionString"},"scope":{"inner":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"}}]},"right":{}},"thenStmt":{}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"leftRecursiveRuleNames"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"r"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setOption"},"scope":{"inner":{"expression":{"name":{"identifier":"r"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"}},{"expression":{"name":{"identifier":"create"},"scope":{"type":{"name":{"identifier":"GrammarASTAdaptor"}}},"arguments":[{"name":{"identifier":"INT"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}}]},"iterable":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"RULE_REF"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"variable":{"variables":[{"name":{"identifier":"r"},"type":{"name":{"identifier":"GrammarAST"}}}]}}]}
/analysis/leftrecursiveruletransformer.java	translateLeftRecursiveRule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"name":{"identifier":"prevRuleAST"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"prevRuleAST"}},"arguments":[{"value":"0"}]}},"name":{"identifier":"ruleName"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursiveRuleAnalyzer"}},"arguments":[{"name":{"identifier":"prevRuleAST"}},{"name":{"identifier":"tool"}},{"name":{"identifier":"ruleName"}},{"name":{"identifier":"language"}}]},"name":{"identifier":"leftRecursiveRuleWalker"},"type":{"name":{"identifier":"LeftRecursiveRuleAnalyzer"}}}]}},{"expression":{"variables":[{"name":{"identifier":"isLeftRec"},"type":{"type":"BOOLEAN"}}]}},{"tryBlock":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isLeftRec"}},"value":{"name":{"identifier":"rec_rule"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isLeftRec"}},"value":{"value":"false"}}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"re"},"type":{"name":{"identifier":"RecognitionException"}}}}]},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isLeftRec"}}},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"}},"arguments":[{"name":{"identifier":"RULES"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"RULES"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getArtificialOpPrecRule"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}},"name":{"identifier":"newRuleText"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"parseArtificialRule"},"arguments":[{"name":{"identifier":"g"},"scope":{"name":{"identifier":"prevRuleAST"}}},{"name":{"identifier":"newRuleText"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"token"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},"value":{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"prevRuleAST"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}}},{"expression":{"name":{"identifier":"setChild"},"scope":{"name":{"identifier":"RULES"}},"arguments":[{"name":{"identifier":"getChildIndex"},"scope":{"name":{"identifier":"prevRuleAST"}}},{"name":{"identifier":"t"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"t"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarTransformPipeline"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"transform"},"type":{"name":{"identifier":"GrammarTransformPipeline"}}}]}},{"expression":{"name":{"identifier":"reduceBlocksToSets"},"scope":{"name":{"identifier":"transform"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"name":{"identifier":"expandParameterizedLoops"},"scope":{"name":{"identifier":"transform"}},"arguments":[{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"RuleCollector"}},"arguments":[{"name":{"identifier":"g"}}]},"name":{"identifier":"ruleCollector"},"type":{"name":{"identifier":"RuleCollector"}}}]}},{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"ruleCollector"}},"arguments":[{"name":{"identifier":"t"}},{"value":"rule"}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"BasicSemanticChecks"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"ruleCollector"}}]},"name":{"identifier":"basics"},"type":{"name":{"identifier":"BasicSemanticChecks"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"checkAssocElementOption"},"scope":{"name":{"identifier":"basics"}}},"value":{"value":"false"}}},{"expression":{"name":{"identifier":"visit"},"scope":{"name":{"identifier":"basics"}},"arguments":[{"name":{"identifier":"t"}},{"value":"rule"}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"recPrimaryAlts"},"scope":{"name":{"identifier":"r"}}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}]}}}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"recPrimaryAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"prefixAndOtherAlts"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}}]}},{"condition":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"recPrimaryAlts"},"scope":{"name":{"identifier":"r"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"NO_NON_LR_ALTS"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"r"}}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}},"value":{"type":{"name":{"identifier":"OrderedHashMap"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}]}}}},{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"binaryAlts"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}}]}},{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"ternaryAlts"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}}]}},{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"suffixAlts"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}}]}},{"expression":{"name":{"identifier":"setAltASTPointers"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"t"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"ARG_ACTION"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"ActionAST"}}},"name":{"identifier":"arg"},"type":{"name":{"identifier":"ActionAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"arg"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"parseTypedArgList"},"scope":{"name":{"identifier":"ScopeParser"}},"arguments":[{"name":{"identifier":"arg"}},{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"arg"}}},{"name":{"identifier":"g"}}]}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"type"},"scope":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"ARG"},"scope":{"name":{"identifier":"DictType"},"scope":{"name":{"identifier":"AttributeDict"}}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"args"},"scope":{"name":{"identifier":"r"}}}},"value":{"name":{"identifier":"arg"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"resolver"},"scope":{"name":{"identifier":"arg"}}},"value":{"index":{"value":"1"},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"a"},"scope":{"name":{"identifier":"pair"}}},"name":{"identifier":"labelNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"labelNode"}}},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"labelOpNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"labelOpNode"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"elementNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LabelElementPair"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"labelNode"}},{"name":{"identifier":"elementNode"}},{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"labelOpNode"}}}]},"name":{"identifier":"lp"},"type":{"name":{"identifier":"LabelElementPair"}}}]}},{"expression":{"name":{"identifier":"map"},"scope":{"name":{"identifier":"labelDefs"},"scope":{"index":{"value":"1"},"name":{"name":{"identifier":"alt"},"scope":{"name":{"identifier":"r"}}}}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"labelNode"}}},{"name":{"identifier":"lp"}}]}}]},"iterable":{"name":{"identifier":"leftRecursiveRuleRefLabels"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}},"variable":{"variables":[{"name":{"identifier":"pair"},"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"String"}}]}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"leftRecursiveRuleRefLabels"},"scope":{"name":{"identifier":"r"}}},"value":{"name":{"identifier":"leftRecursiveRuleRefLabels"},"scope":{"name":{"identifier":"leftRecursiveRuleWalker"}}}}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"value":"grammar"},{"operator":"PLUS","left":{"value":"added: "},"right":{"name":{"identifier":"toStringTree"},"scope":{"name":{"identifier":"t"}}}}]}},{"expression":{"value":"true"}}]}
/analysis/leftrecursiveruletransformer.java	parseArtificialRule	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ANTLRLexer"}},"arguments":[{"type":{"name":{"identifier":"ANTLRStringStream"}},"arguments":[{"name":{"identifier":"ruleText"}}]}]},"name":{"identifier":"lexer"},"type":{"name":{"identifier":"ANTLRLexer"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarASTAdaptor"}},"arguments":[{"name":{"identifier":"getCharStream"},"scope":{"name":{"identifier":"lexer"}}}]},"name":{"identifier":"adaptor"},"type":{"name":{"identifier":"GrammarASTAdaptor"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CommonTokenStream"}},"arguments":[{"name":{"identifier":"lexer"}}]},"name":{"identifier":"tokens"},"type":{"name":{"identifier":"CommonTokenStream"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"tokens"},"scope":{"name":{"identifier":"lexer"}}},"value":{"name":{"identifier":"tokens"}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"ToolANTLRParser"}},"arguments":[{"name":{"identifier":"tokens"}},{"name":{"identifier":"tool"}}]},"name":{"identifier":"p"},"type":{"name":{"identifier":"ToolANTLRParser"}}}]}},{"expression":{"name":{"identifier":"setTreeAdaptor"},"scope":{"name":{"identifier":"p"}},"arguments":[{"name":{"identifier":"adaptor"}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"ruleStart"},"type":{"name":{"identifier":"Token"}}}]}},{"tryBlock":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"rule"},"scope":{"name":{"identifier":"p"}}},"name":{"identifier":"r"},"type":{"name":{"identifier":"ParserRuleReturnScope"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getTree"},"scope":{"name":{"identifier":"r"}}},"type":{"name":{"identifier":"RuleAST"}}},"name":{"identifier":"tree"},"type":{"name":{"identifier":"RuleAST"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"ruleStart"}},"value":{"expression":{"name":{"identifier":"getStart"},"scope":{"name":{"identifier":"r"}}},"type":{"name":{"identifier":"Token"}}}}},{"expression":{"name":{"identifier":"setGrammarPtr"},"scope":{"name":{"identifier":"GrammarTransformPipeline"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"tree"}}]}},{"expression":{"name":{"identifier":"augmentTokensWithOriginalPosition"},"scope":{"name":{"identifier":"GrammarTransformPipeline"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"tree"}}]}},{"expression":{"name":{"identifier":"tree"}}}]},"catchClauses":[{"body":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"e"}},{"name":{"identifier":"ruleStart"}},{"operator":"PLUS","left":{"value":"error parsing rule created during left-recursion detection: "},"right":{"name":{"identifier":"ruleText"}}}]}}]},"parameter":{"isVarArgs":"false","name":{"identifier":"e"},"type":{"name":{"identifier":"Exception"}}}}]},{"expression":{}}]}
/analysis/leftrecursiveruletransformer.java	setAltASTPointers	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"BLOCK"},"scope":{"name":{"identifier":"ANTLRParser"}}}]},"type":{"name":{"identifier":"BlockAST"}}},"name":{"identifier":"ruleBlk"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ruleBlk"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"mainAlt"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"mainAlt"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"BlockAST"}}},"name":{"identifier":"primaryBlk"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"mainAlt"}},"arguments":[{"value":"1"}]},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"BlockAST"}}},"name":{"identifier":"opsBlk"},"type":{"name":{"identifier":"BlockAST"}}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"recPrimaryAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altAST"},"scope":{"name":{"identifier":"altInfo"}}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"primaryBlk"}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"AltAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"altAST"},"scope":{"name":{"identifier":"altInfo"}}}},"value":{"name":{"identifier":"altInfo"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"originalAltAST"},"scope":{"name":{"identifier":"altInfo"}}}},"value":{"name":{"identifier":"altInfo"}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recPrimaryAlts"},"scope":{"name":{"identifier":"r"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getElement"},"scope":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altAST"},"scope":{"name":{"identifier":"altInfo"}}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"opsBlk"}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"AltAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"altAST"},"scope":{"name":{"identifier":"altInfo"}}}},"value":{"name":{"identifier":"altInfo"}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"leftRecursiveAltInfo"},"scope":{"name":{"identifier":"originalAltAST"},"scope":{"name":{"identifier":"altInfo"}}}},"value":{"name":{"identifier":"altInfo"}}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"recOpAlts"},"scope":{"name":{"identifier":"r"}}}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/analysis/leftrecursiveruleanalyzer.java	loadPrecRuleTemplates	{"statements":[{"expression":{"variables":[{"initializer":{"value":"org/antlr/v4/tool/templates/LeftRecursiveRules.stg"},"name":{"identifier":"templateGroupFile"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"recRuleTemplates"}},"value":{"type":{"name":{"identifier":"STGroupFile"}},"arguments":[{"name":{"identifier":"templateGroupFile"}}]}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isDefined"},"scope":{"name":{"identifier":"recRuleTemplates"}},"arguments":[{"value":"recRule"}]}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"MISSING_CODE_GEN_TEMPLATES"},"scope":{"name":{"identifier":"ErrorType"}}},{"value":"LeftRecursiveRules"}]}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"CodeGenerator"}},"arguments":[{"name":{"identifier":"tool"}},{},{"name":{"identifier":"language"}}]},"name":{"identifier":"gen"},"type":{"name":{"identifier":"CodeGenerator"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"codegenTemplates"}},"value":{"name":{"identifier":"getTemplates"},"scope":{"name":{"identifier":"gen"}}}}}]}
/analysis/leftrecursiveruleanalyzer.java	setReturnValues	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"retvals"}},"value":{"name":{"identifier":"t"}}}}]}
/analysis/leftrecursiveruleanalyzer.java	setAltAssoc	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"ASSOC"}}},"name":{"identifier":"assoc"},"type":{"name":{"identifier":"ASSOC"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"getOptions"},"scope":{"name":{"identifier":"t"}}},"right":{}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getOptionString"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"assoc"}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"String"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"a"}},"right":{}},"thenStmt":{"statements":[{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"a"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"ASSOC"}}}}]},"elseStmt":{"condition":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"a"}},"arguments":[{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"ASSOC"}}}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"ILLEGAL_OPTION_VALUE"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"},"scope":{"name":{"identifier":"t"}}}},{"name":{"identifier":"getToken"},"scope":{"name":{"identifier":"getOptionAST"},"scope":{"name":{"identifier":"t"}},"arguments":[{"value":"assoc"}]}},{"value":"assoc"},{"name":{"identifier":"assoc"}}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"assoc"}},"value":{"name":{"identifier":"left"},"scope":{"name":{"identifier":"ASSOC"}}}}}]}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"assoc"}},"value":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"ASSOC"}}}}}]}}]}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altAssociativity"}},"arguments":[{"name":{"identifier":"alt"}}]},"right":{}},"right":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altAssociativity"}},"arguments":[{"name":{"identifier":"alt"}}]},"right":{"name":{"identifier":"assoc"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"toolError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"}}},"arguments":[{"name":{"identifier":"INTERNAL_ERROR"},"scope":{"name":{"identifier":"ErrorType"}}},{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"all operators of alt "},"right":{"name":{"identifier":"alt"}}},"right":{"value":" of left-recursive rule must have same associativity"}}]}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"altAssociativity"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"assoc"}}]}}]}
/analysis/leftrecursiveruleanalyzer.java	binaryAlt	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"originalAltTree"}}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altTree"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"isListLabel"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"stripLeftRecursion"},"arguments":[{"name":{"identifier":"altTree"}}]},"name":{"identifier":"lrlabel"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"lrlabel"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"lrlabel"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isListLabel"}},"value":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"lrlabel"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"leftRecursiveRuleRefLabels"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"String"}}]},"arguments":[{"name":{"identifier":"lrlabel"}},{"name":{"identifier":"altLabel"}}]}]}}]}},{"expression":{"name":{"identifier":"stripAltLabel"},"arguments":[{"name":{"identifier":"altTree"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"nextPrecedence"},"arguments":[{"name":{"identifier":"alt"}}]},"name":{"identifier":"nextPrec"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altTree"}},"value":{"name":{"identifier":"addPrecedenceArgToRules"},"arguments":[{"name":{"identifier":"altTree"}},{"name":{"identifier":"nextPrec"}}]}}},{"expression":{"name":{"identifier":"stripAltLabel"},"arguments":[{"name":{"identifier":"altTree"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"text"},"arguments":[{"name":{"identifier":"altTree"}}]},"name":{"identifier":"altText"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altText"}},"value":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"altText"}}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"altText"}},{"name":{"identifier":"label"}},{"name":{"identifier":"altLabel"}},{"name":{"identifier":"isListLabel"}},{"name":{"identifier":"originalAltTree"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nextPrec"},"scope":{"name":{"identifier":"a"}}},"value":{"name":{"identifier":"nextPrec"}}}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"binaryAlts"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"a"}}]}}]}
/analysis/leftrecursiveruleanalyzer.java	prefixAlt	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"originalAltTree"}}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altTree"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"name":{"identifier":"stripAltLabel"},"arguments":[{"name":{"identifier":"altTree"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"precedence"},"arguments":[{"name":{"identifier":"alt"}}]},"name":{"identifier":"nextPrec"},"type":{"type":"INT"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altTree"}},"value":{"name":{"identifier":"addPrecedenceArgToRules"},"arguments":[{"name":{"identifier":"altTree"}},{"name":{"identifier":"nextPrec"}}]}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"text"},"arguments":[{"name":{"identifier":"altTree"}}]},"name":{"identifier":"altText"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altText"}},"value":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"altText"}}}}},{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"altText"}},{},{"name":{"identifier":"altLabel"}},{"value":"false"},{"name":{"identifier":"originalAltTree"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"nextPrec"},"scope":{"name":{"identifier":"a"}}},"value":{"name":{"identifier":"nextPrec"}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"prefixAndOtherAlts"}},"arguments":[{"name":{"identifier":"a"}}]}}]}
/analysis/leftrecursiveruleanalyzer.java	suffixAlt	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"originalAltTree"}}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altTree"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{},"name":{"identifier":"label"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"isListLabel"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"stripLeftRecursion"},"arguments":[{"name":{"identifier":"altTree"}}]},"name":{"identifier":"lrlabel"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"lrlabel"}},"right":{}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"label"}},"value":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"lrlabel"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"isListLabel"}},"value":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"getParent"},"scope":{"name":{"identifier":"lrlabel"}}}},"right":{"name":{"identifier":"PLUS_ASSIGN"}}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"leftRecursiveRuleRefLabels"}},"arguments":[{"type":{"name":{"identifier":"Pair"},"typeArguments":[{"name":{"identifier":"GrammarAST"}},{"name":{"identifier":"String"}}]},"arguments":[{"name":{"identifier":"lrlabel"}},{"name":{"identifier":"altLabel"}}]}]}}]}},{"expression":{"name":{"identifier":"stripAltLabel"},"arguments":[{"name":{"identifier":"altTree"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"text"},"arguments":[{"name":{"identifier":"altTree"}}]},"name":{"identifier":"altText"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"altText"}},"value":{"name":{"identifier":"trim"},"scope":{"name":{"identifier":"altText"}}}}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"altText"}},{"name":{"identifier":"label"}},{"name":{"identifier":"altLabel"}},{"name":{"identifier":"isListLabel"}},{"name":{"identifier":"originalAltTree"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"name":{"identifier":"put"},"scope":{"name":{"identifier":"suffixAlts"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"a"}}]}}]}
/analysis/leftrecursiveruleanalyzer.java	otherAlt	{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"dupTree"},"scope":{"name":{"identifier":"originalAltTree"}}},"type":{"name":{"identifier":"AltAST"}}},"name":{"identifier":"altTree"},"type":{"name":{"identifier":"AltAST"}}}]}},{"expression":{"name":{"identifier":"stripAltLabel"},"arguments":[{"name":{"identifier":"altTree"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"text"},"arguments":[{"name":{"identifier":"altTree"}}]},"name":{"identifier":"altText"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"condition":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}},"right":{}},"elseExpr":{},"thenExpr":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"altLabel"},"scope":{"name":{"identifier":"altTree"}}}}},"name":{"identifier":"altLabel"},"type":{"name":{"identifier":"String"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}},"arguments":[{"name":{"identifier":"alt"}},{"name":{"identifier":"altText"}},{},{"name":{"identifier":"altLabel"}},{"value":"false"},{"name":{"identifier":"originalAltTree"}}]},"name":{"identifier":"a"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"prefixAndOtherAlts"}},"arguments":[{"name":{"identifier":"a"}}]}}]}
/analysis/leftrecursiveruleanalyzer.java	getArtificialOpPrecRule	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"recRuleTemplates"}},"arguments":[{"value":"recRule"}]},"name":{"identifier":"ruleST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleST"}},"arguments":[{"value":"ruleName"},{"name":{"identifier":"ruleName"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleArg"}]},"name":{"identifier":"ruleArgST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleST"}},"arguments":[{"value":"argName"},{"name":{"identifier":"ruleArgST"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleSetResultAction"}]},"name":{"identifier":"setResultST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleST"}},"arguments":[{"value":"setResultAction"},{"name":{"identifier":"setResultST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleST"}},"arguments":[{"value":"userRetvals"},{"name":{"identifier":"retvals"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}]}},"name":{"identifier":"opPrecRuleAlts"},"type":{"name":{"identifier":"LinkedHashMap"},"typeArguments":[{"name":{"identifier":"Integer"}},{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}]}}]}},{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"opPrecRuleAlts"}},"arguments":[{"name":{"identifier":"binaryAlts"}}]}},{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"opPrecRuleAlts"}},"arguments":[{"name":{"identifier":"ternaryAlts"}}]}},{"expression":{"name":{"identifier":"putAll"},"scope":{"name":{"identifier":"opPrecRuleAlts"}},"arguments":[{"name":{"identifier":"suffixAlts"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"opPrecRuleAlts"}},"arguments":[{"name":{"identifier":"alt"}}]},"name":{"identifier":"altInfo"},"type":{"name":{"identifier":"LeftRecursiveRuleAltInfo"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"recRuleTemplates"}},"arguments":[{"value":"recRuleAlt"}]},"name":{"identifier":"altST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getInstanceOf"},"scope":{"name":{"identifier":"codegenTemplates"}},"arguments":[{"value":"recRuleAltPredicate"}]},"name":{"identifier":"predST"},"type":{"name":{"identifier":"ST"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"predST"}},"arguments":[{"value":"opPrec"},{"name":{"identifier":"precedence"},"arguments":[{"name":{"identifier":"alt"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"predST"}},"arguments":[{"value":"ruleName"},{"name":{"identifier":"ruleName"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altST"}},"arguments":[{"value":"pred"},{"name":{"identifier":"predST"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altST"}},"arguments":[{"value":"alt"},{"name":{"identifier":"altInfo"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altST"}},"arguments":[{"value":"precOption"},{"name":{"identifier":"PRECEDENCE_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"altST"}},"arguments":[{"value":"opPrec"},{"name":{"identifier":"precedence"},"arguments":[{"name":{"identifier":"alt"}}]}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleST"}},"arguments":[{"value":"opAlts"},{"name":{"identifier":"altST"}}]}}]},"iterable":{"name":{"identifier":"keySet"},"scope":{"name":{"identifier":"opPrecRuleAlts"}}},"variable":{"variables":[{"name":{"identifier":"alt"},"type":{"type":"INT"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ruleST"}},"arguments":[{"value":"primaryAlts"},{"name":{"identifier":"prefixAndOtherAlts"}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"}},"arguments":[{"value":"left-recursion"},{"name":{"identifier":"render"},"scope":{"name":{"identifier":"ruleST"}}}]}},{"expression":{"name":{"identifier":"render"},"scope":{"name":{"identifier":"ruleST"}}}}]}
/analysis/leftrecursiveruleanalyzer.java	addPrecedenceArgToRules	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"thenStmt":{"expression":{}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithTypePreorderDFS"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"of"},"scope":{"name":{"identifier":"IntervalSet"}},"arguments":[{"name":{"identifier":"RULE_REF"}}]}]},"name":{"identifier":"outerAltRuleRefs"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"x"}},"type":{"name":{"identifier":"RuleRefAST"}}},"name":{"identifier":"rref"},"type":{"name":{"identifier":"RuleRefAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rref"}}},"arguments":[{"name":{"identifier":"ruleName"}}]},"name":{"identifier":"recursive"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"operator":"EQUALS","left":{"name":{"identifier":"rref"}},"right":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"outerAltRuleRefs"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"outerAltRuleRefs"}}},"right":{"value":"1"}}]}},"name":{"identifier":"rightmost"},"type":{"type":"BOOLEAN"}}]}},{"condition":{"operator":"AND","left":{"name":{"identifier":"recursive"}},"right":{"name":{"identifier":"rightmost"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"GrammarAST"}},"arguments":[{"type":{"name":{"identifier":"CommonToken"}},"arguments":[{"name":{"identifier":"INT"},"scope":{"name":{"identifier":"ANTLRParser"}}},{"operator":"PLUS","left":{"value":""},"right":{"name":{"identifier":"prec"}}}]}]},"name":{"identifier":"dummyValueNode"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"setOption"},"scope":{"name":{"identifier":"rref"}},"arguments":[{"name":{"identifier":"PRECEDENCE_OPTION_NAME"},"scope":{"name":{"identifier":"LeftRecursiveRuleTransformer"}}},{"name":{"identifier":"dummyValueNode"}}]}}]}}]},"iterable":{"name":{"identifier":"outerAltRuleRefs"}},"variable":{"variables":[{"name":{"identifier":"x"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"t"}}}]}
/analysis/leftrecursiveruleanalyzer.java	hasImmediateRecursiveRuleRefs	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getFirstChildWithType"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"BLOCK"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"blk"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"blk"}},"right":{}},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"blk"}}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"getChildren"},"scope":{"name":{"identifier":"blk"}}},"arguments":[{"name":{"identifier":"i"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"alt"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"alt"}},"arguments":[{"value":"0"}]},"name":{"identifier":"first"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"first"}},"right":{}},"thenStmt":{}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"first"}}},"right":{"name":{"identifier":"ELEMENT_OPTIONS"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"first"}},"value":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"alt"}},"arguments":[{"value":"1"}]}}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"first"}},"right":{}},"thenStmt":{"statements":[{}]}}]}},{"condition":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"first"}}},"right":{"name":{"identifier":"RULE_REF"}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"first"}}},"arguments":[{"name":{"identifier":"ruleName"}}]}},"thenStmt":{"expression":{"value":"true"}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"first"}},"arguments":[{"value":"1"}]},"name":{"identifier":"rref"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rref"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"rref"}}},"right":{"name":{"identifier":"RULE_REF"}}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rref"}}},"arguments":[{"name":{"identifier":"ruleName"}}]}},"thenStmt":{"expression":{"value":"true"}}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"value":"false"}}]}
/analysis/leftrecursiveruleanalyzer.java	stripLeftRecursion	{"statements":[{"expression":{"variables":[{"initializer":{},"name":{"identifier":"lrlabel"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"first"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"leftRecurRuleIndex"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"first"}}},"right":{"name":{"identifier":"ELEMENT_OPTIONS"}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"first"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"value":"1"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"leftRecurRuleIndex"}},"value":{"value":"1"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"first"}},"arguments":[{"value":"1"}]},"name":{"identifier":"rref"},"type":{"name":{"identifier":"Tree"}}}]}},{"condition":{"operator":"OR","left":{"inner":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"first"}}},"right":{"name":{"identifier":"RULE_REF"}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"first"}}},"arguments":[{"name":{"identifier":"ruleName"}}]}}},"right":{"inner":{"operator":"AND","left":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"rref"}},"right":{}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"rref"}}},"right":{"name":{"identifier":"RULE_REF"}}}},"right":{"name":{"identifier":"equals"},"scope":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"rref"}}},"arguments":[{"name":{"identifier":"ruleName"}}]}}}},"thenStmt":{"statements":[{"condition":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"first"}}},"right":{"name":{"identifier":"ASSIGN"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"first"}}},"right":{"name":{"identifier":"PLUS_ASSIGN"}}}},"thenStmt":{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"lrlabel"}},"value":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"first"}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}}},{"expression":{"name":{"identifier":"deleteChild"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"name":{"identifier":"leftRecurRuleIndex"}}]}},{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"name":{"identifier":"leftRecurRuleIndex"}}]},"type":{"name":{"identifier":"GrammarAST"}}},"name":{"identifier":"newFirstChild"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"name":{"identifier":"setTokenStartIndex"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"newFirstChild"}}}]}}]}},{"expression":{"name":{"identifier":"lrlabel"}}}]}
/analysis/leftrecursiveruleanalyzer.java	stripAltLabel	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"altAST"}}},"name":{"identifier":"start"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenStopIndex"},"scope":{"name":{"identifier":"altAST"}}},"name":{"identifier":"stop"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenStream"}},"arguments":[{"name":{"identifier":"i"}}]}},"right":{"name":{"identifier":"POUND"}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"setTokenStopIndex"},"scope":{"name":{"identifier":"altAST"}},"arguments":[{"operator":"MINUS","left":{"name":{"identifier":"i"}},"right":{"value":"1"}}]}},{}]}}]},"compare":{"operator":"GREATER_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"start"}}},"initialization":[{"variables":[{"initializer":{"name":{"identifier":"stop"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_DECREMENT","expression":{"name":{"identifier":"i"}}}]}]}
/analysis/leftrecursiveruleanalyzer.java	text	{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"t"}},"right":{}},"thenStmt":{"expression":{"value":""}}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"t"}}},"name":{"identifier":"tokenStartIndex"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getTokenStopIndex"},"scope":{"name":{"identifier":"t"}}},"name":{"identifier":"tokenStopIndex"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"ignore"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"ELEMENT_OPTIONS"}}]},"name":{"identifier":"optionsSubTrees"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"ignore"}},"arguments":[{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"sub"}}},{"name":{"identifier":"getTokenStopIndex"},"scope":{"name":{"identifier":"sub"}}}]}}]},"iterable":{"name":{"identifier":"optionsSubTrees"}},"variable":{"variables":[{"name":{"identifier":"sub"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"noOptions"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodesWithType"},"scope":{"name":{"identifier":"t"}},"arguments":[{"type":{"name":{"identifier":"IntervalSet"}},"arguments":[{"name":{"identifier":"ASSIGN"}},{"name":{"identifier":"PLUS_ASSIGN"}}]}]},"name":{"identifier":"labeledSubTrees"},"type":{"name":{"identifier":"List"},"typeArguments":[{"name":{"identifier":"GrammarAST"}}]}}]}},{"body":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"noOptions"}},"arguments":[{"name":{"identifier":"getTokenStartIndex"},"scope":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"sub"}},"arguments":[{"value":"0"}]}}]}}]},"iterable":{"name":{"identifier":"labeledSubTrees"}},"variable":{"variables":[{"name":{"identifier":"sub"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"buf"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"tokenStartIndex"}},"name":{"identifier":"i"},"type":{"type":"INT"}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"ignore"}},"arguments":[{"name":{"identifier":"i"}}]},"thenStmt":{"statements":[{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}},{}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenStream"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"tok"},"type":{"name":{"identifier":"Token"}}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"StringBuilder"}}},"name":{"identifier":"elementOptions"},"type":{"name":{"identifier":"StringBuilder"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"noOptions"}},"arguments":[{"name":{"identifier":"i"}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNodeWithTokenIndex"},"scope":{"name":{"identifier":"t"}},"arguments":[{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"tok"}}}]},"name":{"identifier":"node"},"type":{"name":{"identifier":"GrammarAST"}}}]}},{"condition":{"operator":"AND","left":{"operator":"NOT_EQUALS","left":{"name":{"identifier":"node"}},"right":{}},"right":{"inner":{"operator":"OR","left":{"operator":"OR","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tok"}}},"right":{"name":{"identifier":"TOKEN_REF"}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tok"}}},"right":{"name":{"identifier":"STRING_LITERAL"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tok"}}},"right":{"name":{"identifier":"RULE_REF"}}}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"elementOptions"}},"arguments":[{"value":"tokenIndex="}]},"arguments":[{"name":{"identifier":"getTokenIndex"},"scope":{"name":{"identifier":"tok"}}}]}}]}},{"condition":{"expression":{"name":{"identifier":"node"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"node"}},"type":{"name":{"identifier":"GrammarASTWithOptions"}}},"name":{"identifier":"o"},"type":{"name":{"identifier":"GrammarASTWithOptions"}}}]}},{"body":{"statements":[{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"elementOptions"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"elementOptions"}},"arguments":[{"value":","}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"elementOptions"}},"arguments":[{"name":{"identifier":"getKey"},"scope":{"name":{"identifier":"entry"}}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"elementOptions"}},"arguments":[{"value":"="}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"elementOptions"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"getValue"},"scope":{"name":{"identifier":"entry"}}}}]}}]},"iterable":{"name":{"identifier":"entrySet"},"scope":{"name":{"identifier":"getOptions"},"scope":{"name":{"identifier":"o"}}}},"variable":{"variables":[{"name":{"identifier":"entry"},"type":{"name":{"identifier":"Entry"},"scope":{"name":{"identifier":"Map"}},"typeArguments":[{"name":{"identifier":"String"}},{"name":{"identifier":"GrammarAST"}}]}}]}}]}}]}},{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"tok"}}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}},{"condition":{"operator":"AND","left":{"operator":"AND","left":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"tok"}}},"right":{"name":{"identifier":"RULE_REF"}}},"right":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"tokenStopIndex"}}}},"right":{"operator":"EQUALS","left":{"name":{"identifier":"getType"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenStream"}},"arguments":[{"name":{"identifier":"i"}}]}},"right":{"name":{"identifier":"ARG_ACTION"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"["},"right":{"name":{"identifier":"getText"},"scope":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"tokenStream"}},"arguments":[{"name":{"identifier":"i"}}]}}},"right":{"value":"]"}}]}},{"expression":{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}}]}},{"condition":{"operator":"GREATER","left":{"name":{"identifier":"length"},"scope":{"name":{"identifier":"elementOptions"}}},"right":{"value":"0"}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"append"},"scope":{"name":{"identifier":"buf"}},"arguments":[{"value":"<"}]},"arguments":[{"name":{"identifier":"elementOptions"}}]},"arguments":[{"value":">"}]}}]}}]},"condition":{"operator":"LESS_EQUALS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"tokenStopIndex"}}}},{"expression":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"buf"}}}}]}
/analysis/leftrecursiveruleanalyzer.java	precedence	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"MINUS","left":{"name":{"identifier":"numAlts"}},"right":{"name":{"identifier":"alt"}}},"right":{"value":"1"}}}]}
/analysis/leftrecursiveruleanalyzer.java	nextPrecedence	{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"precedence"},"arguments":[{"name":{"identifier":"alt"}}]},"name":{"identifier":"p"},"type":{"type":"INT"}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"get"},"scope":{"name":{"identifier":"altAssociativity"}},"arguments":[{"name":{"identifier":"alt"}}]},"right":{"name":{"identifier":"right"},"scope":{"name":{"identifier":"ASSOC"}}}},"thenStmt":{"expression":{"name":{"identifier":"p"}}}},{"expression":{"operator":"PLUS","left":{"name":{"identifier":"p"}},"right":{"value":"1"}}}]}
/analysis/leftrecursiveruleanalyzer.java	toString	{"statements":[{"expression":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"PrecRuleOperatorCollector{"},"right":{"value":"binaryAlts="}},"right":{"name":{"identifier":"binaryAlts"}}},"right":{"value":", ternaryAlts="}},"right":{"name":{"identifier":"ternaryAlts"}}},"right":{"value":", suffixAlts="}},"right":{"name":{"identifier":"suffixAlts"}}},"right":{"value":", prefixAndOtherAlts="}},"right":{"name":{"identifier":"prefixAndOtherAlts"}}},"right":{"value":"}"}}}]}
/analysis/analysispipeline.java	process	{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LeftRecursionDetector"}},"arguments":[{"name":{"identifier":"g"}},{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"lr"},"type":{"name":{"identifier":"LeftRecursionDetector"}}}]}},{"expression":{"name":{"identifier":"check"},"scope":{"name":{"identifier":"lr"}}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"listOfRecursiveCycles"},"scope":{"name":{"identifier":"lr"}}}}},"thenStmt":{}},{"condition":{"name":{"identifier":"isLexer"},"scope":{"name":{"identifier":"g"}}},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"processParser"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"processLexer"}}}]}}]}
/analysis/analysispipeline.java	processLexer	{"statements":[{"body":{"statements":[{"condition":{"name":{"identifier":"isFragment"},"scope":{"name":{"identifier":"rule"}}},"thenStmt":{"statements":[{}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LL1Analyzer"}},"arguments":[{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"analyzer"},"type":{"name":{"identifier":"LL1Analyzer"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"LOOK"},"scope":{"name":{"identifier":"analyzer"}},"arguments":[{"index":{"name":{"identifier":"index"},"scope":{"name":{"identifier":"rule"}}},"name":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}}},{}]},"name":{"identifier":"look"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"look"}},"arguments":[{"name":{"identifier":"EPSILON"},"scope":{"name":{"identifier":"Token"}}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"grammarError"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"EPSILON_TOKEN"},"scope":{"name":{"identifier":"ErrorType"}}},{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"getToken"},"scope":{"inner":{"expression":{"name":{"identifier":"getChild"},"scope":{"name":{"identifier":"ast"},"scope":{"name":{"identifier":"rule"}}},"arguments":[{"value":"0"}]},"type":{"name":{"identifier":"GrammarAST"}}}}},{"name":{"identifier":"name"},"scope":{"name":{"identifier":"rule"}}}]}}]}}]},"iterable":{"name":{"identifier":"values"},"scope":{"name":{"identifier":"rules"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"rule"},"type":{"name":{"identifier":"Rule"}}}]}}]}
/analysis/analysispipeline.java	processParser	{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"decisionLOOK"},"scope":{"name":{"identifier":"g"}}},"value":{"type":{"name":{"identifier":"ArrayList"},"typeArguments":[{"origin":"TYPE","componentType":{"name":{"identifier":"IntervalSet"}}}]},"arguments":[{"operator":"PLUS","left":{"name":{"identifier":"getNumberOfDecisions"},"scope":{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}},"right":{"value":"1"}}]}}},{"body":{"statements":[{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"LL1"},{"operator":"PLUS","left":{"operator":"PLUS","left":{"operator":"PLUS","left":{"value":"\nDECISION "},"right":{"name":{"identifier":"decision"},"scope":{"name":{"identifier":"s"}}}},"right":{"value":" in rule "}},"right":{"name":{"identifier":"name"},"scope":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"s"}}}]}}}]}},{"expression":{"variables":[{"name":{"identifier":"look"},"type":{"origin":"TYPE","componentType":{"name":{"identifier":"IntervalSet"}}}}]}},{"condition":{"name":{"identifier":"nonGreedy"},"scope":{"name":{"identifier":"s"}}},"elseStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"LL1Analyzer"}},"arguments":[{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}]},"name":{"identifier":"anal"},"type":{"name":{"identifier":"LL1Analyzer"}}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"look"}},"value":{"name":{"identifier":"getDecisionLookahead"},"scope":{"name":{"identifier":"anal"}},"arguments":[{"name":{"identifier":"s"}}]}}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"LL1"},{"operator":"PLUS","left":{"value":"look="},"right":{"name":{"identifier":"toString"},"scope":{"name":{"identifier":"Arrays"}},"arguments":[{"name":{"identifier":"look"}}]}}]}}]},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"look"}},"value":{"elementType":{"name":{"identifier":"IntervalSet"}},"levels":[{"dimension":{"operator":"PLUS","left":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}}]}}}]}},{"check":{"operator":"GREATER_EQUALS","left":{"operator":"PLUS","left":{"name":{"identifier":"decision"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}},"right":{"name":{"identifier":"size"},"scope":{"name":{"identifier":"decisionLOOK"},"scope":{"name":{"identifier":"g"}}}}}},{"expression":{"name":{"identifier":"setSize"},"scope":{"name":{"identifier":"Utils"}},"arguments":[{"name":{"identifier":"decisionLOOK"},"scope":{"name":{"identifier":"g"}}},{"operator":"PLUS","left":{"name":{"identifier":"decision"},"scope":{"name":{"identifier":"s"}}},"right":{"value":"1"}}]}},{"expression":{"name":{"identifier":"set"},"scope":{"name":{"identifier":"decisionLOOK"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"name":{"identifier":"decision"},"scope":{"name":{"identifier":"s"}}},{"name":{"identifier":"look"}}]}},{"expression":{"name":{"identifier":"log"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}},"arguments":[{"value":"LL1"},{"operator":"PLUS","left":{"value":"LL(1)? "},"right":{"name":{"identifier":"disjoint"},"arguments":[{"name":{"identifier":"look"}}]}}]}}]},"iterable":{"name":{"identifier":"decisionToState"},"scope":{"name":{"identifier":"atn"},"scope":{"name":{"identifier":"g"}}}},"variable":{"variables":[{"name":{"identifier":"s"},"type":{"name":{"identifier":"DecisionState"}}}]}}]}
/analysis/analysispipeline.java	disjoint	{"statements":[{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"collision"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"IntervalSet"}}},"name":{"identifier":"combined"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"altLook"}},"right":{}},"thenStmt":{"expression":{"value":"false"}}},{"body":{"statements":[{"condition":{"operator":"EQUALS","left":{"name":{"identifier":"look"}},"right":{}},"thenStmt":{"expression":{"value":"false"}}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isNil"},"scope":{"name":{"identifier":"and"},"scope":{"name":{"identifier":"look"}},"arguments":[{"name":{"identifier":"combined"}}]}}},"thenStmt":{"statements":[{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"collision"}},"value":{"value":"true"}}},{}]}},{"expression":{"name":{"identifier":"addAll"},"scope":{"name":{"identifier":"combined"}},"arguments":[{"name":{"identifier":"look"}}]}}]},"iterable":{"name":{"identifier":"altLook"}},"variable":{"variables":[{"name":{"identifier":"look"},"type":{"name":{"identifier":"IntervalSet"}}}]}},{"expression":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"collision"}}}}]}
/analysis/leftrecursiondetector.java	check	{"statements":[{"body":{"statements":[{"expression":{"name":{"identifier":"clear"},"scope":{"name":{"identifier":"rulesVisitedPerRuleCheck"}}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rulesVisitedPerRuleCheck"}},"arguments":[{"name":{"identifier":"start"}}]}},{"expression":{"name":{"identifier":"check"},"arguments":[{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"start"}}}]},{"name":{"identifier":"start"}},{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}]}}]},"iterable":{"name":{"identifier":"ruleToStartState"},"scope":{"name":{"identifier":"atn"}}},"variable":{"variables":[{"name":{"identifier":"start"},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"isEmpty"},"scope":{"name":{"identifier":"listOfRecursiveCycles"}}}},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"leftRecursionCycles"},"scope":{"name":{"identifier":"errMgr"},"scope":{"name":{"identifier":"tool"},"scope":{"name":{"identifier":"g"}}}},"arguments":[{"name":{"identifier":"fileName"},"scope":{"name":{"identifier":"g"}}},{"name":{"identifier":"listOfRecursiveCycles"}}]}}]}}]}
/analysis/leftrecursiondetector.java	check	{"statements":[{"condition":{"expression":{"name":{"identifier":"s"}},"type":{"name":{"identifier":"RuleStopState"}}},"thenStmt":{"expression":{"value":"true"}}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"visitedStates"}},"arguments":[{"name":{"identifier":"s"}}]},"thenStmt":{"expression":{"value":"false"}}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"visitedStates"}},"arguments":[{"name":{"identifier":"s"}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getNumberOfTransitions"},"scope":{"name":{"identifier":"s"}}},"name":{"identifier":"n"},"type":{"type":"INT"}}]}},{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"stateReachesStopState"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"expression":{"variables":[{"initializer":{"name":{"identifier":"transition"},"scope":{"name":{"identifier":"s"}},"arguments":[{"name":{"identifier":"i"}}]},"name":{"identifier":"t"},"type":{"name":{"identifier":"Transition"}}}]}},{"condition":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}},"elseStmt":{"condition":{"name":{"identifier":"isEpsilon"},"scope":{"name":{"identifier":"t"}}},"thenStmt":{"statements":[{"expression":{"operator":"BINARY_OR","target":{"name":{"identifier":"stateReachesStopState"}},"value":{"name":{"identifier":"check"},"arguments":[{"name":{"identifier":"enclosingRule"}},{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}},{"name":{"identifier":"visitedStates"}}]}}}]}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"expression":{"name":{"identifier":"t"}},"type":{"name":{"identifier":"RuleTransition"}}},"name":{"identifier":"rt"},"type":{"name":{"identifier":"RuleTransition"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"getRule"},"scope":{"name":{"identifier":"g"}},"arguments":[{"name":{"identifier":"ruleIndex"},"scope":{"name":{"identifier":"rt"}}}]},"name":{"identifier":"r"},"type":{"name":{"identifier":"Rule"}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"rulesVisitedPerRuleCheck"}},"arguments":[{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}},"type":{"name":{"identifier":"RuleStartState"}}}]},"elseStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rulesVisitedPerRuleCheck"}},"arguments":[{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"expression":{"variables":[{"initializer":{"name":{"identifier":"check"},"arguments":[{"name":{"identifier":"r"}},{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}},{"type":{"name":{"identifier":"HashSet"},"typeArguments":[{"name":{"identifier":"ATNState"}}]}}]},"name":{"identifier":"nullable"},"type":{"type":"BOOLEAN"}}]}},{"expression":{"name":{"identifier":"remove"},"scope":{"name":{"identifier":"rulesVisitedPerRuleCheck"}},"arguments":[{"expression":{"name":{"identifier":"target"},"scope":{"name":{"identifier":"t"}}},"type":{"name":{"identifier":"RuleStartState"}}}]}},{"condition":{"name":{"identifier":"nullable"}},"thenStmt":{"statements":[{"expression":{"operator":"BINARY_OR","target":{"name":{"identifier":"stateReachesStopState"}},"value":{"name":{"identifier":"check"},"arguments":[{"name":{"identifier":"enclosingRule"}},{"name":{"identifier":"followState"},"scope":{"name":{"identifier":"rt"}}},{"name":{"identifier":"visitedStates"}}]}}}]}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"addRulesToCycle"},"arguments":[{"name":{"identifier":"enclosingRule"}},{"name":{"identifier":"r"}}]}}]}}]}}]},"compare":{"operator":"LESS","left":{"name":{"identifier":"i"}},"right":{"name":{"identifier":"n"}}},"initialization":[{"variables":[{"initializer":{"value":"0"},"name":{"identifier":"i"},"type":{"type":"INT"}}]}],"update":[{"operator":"POSTFIX_INCREMENT","expression":{"name":{"identifier":"i"}}}]},{"expression":{"name":{"identifier":"stateReachesStopState"}}}]}
/analysis/leftrecursiondetector.java	addRulesToCycle	{"statements":[{"expression":{"variables":[{"initializer":{"value":"false"},"name":{"identifier":"foundCycle"},"type":{"type":"BOOLEAN"}}]}},{"body":{"statements":[{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"rulesInCycle"}},"arguments":[{"name":{"identifier":"targetRule"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rulesInCycle"}},"arguments":[{"name":{"identifier":"enclosingRule"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"foundCycle"}},"value":{"value":"true"}}}]}},{"condition":{"name":{"identifier":"contains"},"scope":{"name":{"identifier":"rulesInCycle"}},"arguments":[{"name":{"identifier":"enclosingRule"}}]},"thenStmt":{"statements":[{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"rulesInCycle"}},"arguments":[{"name":{"identifier":"targetRule"}}]}},{"expression":{"operator":"ASSIGN","target":{"name":{"identifier":"foundCycle"}},"value":{"value":"true"}}}]}}]},"iterable":{"name":{"identifier":"listOfRecursiveCycles"}},"variable":{"variables":[{"name":{"identifier":"rulesInCycle"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}},{"condition":{"operator":"LOGICAL_COMPLEMENT","expression":{"name":{"identifier":"foundCycle"}}},"thenStmt":{"statements":[{"expression":{"variables":[{"initializer":{"type":{"name":{"identifier":"OrderedHashSet"},"typeArguments":[{"name":{"identifier":"Rule"}}]}},"name":{"identifier":"cycle"},"type":{"name":{"identifier":"Set"},"typeArguments":[{"name":{"identifier":"Rule"}}]}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"cycle"}},"arguments":[{"name":{"identifier":"targetRule"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"cycle"}},"arguments":[{"name":{"identifier":"enclosingRule"}}]}},{"expression":{"name":{"identifier":"add"},"scope":{"name":{"identifier":"listOfRecursiveCycles"}},"arguments":[{"name":{"identifier":"cycle"}}]}}]}}]}
